---
x-generator: NSwag v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: FOYS API
  version: 1.0.0
servers:
- url: https://staging-api.foys.io/foys
- url: https://prod.foys.tech/
paths:
  "/api/v1/admin/external-organisations":
    get:
      tags:
      - AdminExternalOrganisations
      operationId: AdminExternalOrganisations_GetAll
      parameters:
      - name: organisationTypeCode
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 1
      - name: lastMinutes
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: isActive
        in: query
        schema:
          type: boolean
        x-position: 3
      - name: name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: federationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 5
      - name: packageId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 6
      - name: clubName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 9
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfExternalOrganisationDto"
      security:
      - JWT: []
  "/api/v1/admin/external-organisations/{externalOrganisationId}/packages":
    get:
      tags:
      - AdminExternalOrganisations
      operationId: AdminExternalOrganisations_GetExternalOrganisationPackages
      parameters:
      - name: externalOrganisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/admin/external-organisations/{externalOrganisationId}/packages/{packageId}":
    put:
      tags:
      - AdminExternalOrganisations
      operationId: AdminExternalOrganisations_AssignPackageToExternalOrganisation
      parameters:
      - name: externalOrganisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: packageId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/connect/authorize":
    get:
      tags:
      - Authorization
      operationId: Authorization_AuthorizeGET
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
    post:
      tags:
      - Authorization
      operationId: Authorization_AuthorizePOST
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  "/connect/token":
    post:
      tags:
      - Authorization
      operationId: Authorization_Exchange
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  "/connect/userinfo":
    get:
      tags:
      - Authorization
      operationId: Authorization_Userinfo
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/admin/{spaPath}":
    get:
      tags:
      - Spa
      operationId: Spa_Index
      parameters:
      - name: spaPath
        in: path
        required: true
        schema:
          type: string
          default: ''
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/management/{organisationId}/{spaPath}":
    get:
      tags:
      - Spa
      operationId: Spa_Index2
      parameters:
      - name: spaPath
        in: path
        required: true
        schema:
          type: string
          default: ''
          nullable: true
        x-position: 1
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/kb/{spaPath}":
    get:
      tags:
      - Spa
      operationId: Spa_Index3
      parameters:
      - name: spaPath
        in: path
        required: true
        schema:
          type: string
          default: ''
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/page/{spaPath}":
    get:
      tags:
      - Spa
      operationId: Spa_Index4
      parameters:
      - name: spaPath
        in: path
        required: true
        schema:
          type: string
          default: ''
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/token":
    post:
      tags:
      - AuthTokens
      operationId: AuthTokens_CreateTokenJson
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/JwtAuthTokenLogin"
        required: true
        x-position: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AuthTokenResponse"
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: string
  "/api/v1/refreshToken":
    post:
      tags:
      - AuthTokens
      operationId: AuthTokens_RefreshToken
      requestBody:
        x-name: tokenRequest
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RefreshTokenRequest"
        required: true
        x-position: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AuthTokenResponse"
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: string
  "/api/v1/parentToken":
    get:
      tags:
      - AuthTokens
      operationId: AuthTokens_GetTokenForParentOrganisation
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AuthTokenResponse"
      security:
      - JWT: []
  "/api/v1/organisation-token/{organisationId}":
    get:
      tags:
      - AuthTokens
      operationId: AuthTokens_GetTokenForOrganisation
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AuthTokenResponse"
      security:
      - JWT: []
  "/api/v1/sbn/person/{federationMembershipIdentifier}":
    get:
      tags:
      - SBNMembers
      operationId: SBNMembers_GetPerson
      parameters:
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SBNPersonDto"
      security:
      - JWT: []
  "/api/v1/pub/federations/{federationId}/clubs":
    get:
      tags:
      - PubClubs
      description: Sorted by 'updated_at'
      operationId: PubClubs_IndexClubs
      parameters:
      - name: club_type_id
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 1
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: updated_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedClubsPUB"
  "/api/v1/pub/clubs/{clubId}":
    get:
      tags:
      - PubClubs
      operationId: PubClubs_ShowClub
      parameters:
      - name: clubId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedClubInfo"
  "/api/v1/pub/clubs/{clubId}/dashboard":
    get:
      tags:
      - PubClubs
      operationId: PubClubs_DashboardClub
      parameters:
      - name: clubId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedClubInfo"
  "/api/v1/pub/clubs/{clubId}/member/{memberId}/dashboard":
    get:
      tags:
      - PubClubs
      operationId: PubClubs_ClubDashboard
      parameters:
      - name: clubId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedClubDashboard"
      security:
      - JWT: []
  "/api/v1/pub/clubs/{clubId}/sponsors":
    get:
      tags:
      - PubClubs
      operationId: PubClubs_IndexSponsors
      parameters:
      - name: clubId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedSponsors"
      security:
      - JWT: []
  "/api/v1/pub/organisations/{configId}":
    post:
      tags:
      - PubExternalOrganisation
      operationId: PubExternalOrganisation_SignUpOrganisation
      parameters:
      - name: configId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationSignUpInput"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  "/api/v1/pub/clubs/{clubId}/members/{memberId}/messages":
    get:
      tags:
      - PubMessages
      operationId: PubMessages_IndexMessages
      parameters:
      - name: clubId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 50
        x-position: 3
      - name: lastId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedMessagesList"
      security:
      - JWT: []
  "/api/v1/pub/messages":
    get:
      tags:
      - PubMessages
      operationId: PubMessages_MemberMessages
      parameters:
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: lastId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedMessagesList"
      security:
      - JWT: []
  "/api/v1/pub/message/{id}":
    get:
      tags:
      - PubMessages
      operationId: PubMessages_MessageDetails
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedMessagesList"
      security:
      - JWT: []
  "/api/v1/pub/message/{id}/mark_as_read":
    put:
      tags:
      - PubMessages
      operationId: PubMessages_MarkAsRead
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedMessage"
      security:
      - JWT: []
  "/api/v1/pub/organisations/{organisationId}/send_message":
    post:
      tags:
      - PubMessages
      operationId: PubMessages_SendMessage
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MessagePUB"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedMessage"
      security:
      - JWT: []
  "/api/v1/pub/my_environment/{configId}":
    get:
      tags:
      - PubMyEnvironment
      operationId: PubMyEnvironment_Get
      parameters:
      - name: configId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MyEnvironmentConfigOutput"
  "/api/v1/pub/clubs/{clubId}/news":
    get:
      tags:
      - PubNews
      description: Sorted by 'updated_at'
      operationId: PubNews_IndexClubNews
      parameters:
      - name: clubId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: updated_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      - name: lang
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedNews"
  "/api/v1/pub/clubs/{clubId}/member/{memberId}/news":
    get:
      tags:
      - PubNews
      operationId: PubNews_MemberClubNews
      parameters:
      - name: clubId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 20
        x-position: 3
      - name: lastId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedNews"
      security:
      - JWT: []
  "/api/v1/pub/federations/{federationId}/news":
    get:
      tags:
      - PubNews
      description: Sorted by 'updated_at'
      operationId: PubNews_IndexFederationNews
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: updated_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      - name: lang
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedNews"
  "/api/v1/pub/federations/{federationId}/filteredNews":
    get:
      tags:
      - PubNews
      description: Sorted by 'updated_at'
      operationId: PubNews_IndexPagedFederationNews
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 20
        x-position: 2
      - name: lastId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WrappedNews"
      security:
      - JWT: []
  "/api/v1/pub/clubs/{clubId}/news/{newsId}":
    get:
      tags:
      - PubNews
      operationId: PubNews_ShowClubNews
      parameters:
      - name: clubId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: newsId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      - name: lang
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedNewsDetails"
  "/api/v1/pub/federations/{federationId}/news/{newsId}":
    get:
      tags:
      - PubNews
      operationId: PubNews_ShowFederationNews
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: newsId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      - name: lang
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedNewsDetails"
  "/api/v1/pub/tag_assignments":
    get:
      tags:
      - PubPersonTag
      operationId: PubPersonTag_Tags
      parameters:
      - name: reference_date
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 1
      - name: q
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: tag_type
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/TagType"
        x-position: 3
      - name: tag_types[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagType"
        x-position: 4
      - name: include_parent_tags
        in: query
        schema:
          type: boolean
        x-position: 5
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedPersonTags"
      security:
      - JWT: []
    post:
      tags:
      - PubPersonTag
      operationId: PubPersonTag_CreatePersonTag
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonTagAdd"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/pub/tag_assignments/{id}":
    put:
      tags:
      - PubPersonTag
      operationId: PubPersonTag_UpdatePersonTag
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonTagUpdate"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    delete:
      tags:
      - PubPersonTag
      operationId: PubPersonTag_DeleteTagAssignment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/pub/communication_tags":
    put:
      tags:
      - PubPersonTag
      operationId: PubPersonTag_UpdatePersonCommunicationTags
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/pub/pushTopics":
    get:
      tags:
      - PubPushRegistration
      operationId: PubPushRegistration_GetPushTopics
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/pub/pushregistration":
    post:
      tags:
      - PubPushRegistration
      operationId: PubPushRegistration_RegisterForPush
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WrappedPushRegistration"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/pub/pushregistration/{memberId}":
    delete:
      tags:
      - PubPushRegistration
      operationId: PubPushRegistration_Delete
      parameters:
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/avatars":
    post:
      tags:
      - PubAvatars
      operationId: PubAvatars_Submit
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    delete:
      tags:
      - PubAvatars
      operationId: PubAvatars_Delete
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/public-calendar":
    get:
      tags:
      - PubCalendar
      operationId: PubCalendar_GetPublicCalendarEventOccurrences
      parameters:
      - name: organisationId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: locationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: start
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      - name: end
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      - name: city
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: tagNames[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 6
      - name: tagIds[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 7
      - name: calendarItemTypes[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 8
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 9
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPubCalendarEventOccurrenceDto"
  "/api/v2/pub/public-calendar/{occurrenceId}":
    get:
      tags:
      - PubCalendar
      operationId: PubCalendar_GetOccurrence
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PubCalendarEventOccurrenceDto"
  "/api/v2/pub/calendar":
    get:
      tags:
      - PubCalendar
      operationId: PubCalendar_GetCalendarItems
      parameters:
      - name: start
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 1
      - name: end
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 2
      - name: calendarItemTypes[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPubCalendarEventOccurrenceDto"
      security:
      - JWT: []
  "/api/v2/pub/calendar-items/{occurrenceId}":
    get:
      tags:
      - PubCalendar
      operationId: PubCalendar_GetCalendarEventDetails
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PubCalendarEventDetailsBaseDto"
  "/api/v2/pub/calendar/{occurrenceId}/attendees":
    get:
      tags:
      - PubCalendar
      operationId: PubCalendar_ShowEventAttendees
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PubPersonAttendanceInfoDto"
      security:
      - JWT: []
  "/api/v2/pub/occurrence/{occurrenceId}/attendance-type/{attendanceType}/attendees":
    get:
      tags:
      - PubCalendar
      operationId: PubCalendar_GetAttendeesPaged
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: attendanceType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/EventAttendanceType"
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPubPersonAttendanceInfoDto"
      security:
      - JWT: []
  "/api/v2/pub/occurrence/{occurrenceId}/attendance-type/{attendanceType}/attendees-count":
    get:
      tags:
      - PubCalendar
      operationId: PubCalendar_GetAttendeesCountPerStatus
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: attendanceType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/EventAttendanceType"
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PubAttendeesCountPerStatusDto"
      security:
      - JWT: []
  "/api/v2/pub/attendance":
    post:
      tags:
      - PubCalendar
      description: 'Register person attendance. Attendance types: 0 = Unspecified,
        1 = Going, 2 = Interested, 3 = NotGoing'
      operationId: PubCalendar_SetAttendance
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PubSetAttendanceDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/calendar/{occurrenceId}/unregister":
    delete:
      tags:
      - PubCalendar
      description: Attendance unclicked
      operationId: PubCalendar_Unregister
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PubSetAttendanceDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/attendance/overwrite":
    post:
      tags:
      - PubCalendar
      operationId: PubCalendar_OverwriteAttendance
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PubOverwriteAttendanceDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/pub/organisations/{organisationId}/board-committees":
    get:
      tags:
      - PubCommittees
      operationId: PubCommittees_BoardCommittees
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfCommitteePubDto"
  "/api/v2/pub/contact-forms/{configurationId}":
    post:
      tags:
      - PubContactForm
      operationId: PubContactForm_Submit
      parameters:
      - name: configurationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: content
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  "/api/v2/pub/custom-field-responses":
    get:
      tags:
      - PubCustomFieldResponses
      operationId: PubCustomFieldResponses_GetCustomFieldsWithResponses
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CustomFieldResponsePubDto"
      security:
      - JWT: []
    put:
      tags:
      - PubCustomFieldResponses
      operationId: PubCustomFieldResponses_UpdateCustomFieldResponses
      requestBody:
        x-name: responses
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/CustomFieldResponseDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/pub/custom-field-groups":
    get:
      tags:
      - PubCustomFields
      operationId: PubCustomFields_GetCustomFieldGroups
      parameters:
      - name: disciplineId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CustomFieldGroupPubDto"
      security:
      - JWT: []
  "/api/v2/pub/custom-fields":
    get:
      tags:
      - PubCustomFields
      operationId: PubCustomFields_GetCustomFields
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CustomFieldPubDto"
      security:
      - JWT: []
  "/api/v2/pub/data-integrity/settings":
    get:
      tags:
      - PubDataIntegrity
      operationId: PubDataIntegrity_GetDataIntegritySettings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DataIntegritySettingsDto"
      security:
      - JWT: []
  "/api/v2/pub/data-integrity":
    post:
      tags:
      - PubDataIntegrity
      operationId: PubDataIntegrity_SubmitMissingData
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DataIntegrityInputDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/pub/disciplines":
    get:
      tags:
      - PubDisciplines
      operationId: PubDisciplines_GetDisciplines
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DisciplinePubDto"
      security:
      - JWT: []
  "/api/v2/pub/document-types":
    get:
      tags:
      - PubDocumentTypes
      operationId: PubDocumentTypes_GetDocumentTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DocumentTypePubDto"
      security:
      - JWT: []
  "/api/v2/pub/document-types/{documentTypeId}/upload":
    post:
      tags:
      - PubDocumentTypes
      operationId: PubDocumentTypes_UploadDocument
      parameters:
      - name: documentTypeId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/duties":
    get:
      tags:
      - PubDuties
      operationId: PubDuties_GetCalendarEventsForRange
      parameters:
      - name: start
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 1
      - name: end
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PubDutyDto"
      security:
      - JWT: []
  "/api/v2/pub/favourite-persons":
    get:
      tags:
      - PubFavouritePerson
      operationId: PubFavouritePerson_GetAll
      parameters:
      - name: SearchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfFavouritePersonDto"
      security:
      - JWT: []
  "/api/v2/pub/favourite-persons/{personId}":
    post:
      tags:
      - PubFavouritePerson
      operationId: PubFavouritePerson_AddPersonToFavourite
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    delete:
      tags:
      - PubFavouritePerson
      operationId: PubFavouritePerson_DeletePerson
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/pub/organisations/{organisationId}/role-assignments":
    get:
      tags:
      - PubFederationRoles
      operationId: PubFederationRoles_RoleAssignments
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPubPersonFederationRoleDto"
      security:
      - JWT: []
  "/api/v2/pub/geocoding/street":
    get:
      tags:
      - PubGeocoding
      operationId: PubGeocoding_GetStreetNumber
      parameters:
      - name: zipCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: houseNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeocodeAddressDto"
  "/api/v2/pub/geocoding/coordinates":
    get:
      tags:
      - PubGeocoding
      operationId: PubGeocoding_GetAddressCoordinates
      parameters:
      - name: Address1
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: Address2
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: Address3
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: HouseNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: HouseNumberExtension
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: ZipCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: City
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: CountryCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: CountryName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      - name: Suffix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 10
      - name: CountryId
        in: query
        schema:
          type: integer
        x-position: 11
      - name: Latitude
        in: query
        schema:
          type: number
          format: double
          nullable: true
        x-position: 12
      - name: Longitude
        in: query
        schema:
          type: number
          format: double
          nullable: true
        x-position: 13
      - name: Id
        in: query
        schema:
          type: integer
          format: int32
        x-position: 14
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GeocodeAddressDto"
  "/api/v2/pub/languages":
    get:
      tags:
      - PubLanguages
      operationId: PubLanguages_GetAvailableLanguages
      parameters:
      - name: organisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LanguageDto"
  "/api/v2/pub/organisations/{organisationId}/links":
    get:
      tags:
      - PubLinks
      operationId: PubLinks_Links
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LinkPubDto"
      security:
      - JWT: []
  "/api/v2/pub/organisations/{organisationId}/locations":
    get:
      tags:
      - PubLocations
      operationId: PubLocations_Locations
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LocationPubDto"
  "/api/v2/pub/media-folders":
    get:
      tags:
      - PubMediaFolders
      operationId: PubMediaFolders_GetMediaFolders
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MediaFolderPubDto"
      security:
      - JWT: []
  "/api/v2/pub/media-folders/{mediaFolderId}/files":
    get:
      tags:
      - PubMediaFolders
      operationId: PubMediaFolders_GetMediaFiles
      parameters:
      - name: mediaFolderId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPubAttachmentDto"
      security:
      - JWT: []
  "/api/v2/pub/members":
    get:
      tags:
      - PubMembers
      operationId: PubMembers_OrganisationMembers
      parameters:
      - name: SearchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPersonListPubDto"
      security:
      - JWT: []
  "/api/v2/pub/members/search":
    get:
      tags:
      - PubMembers
      operationId: PubMembers_OrganisationMembersSearch
      parameters:
      - name: SearchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPersonSearchPubDto"
      security:
      - JWT: []
  "/api/v2/pub/members/{memberId}":
    get:
      tags:
      - PubMembers
      operationId: PubMembers_ShowMember
      parameters:
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonPubDto"
      security:
      - JWT: []
  "/api/v2/pub/members/me":
    get:
      tags:
      - PubMembers
      operationId: PubMembers_GetLoggedInMemberDetails
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonPrivateDetailsPubDto"
      security:
      - JWT: []
    put:
      tags:
      - PubMembers
      operationId: PubMembers_PutUpdateMemberDetails
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonPrivateDetailsPubDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/members/family-members":
    get:
      tags:
      - PubMembers
      operationId: PubMembers_GetFamilyMembersOfLoggedInMember
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonPrivateDetailsPubDto"
      security:
      - JWT: []
  "/api/v2/pub/members/{memberId}/details":
    get:
      tags:
      - PubMembers
      operationId: PubMembers_GetSpecificMemberDetails
      parameters:
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonPrivateDetailsPubDto"
      security:
      - JWT: []
  "/api/v2/pub/members/{memberId}/committees":
    get:
      tags:
      - PubMembers
      operationId: PubMembers_GetSpecificMemberCommittees
      parameters:
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonCommitteePubDto"
      security:
      - JWT: []
  "/api/v2/pub/members/privacy":
    put:
      tags:
      - PubMembers
      operationId: PubMembers_UpdatePrivacySettings
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonPrivacySettingsDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/members/billing-info":
    get:
      tags:
      - PubMembers
      operationId: PubMembers_GetMemberBillingInfo
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BillingInfoPubDto"
      security:
      - JWT: []
    post:
      tags:
      - PubMembers
      operationId: PubMembers_AddMemberBillingInfo
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BillingInfoPubDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    put:
      tags:
      - PubMembers
      operationId: PubMembers_UpdateMemberBillingInfo
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BillingInfoPubDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/pub/active-memberships":
    get:
      tags:
      - PubMembers
      operationId: PubMembers_GetActiveMemberships
      parameters:
      - name: organisationId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: federationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: username
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonActiveMembershipPubDto"
  "/api/v2/pub/organisations/{organisationId}/password-reset/{configId}":
    post:
      tags:
      - PubMembers
      operationId: PubMembers_PasswordReset
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: configId
        in: path
        required: true
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PasswordChangeRequestDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  "/api/v1/pub/federation/{organisationId}/password_reset/{configId}":
    post:
      tags:
      - PubMembers
      operationId: PubMembers_PasswordReset2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: configId
        in: path
        required: true
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PasswordChangeRequestDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  "/api/v2/pub/organisations/{organisationId}/restore-account/{configId}":
    post:
      tags:
      - PubMembers
      operationId: PubMembers_RestoreAccount
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: configId
        in: path
        required: true
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RestoreAccountRequestDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  "/api/v1/pub/federation/{organisationId}/restore_account/{configId}":
    post:
      tags:
      - PubMembers
      operationId: PubMembers_RestoreAccount2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: configId
        in: path
        required: true
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RestoreAccountRequestDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  "/api/v2/pub/password-change":
    post:
      tags:
      - PubMembers
      operationId: PubMembers_PasswordChange
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MemberChangePasswordRequestDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/reset-password":
    post:
      tags:
      - PubMembers
      operationId: PubMembers_ResetPassword
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ResetPasswordPubRequestDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  "/api/v2/pub/code-of-conduct-file":
    post:
      tags:
      - PubMembers
      operationId: PubMembers_UploadCodeOfConductFile
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/members/signup/{configId}":
    post:
      tags:
      - PubMembers
      operationId: PubMembers_SignUpMemberWithConfig
      parameters:
      - name: configId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignUpMemberWithMyEnvironmentConfigInputDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SignUpMemberWithMyEnvironmentConfigOutputDto"
    put:
      tags:
      - PubMembers
      operationId: PubMembers_UpdateMemberWithConfig
      parameters:
      - name: configId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignUpMemberWithMyEnvironmentConfigInputDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/members/public-token/{configId}":
    post:
      tags:
      - PubMembers
      operationId: PubMembers_GetPublicToken
      parameters:
      - name: configId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/members/validate-username/{configId}":
    post:
      tags:
      - PubMembers
      operationId: PubMembers_ValidateUsername
      parameters:
      - name: configId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonValidateUsernamePubDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  "/api/v2/pub/members/membership-report":
    get:
      tags:
      - PubMembers
      operationId: PubMembers_GetMembershipReport
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/pub/persons/{personId}/membership-report":
    get:
      tags:
      - PubMembers
      operationId: PubMembers_GetMembershipReport2
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/members/language":
    post:
      tags:
      - PubMembers
      operationId: PubMembers_SetUserLanguage
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatePersonLanguageDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/pub/members/existing-person":
    get:
      tags:
      - PubMembers
      operationId: PubMembers_FindExistingPerson
      parameters:
      - name: FirstName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: LastName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: BirthDate
        in: query
        schema:
          type: string
          format: date-time
        x-position: 3
      - name: Gender
        in: query
        schema:
          "$ref": "#/components/schemas/Gender"
        x-position: 4
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  "/api/v2/pub/members/federation-roles":
    get:
      tags:
      - PubMembers
      operationId: PubMembers_GetFederationRolesForPerson
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MemberFederationRolePubDto"
      security:
      - JWT: []
  "/api/v2/pub/members/family-member/calculation":
    post:
      tags:
      - PubMembers
      operationId: PubMembers_CalculatePlanAssignmentAndSubscriptionForNewFamilyMember
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FamilyMemberCalculationInput"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FamilyMemberCalculationOutput"
      security:
      - JWT: []
  "/api/v2/pub/members/family-member/{configId}":
    post:
      tags:
      - PubMembers
      operationId: PubMembers_CreateFamilyMemberForParentPerson
      parameters:
      - name: configId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateFamilyMemberForParentPersonInput"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CreateFamilyMemberForParentPersonOutput"
      security:
      - JWT: []
  "/api/v2/pub/messages":
    get:
      tags:
      - PubMessages
      operationId: PubMessages_MemberMessages2
      parameters:
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfMessagePubDto"
      security:
      - JWT: []
  "/api/v2/pub/message/{id}/mark-as-read":
    put:
      tags:
      - PubMessages
      operationId: PubMessages_MarkAsRead2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/send-message":
    post:
      tags:
      - PubMessages
      operationId: PubMessages_SendMessage2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateMessagePubDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessagePubDto"
      security:
      - JWT: []
  "/api/v2/pub/my-environment/{configId}":
    get:
      tags:
      - PubMyEnvironment
      operationId: PubMyEnvironment_Get2
      parameters:
      - name: configId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MyEnvironmentConfigOutputPubDto"
  "/api/v2/pub/organisations/{organisationId}/news-items":
    get:
      tags:
      - PubNewsItems
      operationId: PubNewsItems_GetAll
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: tagNames[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PubNewsItemDto"
  "/api/v2/pub/news-items/for-member":
    get:
      tags:
      - PubNewsItems
      operationId: PubNewsItems_GetForMember
      parameters:
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 20
        x-position: 1
      - name: lastId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PubNewsItemDto"
      security:
      - JWT: []
  "/api/v2/pub/organisations/{organisationId}/news-items/{id}":
    get:
      tags:
      - PubNewsItems
      operationId: PubNewsItems_Get
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PubNewsItemDto"
  "/api/v2/pub/organisations/{organisationId}/clubs":
    get:
      tags:
      - PubOrganisations
      operationId: PubOrganisations_Clubs
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: clubTypeIds[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 2
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: Code
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 8
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfClubListPubDto"
  "/api/v2/pub/organisations/lookup":
    get:
      tags:
      - PubOrganisations
      operationId: PubOrganisations_OrganisationsLookup
      parameters:
      - name: clubTypeIds[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 1
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: Code
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOrganisationLookupPubDto"
      security:
      - JWT: []
  "/api/v2/pub/organisations/{id}":
    get:
      tags:
      - PubOrganisations
      operationId: PubOrganisations_OrganisationDetails
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationDetailsPubDto"
  "/api/v2/pub/organisations/{organisationId}/external-organisations":
    get:
      tags:
      - PubOrganisations
      operationId: PubOrganisations_ExternalOrganisations
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: OrganisationTypeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 3
      - name: Latitude
        in: query
        schema:
          type: number
          format: double
          nullable: true
        x-position: 4
      - name: Longitude
        in: query
        schema:
          type: number
          format: double
          nullable: true
        x-position: 5
      - name: Distance
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 6
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 8
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 9
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfExternalOrganisationsListPubDto"
  "/api/v2/pub/organisations/{configId}":
    post:
      tags:
      - PubOrganisations
      operationId: PubOrganisations_SignUpOrganisation
      parameters:
      - name: configId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationSignUpInputPubDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  "/api/v2/pub/parent-info":
    get:
      tags:
      - PubParentInfo
      operationId: PubParentInfo_GetAll
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ParentInfoPubDto"
      security:
      - JWT: []
  "/api/v2/pub/members/{personId}/parent-info":
    get:
      tags:
      - PubParentInfo
      operationId: PubParentInfo_GetForPerson
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ParentInfoPubDto"
      security:
      - JWT: []
  "/api/v2/pub/person-disciplines":
    get:
      tags:
      - PubPersonDisciplines
      operationId: PubPersonDisciplines_GetAll
      parameters:
      - name: PersonId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPersonDisciplineDto"
      security:
      - JWT: []
    post:
      tags:
      - PubPersonDisciplines
      operationId: PubPersonDisciplines_CreateDiscipline
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonDisciplineDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/pub/person-disciplines/{id}":
    put:
      tags:
      - PubPersonDisciplines
      operationId: PubPersonDisciplines_UpdateDiscipline
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonDisciplineDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    delete:
      tags:
      - PubPersonDisciplines
      operationId: PubPersonDisciplines_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/pub/person-duty-stats":
    get:
      tags:
      - PubPersonDutyStats
      operationId: PubPersonDutyStats_GetPersonDutyStats
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PubPersonDutyStatsDto"
      security:
      - JWT: []
  "/api/v2/pub/person-relations/children":
    get:
      tags:
      - PubPersonRelations
      operationId: PubPersonRelations_GetChildren
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonRelationDto"
      security:
      - JWT: []
  "/api/v2/pub/person-relations/parents/{personId}":
    get:
      tags:
      - PubPersonRelations
      operationId: PubPersonRelations_GetParents
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: personId
        in: path
        required: true
        schema:
          type: string
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonRelationDto"
      security:
      - JWT: []
  "/api/v2/pub/person-relations":
    put:
      tags:
      - PubPersonRelations
      operationId: PubPersonRelations_UpdatePersonRelations
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonRelationDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/person-relations/{personId}":
    post:
      tags:
      - PubPersonRelations
      operationId: PubPersonRelations_ImpersonateUser
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/person-relations/{id}":
    delete:
      tags:
      - PubPersonRelations
      operationId: PubPersonRelations_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/pub/person-relations/types":
    get:
      tags:
      - PubPersonRelations
      operationId: PubPersonRelations_GetPersonRelationTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonRelationTypePubDto"
      security:
      - JWT: []
  "/api/v2/pub/tag-assignments":
    get:
      tags:
      - PubPersonTag
      operationId: PubPersonTag_Tags2
      parameters:
      - name: ReferenceDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 1
      - name: TagType
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPubPersonTagDto"
      security:
      - JWT: []
    post:
      tags:
      - PubPersonTag
      operationId: PubPersonTag_CreatePersonTag2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PubPersonTagAddDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PubPersonTagDto"
      security:
      - JWT: []
  "/api/v2/pub/members/{memberId}/tags":
    get:
      tags:
      - PubPersonTag
      operationId: PubPersonTag_GetTagsForSpecificMember
      parameters:
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: ReferenceDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 2
      - name: TagType
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/TagType"
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPubPersonTagDto"
      security:
      - JWT: []
  "/api/v2/pub/tag-assignments/{id}":
    put:
      tags:
      - PubPersonTag
      operationId: PubPersonTag_UpdatePersonTag2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PubPersonTagUpdateDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PubPersonTagDto"
      security:
      - JWT: []
    delete:
      tags:
      - PubPersonTag
      operationId: PubPersonTag_DeleteTagAssignment2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/pub/tag-assignments/communication-tags":
    put:
      tags:
      - PubPersonTag
      operationId: PubPersonTag_UpdatePersonCommunicationTags2
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/pub/organisations/{organisationId}/photo-albums":
    get:
      tags:
      - PubPhotoAlbums
      operationId: PubPhotoAlbums_PhotoAlbums
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPhotoAlbumPubDto"
      security:
      - JWT: []
  "/api/v2/pub/members/plan-assignments/{assignmentId}":
    put:
      tags:
      - PubPlanAssignments
      operationId: PubPlanAssignments_CancelPlanAssignment
      parameters:
      - name: assignmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanAssignmentCancelPubDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/members/plan-assignments/{id}/change":
    post:
      tags:
      - PubPlanAssignments
      operationId: PubPlanAssignments_ChangePlan
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanAssignmentChangePubDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/members/plan-assignments":
    post:
      tags:
      - PubPlanAssignments
      operationId: PubPlanAssignments_CreatePlanAssignment
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanAssignmentCreatePubDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/members/available-plans":
    get:
      tags:
      - PubPlanAssignments
      operationId: PubPlanAssignments_GetAvailablePlans
      parameters:
      - name: startDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 1
      - name: configId
        in: query
        schema:
          type: string
          format: guid
        x-position: 2
      - name: forNextSeason
        in: query
        schema:
          type: boolean
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PlanPubDto"
      security:
      - JWT: []
  "/api/v2/pub/members/new-person-plans":
    get:
      tags:
      - PubPlanAssignments
      operationId: PubPlanAssignments_GetNewPersonFederationPlans
      parameters:
      - name: gender
        in: query
        schema:
          "$ref": "#/components/schemas/Gender"
        x-position: 1
      - name: birthdate
        in: query
        schema:
          type: string
          format: date-time
        x-position: 2
      - name: startDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      - name: returnFamilyPlans
        in: query
        schema:
          type: boolean
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v2/pub/organisations/{organisationId}/plan-cancellation-reasons":
    get:
      tags:
      - PubPlanCancellationReasons
      operationId: PubPlanCancellationReasons_Index
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PlanCancellationReasonPubDto"
      security:
      - JWT: []
  "/api/v2/pub/plans-and-services":
    post:
      tags:
      - PubPlansAndServices
      operationId: PubPlansAndServices_SubmitPlansAndServices
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlansAndServicesInputPubDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlansAndServicesOutputPubDto"
      security:
      - JWT: []
  "/api/v2/pub/family-plans-and-services":
    post:
      tags:
      - PubPlansAndServices
      operationId: PubPlansAndServices_SubmitPlansAndServices2
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FamilyPlansAndServicesInputPubDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlansAndServicesOutputPubDto"
      security:
      - JWT: []
  "/api/v2/pub/players-license":
    get:
      tags:
      - PubPlayersLicense
      operationId: PubPlayersLicense_GetPlayersLicense
      parameters:
      - name: federationMembershipIdentifiers
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonActivePlayerLicenseDto"
      security:
      - JWT: []
  "/api/v2/pub/player-licenses":
    post:
      tags:
      - PubPlayersLicense
      operationId: PubPlayersLicense_CreatePlayerLicense
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PubCreatePlayerLicenseDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InvoicePaymentLinkDto"
      security:
      - JWT: []
    get:
      tags:
      - PubPlayersLicense
      operationId: PubPlayersLicense_GetPlayerLicenses
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PubPlayerLicenseDto"
      security:
      - JWT: []
  "/api/v2/pub/player-licenses/cancel":
    post:
      tags:
      - PubPlayersLicense
      operationId: PubPlayersLicense_CancelPlayerLicense
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PubCancelPlayerLicenseDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/pub/player-license-types":
    get:
      tags:
      - PubPlayersLicense
      operationId: PubPlayersLicense_GetPlayerLicenseTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PubPlayerLicenseTypeDto"
      security:
      - JWT: []
  "/api/v2/pub/push-topics":
    get:
      tags:
      - PubPushRegistrations
      operationId: PubPushRegistrations_GetPushTopics
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v2/pub/push-registration":
    post:
      tags:
      - PubPushRegistrations
      operationId: PubPushRegistrations_RegisterForPush
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PushRegistrationDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    delete:
      tags:
      - PubPushRegistrations
      operationId: PubPushRegistrations_Delete
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/pub/registration-forms/{id}":
    get:
      tags:
      - PubRegistrationForm
      operationId: PubRegistrationForm_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RegistrationFormConfigPubDto"
    post:
      tags:
      - PubRegistrationForm
      operationId: PubRegistrationForm_Post
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegistrationFormEntryDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RegistrationFormResultPubDto"
  "/api/v2/pub/registration-forms/{id}/plans":
    get:
      tags:
      - PubRegistrationForm
      operationId: PubRegistrationForm_GetPlans
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: startDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/RegistrationFormPlanDto"
  "/api/v2/pub/registration-forms/{id}/validateVoucher/{voucherCode}":
    get:
      tags:
      - PubRegistrationForm
      operationId: PubRegistrationForm_GetVoucher
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: voucherCode
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PublicVoucherInfoDto"
  "/api/v2/pub/seasons/next":
    get:
      tags:
      - PubSeasons
      operationId: PubSeasons_GetNextSeason
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SeasonDto"
      security:
      - JWT: []
  "/api/v2/pub/services":
    get:
      tags:
      - PubServices
      operationId: PubServices_GetServicesAvailableForPerson
      parameters:
      - name: configId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ServicePubDto"
      security:
      - JWT: []
  "/api/v2/pub/organisations/{organisationId}/sponsors":
    get:
      tags:
      - PubSponsors
      operationId: PubSponsors_Sponsors
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfSponsorPubDto"
      security:
      - JWT: []
  "/api/v2/pub/subscriptions/active":
    get:
      tags:
      - PubSubscriptions
      operationId: PubSubscriptions_GetActiveSubscriptionsForPerson
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SubscriptionPubDto"
      security:
      - JWT: []
  "/api/v2/pub/subscriptions/family-members/active":
    get:
      tags:
      - PubSubscriptions
      operationId: PubSubscriptions_GetActiveSubscriptionsForFamilyMember
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FamilyMemberSubscriptionWrapperDto"
      security:
      - JWT: []
  "/api/v2/pub/surveys":
    get:
      tags:
      - PubSurveys
      operationId: PubSurveys_GetSurveys
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPubSurveyDto"
      security:
      - JWT: []
  "/api/v2/pub/surveys/{id}":
    get:
      tags:
      - PubSurveys
      operationId: PubSurveys_GetSurveyGET
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PubSurveyDetailsDto"
      security:
      - JWT: []
    post:
      tags:
      - PubSurveys
      operationId: PubSurveys_GetSurveyPOST
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PubSurveySubmissionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/pub/organisations/{organisationId}/tags":
    get:
      tags:
      - PubTags
      operationId: PubTags_Index
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: tagType
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/TagType"
        x-position: 3
      - name: tagTypes[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagType"
        x-position: 4
      - name: IsHistoric
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 5
      - name: IsVisibleForPersons
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 6
      - name: IncludeParentTags
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 7
      - name: UpdatedSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 8
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 11
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfTagPubDto"
  "/api/v2/pub/organisations/{organisationId}/teams":
    get:
      tags:
      - PubTeams
      operationId: PubTeams_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfTeamListPubDto"
      security:
      - JWT: []
  "/api/v2/pub/organisations/{organisationId}/teams/{teamId}":
    get:
      tags:
      - PubTeams
      operationId: PubTeams_Get
      parameters:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamPubDto"
      security:
      - JWT: []
  "/api/v2/pub/organisations/{organisationId}/team-roles":
    get:
      tags:
      - PubTeams
      operationId: PubTeams_GetTeamRoles
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TeamRolePubDto"
  "/api/v2/pub/organisations/{organisationId}/teams/{teamId}/members":
    get:
      tags:
      - PubTeams
      operationId: PubTeams_GetTeamMembers
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TeamMemberPubDto"
  "/api/v2/pub/transponders":
    get:
      tags:
      - PubTransponders
      operationId: PubTransponders_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfTransponderDto"
      security:
      - JWT: []
    post:
      tags:
      - PubTransponders
      operationId: PubTransponders_Create
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransponderDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransponderDto"
      security:
      - JWT: []
  "/api/v2/pub/transponders/{id}":
    get:
      tags:
      - PubTransponders
      operationId: PubTransponders_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransponderDto"
      security:
      - JWT: []
    put:
      tags:
      - PubTransponders
      operationId: PubTransponders_Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransponderDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransponderDto"
      security:
      - JWT: []
    delete:
      tags:
      - PubTransponders
      operationId: PubTransponders_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/pub/transponders/types":
    get:
      tags:
      - PubTransponders
      operationId: PubTransponders_GetTranspondersTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TransponderTypeDto"
      security:
      - JWT: []
  "/api/v2/pub/websites/{id}/search":
    get:
      tags:
      - PubWebsites
      operationId: PubWebsites_Search
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Query
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfWebPageSearchResultDto"
  "/api/v1/ops/billingitems/{organisationId}":
    get:
      tags:
      - OpsBillingItems
      operationId: OpsBillingItems_GetAll
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: TargetOrganisationId
        in: query
        description: Use for case when you need to create billing items for for sub
          organisations (Club, External Organisation , with federation plans) in this
          case organisationId in URL path should be FederationId and this input is
          ClubId
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: MemberId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      - name: PlanAssignmentId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      - name: StartDateBefore
        in: query
        description: Apply filter StartDateBefore >= StartDate (Time value will be
          truncated)
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 5
      - name: StartDateAfter
        in: query
        description: Apply filter StartDateAfter <= StartDate (Time value will be
          truncated)
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 6
      - name: EndDateBefore
        in: query
        description: Apply filter EndDateBefore >= EndDate (Time value will be truncated)
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 7
      - name: EndDateAfter
        in: query
        description: Apply filter EndDateAfter <= EndDate (Time value will be truncated)
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 8
      - name: InsertAtBefore
        in: query
        description: Apply filter InsertAtAfter >= InsertedAt (Time value will be
          truncated)
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 9
      - name: InsertAtAfter
        in: query
        description: Apply filter InsertAtAfter <= InsertedAt (Time value will be
          truncated)
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 10
      - name: InvoiceReferenceDate
        in: query
        description: Reference date to determine end of trial period
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 11
      - name: ChangeReasonCode
        in: query
        description: Filter out plan assignments based on change reason code
        schema:
          type: string
          nullable: true
        x-position: 12
      - name: Identifiers
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 13
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BillingItemDto"
      security:
      - JWT: []
  "/api/v1/ops/billingitems":
    post:
      tags:
      - OpsBillingItems
      operationId: OpsBillingItems_GetAllByIds
      requestBody:
        x-name: ids
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: guid
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BillingItemDto"
      security:
      - JWT: []
  "/api/v1/ops/billingitems/{organisationId}/register":
    post:
      tags:
      - OpsBillingItems
      operationId: OpsBillingItems_RegisterInvoice
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegisterInvoiceForBillingItemInput"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/ops/billingitems/{organisationId}/unregister":
    post:
      tags:
      - OpsBillingItems
      operationId: OpsBillingItems_UnregisterInvoice
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UnregisterInvoiceForBillingItemInput"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/clubs":
    get:
      tags:
      - OpsClubs
      operationId: OpsClubs_IndexClubs
      parameters:
      - name: has_finance_year_start_before
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 1
      - name: has_finance_year_start_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 2
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: updated_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedClubsOPS"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/email_templates":
    get:
      tags:
      - OpsEmailTemplate
      operationId: OpsEmailTemplate_GetTemplates
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: groupCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedEmailTemplatesOPS"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/email_template":
    post:
      tags:
      - OpsEmailTemplate
      operationId: OpsEmailTemplate_AddTemplate
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: template
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailTemplateAdd"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    patch:
      tags:
      - OpsEmailTemplate
      operationId: OpsEmailTemplate_UpdateTemplate
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: template
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailTemplateUpdate"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/send_email":
    post:
      tags:
      - OpsEmailTemplate
      operationId: OpsEmailTemplate_SendEmail
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailSendRequest"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/event-grid/trigger/person/{personId}":
    post:
      tags:
      - OpsEventGrid
      operationId: OpsEventGrid_TriggerEventGridForPerson
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/event-grid/trigger/{organisationId}/plan-assignment/{planAssignmentId}":
    post:
      tags:
      - OpsEventGrid
      operationId: OpsEventGrid_TriggerEventGridForPlanAssignment
      parameters:
      - name: planAssignmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/event-grid/trigger/organisation/{organisationId}":
    post:
      tags:
      - OpsEventGrid
      operationId: OpsEventGrid_TriggerEventGridForOrganisation
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/mail-notifier":
    post:
      tags:
      - OpsMailNotifier
      operationId: OpsMailNotifier_Notify
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsMailNotificationDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/members":
    get:
      tags:
      - OpsMembers
      operationId: OpsMembers_MembersList
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: club_guid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: federation_membership_number
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: organisation_guid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 4
      - name: federation_membership_number_start
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 5
      - name: federation_membership_number_end
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 6
      - name: plans_valid_on_date
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 7
      - name: has_club_plan
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 8
      - name: has_federation_plan
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 9
      - name: has_family_plan
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 10
      - name: has_plan_with_parent_guid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 11
      - name: has_plan_starting_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 12
      - name: has_plan_starting_before
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 13
      - name: has_plan_ending_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 14
      - name: has_plan_ending_before
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 15
      - name: has_plan_insertedat_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 16
      - name: has_plan_insertedat_before
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 17
      - name: has_plan_assignment_connected_to_organisation_id
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 18
      - name: q
        in: query
        schema:
          type: string
          nullable: true
        x-position: 19
      - name: updated_at
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 20
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 21
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 22
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedClubMembersOPS"
      security:
      - JWT: []
    post:
      tags:
      - OpsMembers
      operationId: OpsMembers_CreateClubMember
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WrappedMemberWithPlanAssignmentOps"
        required: true
        x-position: 2
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedMemberDetailsOPS"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/members/v2/search":
    get:
      tags:
      - OpsMembers
      summary: More details about dynamic filter can be found here https://dynamic-linq.net/basic-simple-query
      operationId: OpsMembers_MemberSearchAll
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: dynamicFilter
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonDto"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/members/search":
    get:
      tags:
      - OpsMembers
      operationId: OpsMembers_MemberSearch
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: search
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: tags
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 3
      - name: organisation_guid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 4
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: show_all
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 6
      - name: has_plan_assignment_connected_to_organisation_id
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 7
      - name: federationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: externalSystemIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedMembersShortInfosOPS"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/members/details":
    get:
      tags:
      - OpsMembers
      operationId: OpsMembers_MemberDetails
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: federationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedMemberDetailsOPS"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/members/{memberId}":
    get:
      tags:
      - OpsMembers
      operationId: OpsMembers_MemberDetails2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedMemberDetailsOPS"
      security:
      - JWT: []
    patch:
      tags:
      - OpsMembers
      operationId: OpsMembers_PatchClubMember
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WrappedBasicMemberDetailsOPS"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/members/{memberId}/family":
    get:
      tags:
      - OpsMembers
      operationId: OpsMembers_GetFamilyMembers
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      - name: date
        in: query
        schema:
          type: string
          format: date-time
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MemberDetailsOPS"
      security:
      - JWT: []
  "/api/v1/ops/federation-members/search":
    get:
      tags:
      - OpsMembers
      operationId: OpsMembers_SearchFederationMembers
      parameters:
      - name: search
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: organisationId
        in: query
        schema:
          type: string
          format: guid
        x-position: 2
      - name: federationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOpsPersonLookupDto"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/family":
    post:
      tags:
      - OpsMembers
      operationId: OpsMembers_CreateFamily
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WrappedFamily"
        required: true
        x-position: 2
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WrappedMemberDetailsOPS"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/members/{federationMembershipIdentifier}/sync-to-club/{clubId}":
    post:
      tags:
      - OpsMembers
      operationId: OpsMembers_SyncMemberFromFederationToClub
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: clubId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedMemberDetailsOPS"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/members/{memberId}/avatar":
    post:
      tags:
      - OpsMembers
      operationId: OpsMembers_UpdateMemberAvatar
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/organisations":
    get:
      tags:
      - OpsOrganisation
      operationId: OpsOrganisation_OrganisationsList
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: discriminator
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/TenantType2"
        x-position: 2
      - name: organisation_type
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: q
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: updated_at
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 5
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedOrganisationsOPS"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/organisations/from-parent-organisation":
    get:
      tags:
      - OpsOrganisation
      operationId: OpsOrganisation_GetAllFromOtherClubs
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOrganisationDto"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{id}":
    get:
      tags:
      - OpsOrganisation
      operationId: OpsOrganisation_OrganisationDetails
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationOpsDto"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{id}/locations":
    get:
      tags:
      - OpsOrganisation
      operationId: OpsOrganisation_OrganisationLocations
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LocationDtoExtended"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/organisations/{id}":
    get:
      tags:
      - OpsOrganisation
      operationId: OpsOrganisation_ScopedOrganisationDetails
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationOpsDto"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/organisations/search":
    get:
      tags:
      - OpsOrganisation
      operationId: OpsOrganisation_GetOrganisationsForAutocomplete
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Status
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/OrganisationStatus"
        x-position: 2
      - name: Discriminator
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/TenantType2"
        x-position: 3
      - name: Discriminators
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TenantType2"
        x-position: 4
      - name: OrganisationTypeCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: query
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedAutocompleteResponse"
      security:
      - JWT: []
  "/api/v1/ops/application-modules/permissions":
    post:
      tags:
      - OpsPermissions
      operationId: OpsPermissions_CollectPermissions
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FbPermissionCreateDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/services/permissions":
    post:
      tags:
      - OpsPermissions
      operationId: OpsPermissions_CollectPermissions2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FbPermissionCreateDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/application-modules/{module}":
    get:
      tags:
      - OpsPermissions
      operationId: OpsPermissions_GetPermissionsForModule
      parameters:
      - name: module
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OpsApplicationModuleDto"
      security:
      - JWT: []
  "/api/v1/ops/services/{module}":
    get:
      tags:
      - OpsPermissions
      operationId: OpsPermissions_GetPermissionsForModule2All
      parameters:
      - name: module
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OpsApplicationModuleDto"
      security:
      - JWT: []
  "/api/v1/ops/application-modules/system-roles/{module}":
    get:
      tags:
      - OpsPermissions
      operationId: OpsPermissions_GetSystemRolesForModule
      parameters:
      - name: module
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedSystemRolesOPS"
      security:
      - JWT: []
  "/api/v1/ops/services/system-roles/{module}":
    get:
      tags:
      - OpsPermissions
      operationId: OpsPermissions_GetSystemRolesForModule2
      parameters:
      - name: module
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedSystemRolesOPS"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/members/{memberId}/tag_assignments":
    post:
      tags:
      - OpsPersonTag
      operationId: OpsPersonTag_CreatePersonTag
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonTagAdd"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    get:
      tags:
      - OpsPersonTag
      operationId: OpsPersonTag_PersonTags
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      - name: reference_date
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      - name: q
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: tag_type
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/TagType"
        x-position: 5
      - name: tag_types[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagType"
        x-position: 6
      - name: include_parent_tags
        in: query
        schema:
          type: boolean
        x-position: 7
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 8
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 9
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedPersonTags"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/members/{memberId}/tag_assignments/{id}":
    put:
      tags:
      - OpsPersonTag
      operationId: OpsPersonTag_UpdateClubPersonTag
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 3
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonTagUpdate"
        required: true
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    delete:
      tags:
      - OpsPersonTag
      operationId: OpsPersonTag_DeleteClubTagAssignment
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/members/{memberId}/planAssignments/all":
    get:
      tags:
      - OpsPlanAssignments
      operationId: OpsPlanAssignments_MemberAllPlanAssignments
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedPlanAssignments"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/members/{memberId}/planAssignments/active":
    get:
      tags:
      - OpsPlanAssignments
      operationId: OpsPlanAssignments_MemberActivePlanAssignments
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedPlanAssignments"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/members/{memberId}/planAssignments":
    post:
      tags:
      - OpsPlanAssignments
      operationId: OpsPlanAssignments_AddPlanAssignment
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WrappedPlanAssignment"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanAssignmentDto"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/planAssignments/{assignmentId}/prolong":
    post:
      tags:
      - OpsPlanAssignments
      operationId: OpsPlanAssignments_Prolong
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: assignmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanAssignmentDto"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/members/{memberId}/planAssignments/{assignmentId}":
    patch:
      tags:
      - OpsPlanAssignments
      operationId: OpsPlanAssignments_UpdatePlanAssignment
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      - name: assignmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 3
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanAssignmentUpdate"
        required: true
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanAssignmentDto"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/planCancellationReasons":
    get:
      tags:
      - OpsPlans
      operationId: OpsPlans_ClubPlanCancellationReasons
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedPlanCancellationReasons"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/plans":
    get:
      tags:
      - OpsPlans
      operationId: OpsPlans_IndexFederationMembershipPlans
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: is_active
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: plan_code
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: category_type_code
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedPlans"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/plans/{planId}/price":
    get:
      tags:
      - OpsPlans
      operationId: OpsPlans_GetPlanPrice
      parameters:
      - name: planId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: start
        in: query
        schema:
          type: string
          format: date-time
        x-position: 2
      - name: end
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsPlanPriceDto"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/send_push":
    post:
      tags:
      - OpsPushNotification
      operationId: OpsPushNotification_SendFederationPushNotification
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PushNotificationRequest"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/settings":
    post:
      tags:
      - OpsSystemSettings
      operationId: OpsSystemSettings_PostExternalSystemSettings
      requestBody:
        x-name: settings
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/OpsCreateSystemSettingDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/settings/{module}":
    get:
      tags:
      - OpsSystemSettings
      operationId: OpsSystemSettings_GetSystemSettingsForModule
      parameters:
      - name: module
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/settings/{organisationId}/{module}":
    get:
      tags:
      - OpsSystemSettings
      operationId: OpsSystemSettings_GetSystemSettingsForOrganisation
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: module
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/tags":
    post:
      tags:
      - OpsTags
      operationId: OpsTags_CreateTag
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TagAdd"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    get:
      tags:
      - OpsTags
      operationId: OpsTags_TagsList
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: q
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: tag_type
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/TagType"
        x-position: 5
      - name: tag_types[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagType"
        x-position: 6
      - name: include_parent_tags
        in: query
        schema:
          type: boolean
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedTags"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/tags/{id}":
    put:
      tags:
      - OpsTags
      operationId: OpsTags_UpdateTag
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TagUpdate"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    delete:
      tags:
      - OpsTags
      operationId: OpsTags_DeleteTag
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/teams/{teamId}/members":
    get:
      tags:
      - OpsTeamMembers
      operationId: OpsTeamMembers_GetTeamMembers
      parameters:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamMembersList"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/teams":
    get:
      tags:
      - OpsTeams
      operationId: OpsTeams_GetTeams
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: club_id
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      - name: season_id
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      - name: q
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: updated_at
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 6
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 8
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedTeamsOPS"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/teams/{teamId}":
    get:
      tags:
      - OpsTeams
      operationId: OpsTeams_GetTeamDetails
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamDetailsOPS"
      security:
      - JWT: []
    put:
      tags:
      - OpsTeams
      operationId: OpsTeams_UpdateTeam
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamDetailsOPS"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/teams/lock":
    post:
      tags:
      - OpsTeams
      operationId: OpsTeams_SetTeamLock
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsSetTeamLockDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/users/{id}":
    get:
      tags:
      - OpsUsers
      operationId: OpsUsers_Get
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserOpsDto"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/users":
    get:
      tags:
      - OpsUsers
      operationId: OpsUsers_GetAll
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: EmailOrLogin
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: UserTypeId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SystemRoleId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      - name: SystemRoleCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: IncludePerson
        in: query
        schema:
          type: boolean
        x-position: 7
      - name: IncludeCurrentUser
        in: query
        schema:
          type: boolean
        x-position: 8
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 9
      - name: userIds[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 10
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 11
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 12
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 13
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfUserOpsDto"
      security:
      - JWT: []
  "/api/v1/ops/organisations/{organisationId}/users/from-other-child-organisations":
    get:
      tags:
      - OpsUsers
      operationId: OpsUsers_GetAllFromOtherClubs
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: EmailOrLogin
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: UserTypeId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SystemRoleId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      - name: SystemRoleCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: IncludePerson
        in: query
        schema:
          type: boolean
        x-position: 7
      - name: IncludeCurrentUser
        in: query
        schema:
          type: boolean
        x-position: 8
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 9
      - name: userIds[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 10
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 11
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 12
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 13
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfUserOpsDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/members/{memberId}/avatar":
    post:
      tags:
      - OpsAvatar
      operationId: OpsAvatar_UpdateMemberAvatar
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/billing-items":
    get:
      tags:
      - OpsBillingItems
      operationId: OpsBillingItems_GetAll2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: TargetOrganisationId
        in: query
        description: Use for case when you need to create billing items for for sub
          organisations (Club, External Organisation , with federation plans) in this
          case organisationId in URL path should be FederationId and this input is
          ClubId
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: MemberId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      - name: PlanAssignmentId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      - name: StartDateBefore
        in: query
        description: Apply filter StartDateBefore >= StartDate (Time value will be
          truncated)
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 5
      - name: StartDateAfter
        in: query
        description: Apply filter StartDateAfter <= StartDate (Time value will be
          truncated)
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 6
      - name: EndDateBefore
        in: query
        description: Apply filter EndDateBefore >= EndDate (Time value will be truncated)
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 7
      - name: EndDateAfter
        in: query
        description: Apply filter EndDateAfter <= EndDate (Time value will be truncated)
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 8
      - name: InsertAtBefore
        in: query
        description: Apply filter InsertAtAfter >= InsertedAt (Time value will be
          truncated)
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 9
      - name: InsertAtAfter
        in: query
        description: Apply filter InsertAtAfter <= InsertedAt (Time value will be
          truncated)
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 10
      - name: InvoiceReferenceDate
        in: query
        description: Reference date to determine end of trial period
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 11
      - name: ChangeReasonCode
        in: query
        description: Filter out plan assignments based on change reason code
        schema:
          type: string
          nullable: true
        x-position: 12
      - name: Identifiers
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 13
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BillingItemDto"
      security:
      - JWT: []
    post:
      tags:
      - OpsBillingItems
      operationId: OpsBillingItems_GetAllByIds2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: ids
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: guid
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BillingItemDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/billing-items/register":
    post:
      tags:
      - OpsBillingItems
      operationId: OpsBillingItems_RegisterInvoice2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegisterInvoiceForBillingItemInput"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/billing-items/unregister":
    post:
      tags:
      - OpsBillingItems
      operationId: OpsBillingItems_UnregisterInvoice2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UnregisterInvoiceForBillingItemInput"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/calendar-events":
    get:
      tags:
      - OpsCalendarEvents
      operationId: OpsCalendarEvents_GetAll
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: PersonGuid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: TeamGuid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      - name: DateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      - name: DateUntil
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 5
      - name: CalendarItemType
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: ExternalReferenceId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 9
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOpsCalendarEventDetailsDto"
      security:
      - JWT: []
    post:
      tags:
      - OpsCalendarEvents
      operationId: OpsCalendarEvents_Create
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsCalendarEventDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsCalendarEventDetailsDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/calendar-events/{id}":
    put:
      tags:
      - OpsCalendarEvents
      operationId: OpsCalendarEvents_Update
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsCalendarEventDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsCalendarEventDto"
      security:
      - JWT: []
    delete:
      tags:
      - OpsCalendarEvents
      operationId: OpsCalendarEvents_Delete
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/attendance":
    post:
      tags:
      - OpsCalendarEvents
      operationId: OpsCalendarEvents_RegisterAttendance
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsSetAttendanceDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/send-email":
    post:
      tags:
      - OpsEmailNotifications
      operationId: OpsEmailNotifications_SendEmail
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                SystemActionName:
                  type: string
                  nullable: true
                TemplateGuid:
                  type: string
                  format: guid
                  nullable: true
                MailCode:
                  type: string
                  nullable: true
                Language:
                  type: string
                  nullable: true
                Recipients:
                  type: array
                  nullable: true
                  items:
                    type: string
                RecipientsGuids:
                  type: array
                  nullable: true
                  items:
                    type: string
                    format: guid
                FederationMembershipIdentifiers:
                  type: array
                  nullable: true
                  items:
                    type: string
                Bcc:
                  type: array
                  nullable: true
                  items:
                    type: string
                Cc:
                  type: array
                  nullable: true
                  items:
                    type: string
                Macros:
                  type: object
                  nullable: true
                  additionalProperties:
                    type: string
                LiquidBody:
                  type: string
                  nullable: true
                AttachmentsBase64:
                  type: object
                  nullable: true
                  additionalProperties:
                    type: string
                Files:
                  type: array
                  nullable: true
                  items:
                    type: string
                    format: binary
                SenderEmail:
                  type: string
                  nullable: true
                SenderName:
                  type: string
                  nullable: true
                Subject:
                  type: string
                  nullable: true
      responses:
        '200':
          description: ''
        '400':
          description: ''
        '404':
          description: ''
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/members/{memberId}/external-system-link":
    post:
      tags:
      - OpsExternalSystemLink
      operationId: OpsExternalSystemLink_Create
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsExternalSystemLinkDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExternalSystemLinkDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/configuration":
    get:
      tags:
      - OpsExternalSystemNotification
      operationId: OpsExternalSystemNotification_GetConfiguration
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: ProcessorType
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/EsnProcessorType2"
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/EsnOpsDto"
  "/api/v2/ops/external-system-notification/person/{id}":
    get:
      tags:
      - OpsExternalSystemNotification
      operationId: OpsExternalSystemNotification_GetPersonData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EsnPersonDto"
  "/api/v2/ops/person-details/{id}":
    get:
      tags:
      - OpsExternalSystemNotification
      summary: this endpoint can be removed once all functions are deployed to prod
        (only person-extended-details is used)
      operationId: OpsExternalSystemNotification_GetPersonDetailsData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EsnPersonDetailsDto"
      deprecated: true
  "/api/v2/ops/membership-details/{planAssignmentId}":
    get:
      tags:
      - OpsExternalSystemNotification
      operationId: OpsExternalSystemNotification_GetMembershipDetailsData
      parameters:
      - name: planAssignmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EsnMembershipDetailsDto"
  "/api/v2/ops/person-federation-role/{organisationId}/{id}":
    get:
      tags:
      - OpsExternalSystemNotification
      operationId: OpsExternalSystemNotification_GetPersonFederationRoleById
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EsnPersonFederationRoleDto"
  "/api/v2/ops/external-system-notification/person-extended-details/{id}":
    get:
      tags:
      - OpsExternalSystemNotification
      operationId: OpsExternalSystemNotification_GetPersonExtendedDetailsData
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: IncludedTagTypes
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagType"
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EsnPersonExtendedDetailsDto"
  "/api/v2/ops/external-system-notification/{organisationId}/tags":
    get:
      tags:
      - OpsExternalSystemNotification
      operationId: OpsExternalSystemNotification_GetTags
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: IncludedTagTypes
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagType"
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TagBasicDto"
  "/api/v2/ops/external-system-notification/audit-log/{personId}":
    post:
      tags:
      - OpsExternalSystemNotification
      operationId: OpsExternalSystemNotification_AddAuditLog
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EsnAuditLogCreateDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
  "/api/v2/ops/external-system-notification/audit-log/{personGuid}":
    post:
      tags:
      - OpsExternalSystemNotification
      operationId: OpsExternalSystemNotification_AddAuditLog2
      parameters:
      - name: personGuid
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EsnAuditLogCreateDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
  "/api/v2/ops/organisations/{organisationId}/members/{memberId}/external-system-links/{id}":
    put:
      tags:
      - OpsExternalSystemNotification
      operationId: OpsExternalSystemNotification_UpdateExternalSystemLink
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 3
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EsnExternalSystemLinkDto"
        required: true
        x-position: 4
      responses:
        '200':
          description: ''
  "/api/v2/ops/organisations/{organisationId}/members/{memberId}/external-system-links":
    get:
      tags:
      - OpsExternalSystemNotification
      operationId: OpsExternalSystemNotification_GetExternalSystemLinksForPerson
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/EsnExternalSystemLinkDto"
  "/api/v2/ops/organisations/{organisationId}/locations":
    get:
      tags:
      - OpsLocations
      operationId: OpsLocations_GetLocations
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OpsLocationDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/locations/{id}":
    get:
      tags:
      - OpsLocations
      operationId: OpsLocations_GetLocation
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsLocationDetailsDto"
      security:
      - JWT: []
  "/organisations/{organisationId}/matches/{id}":
    get:
      tags:
      - OpsMatches
      operationId: OpsMatches_Get
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsMatchDto"
      security:
      - JWT: []
    put:
      tags:
      - OpsMatches
      operationId: OpsMatches_Put
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsMatchDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsMatchDto"
      security:
      - JWT: []
    delete:
      tags:
      - OpsMatches
      operationId: OpsMatches_Delete
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/organisations/{organisationId}/matches":
    post:
      tags:
      - OpsMatches
      operationId: OpsMatches_Post
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: match
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsMatchDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsMatchDto"
      security:
      - JWT: []
    get:
      tags:
      - OpsMatches
      operationId: OpsMatches_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOpsMatchDto"
      security:
      - JWT: []
  "/api/v2/ops/members/{personId}/parent-info":
    get:
      tags:
      - OpsMembers
      operationId: OpsMembers_GetParentInfo
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OpsParentInfoDto"
      security:
      - JWT: []
  "/api/v2/ops/federation-members/search":
    get:
      tags:
      - OpsMembers
      operationId: OpsMembers_SearchFederationMembers2
      parameters:
      - name: search
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: organisationId
        in: query
        schema:
          type: string
          format: guid
        x-position: 2
      - name: federationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOpsPersonLookupDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/members":
    get:
      tags:
      - OpsMembers
      operationId: OpsMembers_GetOrganisationMembers
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: FederationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: FirstName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: NameInfix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: LastName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: Gender
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/Gender"
        x-position: 6
      - name: BirthDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 7
      - name: ExternalOrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 8
      - name: HasPlanWithParentGuid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 9
      - name: HasPlanStartingAfter
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 10
      - name: HasPlanStartingBefore
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 11
      - name: HasPlanEndingAfter
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 12
      - name: HasPlanEndingBefore
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 13
      - name: HasPlanInsertedatAfter
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 14
      - name: HasPlanInsertedatBefore
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 15
      - name: HasPlanAssignmentConnectedToOrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 16
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 17
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 18
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 19
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOpsPersonDetailsDto"
      security:
      - JWT: []
    post:
      tags:
      - OpsMembers
      operationId: OpsMembers_CreateMember
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsCreatePersonDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsPersonDetailsDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/members/lookup":
    get:
      tags:
      - OpsMembers
      operationId: OpsMembers_MemberSearch2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: search
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: hasAnyOfTagCodes
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 3
      - name: externalOrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 4
      - name: includeInactiveMembers
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 5
      - name: hasPlanAssignmentConnectedToOrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 6
      - name: federationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: externalSystemIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 11
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOpsPersonLookupDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/members/details":
    get:
      tags:
      - OpsMembers
      operationId: OpsMembers_MemberDetails22
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: federationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsPersonDetailsDto"
        '404':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/members/{memberId}":
    get:
      tags:
      - OpsMembers
      operationId: OpsMembers_GetMemberDetails
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsPersonDetailsDto"
        '404':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/members/{memberId}/family":
    get:
      tags:
      - OpsMembers
      operationId: OpsMembers_GetFamilyMembers2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      - name: date
        in: query
        schema:
          type: string
          format: date-time
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OpsPersonDetailsDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/members/{memberId}/blocked":
    post:
      tags:
      - OpsMembers
      operationId: OpsMembers_MarkPersonAsABlocked
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsPersonDetailsDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/members/{federationMembershipIdentifier}/sync-to-club/{clubId}":
    post:
      tags:
      - OpsMembers
      operationId: OpsMembers_SyncMemberFromFederationToClub2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: clubId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsPersonDetailsDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/messages":
    post:
      tags:
      - OpsMessages
      operationId: OpsMessages_SendMessage
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsCreateMessageDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/accommodations":
    get:
      tags:
      - OpsOrganisations
      operationId: OpsOrganisations_GetAccommodations
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OpsAccommodationDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/clubs":
    get:
      tags:
      - OpsOrganisations
      operationId: OpsOrganisations_IndexClubs
      parameters:
      - name: HasFinanceYearStartBefore
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 1
      - name: HasFinanceYearStartAfter
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 2
      - name: UpdatedAfter
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOpsClubDto"
      security:
      - JWT: []
  "/api/v2/ops/application-modules/permissions":
    post:
      tags:
      - OpsPermissions
      operationId: OpsPermissions_CollectPermissions22
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsCreatePermissionsDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/ops/application-modules/{module}":
    get:
      tags:
      - OpsPermissions
      operationId: OpsPermissions_GetPermissionsForModule2
      parameters:
      - name: module
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsApplicationModuleDto"
      security:
      - JWT: []
  "/api/v2/ops/application-modules/system-roles/{module}":
    get:
      tags:
      - OpsPermissions
      operationId: OpsPermissions_GetSystemRolesForModule2All
      parameters:
      - name: module
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OpsSystemRoleDto2"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/person-federation-roles":
    get:
      tags:
      - OpsPersonFederationRoles
      operationId: OpsPersonFederationRoles_PersonFederationRoles
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: federationRoleCodes[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OpsPersonFederationRoleDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/existing-person":
    get:
      tags:
      - OpsPersons
      operationId: OpsPersons_FindExistingPerson
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: FirstName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: LastName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: BirthDate
        in: query
        schema:
          type: string
          format: date-time
        x-position: 4
      - name: Gender
        in: query
        schema:
          "$ref": "#/components/schemas/Gender"
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/person-tags":
    get:
      tags:
      - OpsPersonTags
      operationId: OpsPersonTags_GetPersonTags
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: TagType
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      - name: PersonId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      - name: UpdatedSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      - name: TagId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 5
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 8
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOpsPersonTagListDto"
      security:
      - JWT: []
    post:
      tags:
      - OpsPersonTags
      operationId: OpsPersonTags_CreatePersonTag
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsPersonTagDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsPersonTagDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/person-tags/{id}":
    put:
      tags:
      - OpsPersonTags
      operationId: OpsPersonTags_UpdatePersonTag
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsPersonTagDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsPersonTagDto"
      security:
      - JWT: []
    delete:
      tags:
      - OpsPersonTags
      operationId: OpsPersonTags_DeletePersonTag
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/ops/postmark/bounce":
    post:
      tags:
      - OpsPostmark
      operationId: OpsPostmark_ProcessBounce
      parameters:
      - name: authKey
        in: header
        schema:
          type: string
          nullable: true
        x-position: 2
      requestBody:
        x-name: notification
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PostmarkBounceNotification"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
  "/api/v2/ops/organisations/{organisationId}/send-push":
    post:
      tags:
      - OpsPushNotifications
      operationId: OpsPushNotifications_SendFederationPushNotification
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsPushNotificationDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/seasons":
    get:
      tags:
      - OpsSeasons
      operationId: OpsSeasons_Seasons
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OpsSeasonDto"
      security:
      - JWT: []
  "/api/v2/ops/settings":
    post:
      tags:
      - OpsSystemSettings
      operationId: OpsSystemSettings_PostExternalSystemSettings2
      requestBody:
        x-name: settings
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/SystemSettingsUpdateDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/ops/settings/{module}":
    get:
      tags:
      - OpsSystemSettings
      operationId: OpsSystemSettings_GetSystemSettingsForModule2
      parameters:
      - name: module
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SystemSettingsDto"
      security:
      - JWT: []
  "/api/v2/ops/settings/{organisationId}/{module}":
    get:
      tags:
      - OpsSystemSettings
      operationId: OpsSystemSettings_GetSystemSettingsForOrganisation2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: module
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OpsContainerSystemSettingsDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/tags":
    get:
      tags:
      - OpsTags
      operationId: OpsTags_TagsIndex
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: tagType
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/TagType"
        x-position: 3
      - name: tagTypes[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagType"
        x-position: 4
      - name: IsHistoric
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 5
      - name: IsVisibleForPersons
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 6
      - name: IncludeParentTags
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 7
      - name: UpdatedSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 8
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 11
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOpsTagDto"
      security:
      - JWT: []
    post:
      tags:
      - OpsTags
      operationId: OpsTags_CreateTag2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsTagDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsTagDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/tags/{id}":
    put:
      tags:
      - OpsTags
      operationId: OpsTags_UpdateTag2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsTagDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsTagDto"
      security:
      - JWT: []
    delete:
      tags:
      - OpsTags
      operationId: OpsTags_DeleteTag2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v2/ops/teams/{teamId}/members":
    get:
      tags:
      - OpsTeamMembers
      operationId: OpsTeamMembers_GetTeamMembers2
      parameters:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOpsTeamMemberDto"
      security:
      - JWT: []
    post:
      tags:
      - OpsTeamMembers
      operationId: OpsTeamMembers_CreateTeamMember
      parameters:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsCreateTeamMemberDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsTeamMemberDto"
      security:
      - JWT: []
  "/api/v2/ops/teams/{teamId}/members/{id}":
    put:
      tags:
      - OpsTeamMembers
      operationId: OpsTeamMembers_UpdateTeamMember
      parameters:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsUpdateTeamMemberDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsTeamMemberDto"
      security:
      - JWT: []
    delete:
      tags:
      - OpsTeamMembers
      operationId: OpsTeamMembers_DeleteTeamMember
      parameters:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/teams":
    get:
      tags:
      - OpsTeams
      operationId: OpsTeams_GetTeams2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: clubId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      - name: seasonId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      - name: isCompetitionTeam
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 5
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 8
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOpsTeamDto"
      security:
      - JWT: []
    post:
      tags:
      - OpsTeams
      operationId: OpsTeams_CreateTeam
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsCreateTeamDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsTeamDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/teams/{teamId}":
    get:
      tags:
      - OpsTeams
      operationId: OpsTeams_GetTeam
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsTeamDto"
        '404':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/teams/lock":
    post:
      tags:
      - OpsTeams
      operationId: OpsTeams_SetTeamLock2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsSetTeamLockDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
        '400':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProblemDetails"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/teams/{id}":
    put:
      tags:
      - OpsTeams
      operationId: OpsTeams_UpdateTeam2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpsUpdateTeamDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpsTeamDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/users/{id}":
    get:
      tags:
      - OpsUsers
      operationId: OpsUsers_Get2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserOpsDto"
      security:
      - JWT: []
  "/api/v2/ops/organisations/{organisationId}/users":
    get:
      tags:
      - OpsUsers
      operationId: OpsUsers_GetAll2
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: EmailOrLogin
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: UserTypeId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SystemRoleId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      - name: SystemRoleCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: IncludePerson
        in: query
        schema:
          type: boolean
        x-position: 7
      - name: IncludeCurrentUser
        in: query
        schema:
          type: boolean
        x-position: 8
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 9
      - name: userIds[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 10
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 11
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 12
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 13
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfUserOpsDto"
      security:
      - JWT: []
  "/api/v2/ops/from-other-child-organisations":
    get:
      tags:
      - OpsUsers
      operationId: OpsUsers_GetAllFromOtherClubs2
      parameters:
      - name: organisationId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: EmailOrLogin
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: UserTypeId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SystemRoleId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      - name: SystemRoleCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: IncludePerson
        in: query
        schema:
          type: boolean
        x-position: 7
      - name: IncludeCurrentUser
        in: query
        schema:
          type: boolean
        x-position: 8
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 9
      - name: userIds[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 10
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 11
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 12
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 13
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfUserOpsDto"
      security:
      - JWT: []
  "/api/v1/nkbv/federations/{federationId}/subscriptions/calculation":
    post:
      tags:
      - NKBVMembers
      operationId: NKBVMembers_CalculatePlanAssignmentAndSubscriptionForNewFamilyMember
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: inputs
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/NKBVCalculationInput"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NKBVCalculationOutput"
  "/api/v1/nkbv/federations/{federationId}/member":
    get:
      tags:
      - NKBVMembers
      operationId: NKBVMembers_CheckForMembership
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: zip_code
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: federation_membership_identifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: date_of_birth
        in: query
        schema:
          type: string
          format: date-time
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedNkbvPersonDto"
      security:
      - JWT: []
  "/api/v1/nkbv/federations/{federationId}/memberNKBV":
    get:
      tags:
      - NKBVMembers
      operationId: NKBVMembers_CheckForMembershipNKBV
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: first_name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: last_name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: gender
        in: query
        schema:
          "$ref": "#/components/schemas/ExternalGender"
        x-position: 4
      - name: date_of_birth
        in: query
        schema:
          type: string
          format: date-time
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedNkbvPersonDto"
      security:
      - JWT: []
  "/api/v1/nkbv/federations/{federationId}/family":
    post:
      tags:
      - NKBVMembers
      operationId: NKBVMembers_CreateFamily
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WrappedFamily"
        required: true
        x-position: 2
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WrappedMemberDetailsOPS"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/allowed-senders/{id}/send-verification-email":
    post:
      tags:
      - AllowedSenders
      operationId: AllowedSenders_SendVerificationEmail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AllowedSenderDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/allowed-senders/{id}/verification-status":
    get:
      tags:
      - AllowedSenders
      operationId: AllowedSenders_CheckVerificationStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AllowedSenderDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/allowed-senders":
    get:
      tags:
      - AllowedSenders
      operationId: AllowedSenders_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfAllowedSenderDto"
      security:
      - JWT: []
    post:
      tags:
      - AllowedSenders
      operationId: AllowedSenders_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AllowedSenderDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AllowedSenderDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/allowed-senders/{id}":
    get:
      tags:
      - AllowedSenders
      operationId: AllowedSenders_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AllowedSenderDto"
      security:
      - JWT: []
    put:
      tags:
      - AllowedSenders
      operationId: AllowedSenders_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AllowedSenderDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AllowedSenderDto"
      security:
      - JWT: []
    delete:
      tags:
      - AllowedSenders
      operationId: AllowedSenders_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/attachments":
    get:
      tags:
      - Attachments
      operationId: Attachments_GetAll
      parameters:
      - name: RecordId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: RecordIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 2
      - name: Caption
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: fileTypes[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FileType2"
        x-position: 4
      - name: AttachmentType
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/AttachmentType"
        x-position: 5
      - name: TenantId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 6
      - name: MediaFolderId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 7
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 8
      - name: PersonId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 9
      - name: HasDocumentType
        in: query
        schema:
          type: boolean
        x-position: 10
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 11
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 12
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 13
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfAttachmentDto"
      security:
      - JWT: []
    post:
      tags:
      - Attachments
      operationId: Attachments_Create
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                Caption:
                  type: string
                  nullable: true
                Url:
                  type: string
                  nullable: true
                Value:
                  type: string
                  nullable: true
                FileName:
                  type: string
                  nullable: true
                RecordId:
                  type: string
                  nullable: true
                FileType:
                  "$ref": "#/components/schemas/FileType2"
                AttachmentType:
                  "$ref": "#/components/schemas/AttachmentType"
                TenantId:
                  type: string
                  format: guid
                HideFromMediaLibrary:
                  type: boolean
                MediaFolderId:
                  type: string
                  nullable: true
                PersonId:
                  type: string
                  format: guid
                  nullable: true
                OrganisationId:
                  type: string
                  format: guid
                  nullable: true
                CreatedByUser:
                  type: string
                  nullable: true
                InsertedAt:
                  type: string
                  format: date-time
                Description:
                  type: string
                  nullable: true
                DocumentTypeId:
                  type: integer
                  format: int32
                  nullable: true
                DocumentTypeName:
                  type: string
                  nullable: true
                Id:
                  type: integer
                  format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AttachmentDto"
      security:
      - JWT: []
  "/api/v1/management/attachments/multiple":
    post:
      tags:
      - Attachments
      operationId: Attachments_CreateMultiple
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                Caption:
                  type: string
                  nullable: true
                Url:
                  type: string
                  nullable: true
                Value:
                  type: string
                  nullable: true
                FileName:
                  type: string
                  nullable: true
                RecordId:
                  type: string
                  nullable: true
                FileType:
                  "$ref": "#/components/schemas/FileType2"
                AttachmentType:
                  "$ref": "#/components/schemas/AttachmentType"
                TenantId:
                  type: string
                  format: guid
                HideFromMediaLibrary:
                  type: boolean
                MediaFolderId:
                  type: string
                  nullable: true
                PersonId:
                  type: string
                  format: guid
                  nullable: true
                OrganisationId:
                  type: string
                  format: guid
                  nullable: true
                CreatedByUser:
                  type: string
                  nullable: true
                InsertedAt:
                  type: string
                  format: date-time
                Description:
                  type: string
                  nullable: true
                DocumentTypeId:
                  type: integer
                  format: int32
                  nullable: true
                DocumentTypeName:
                  type: string
                  nullable: true
                Id:
                  type: integer
                  format: int32
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/attachments/{id}":
    put:
      tags:
      - Attachments
      operationId: Attachments_Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                Caption:
                  type: string
                  nullable: true
                Url:
                  type: string
                  nullable: true
                Value:
                  type: string
                  nullable: true
                FileName:
                  type: string
                  nullable: true
                RecordId:
                  type: string
                  nullable: true
                FileType:
                  "$ref": "#/components/schemas/FileType2"
                AttachmentType:
                  "$ref": "#/components/schemas/AttachmentType"
                TenantId:
                  type: string
                  format: guid
                HideFromMediaLibrary:
                  type: boolean
                MediaFolderId:
                  type: string
                  nullable: true
                PersonId:
                  type: string
                  format: guid
                  nullable: true
                OrganisationId:
                  type: string
                  format: guid
                  nullable: true
                CreatedByUser:
                  type: string
                  nullable: true
                InsertedAt:
                  type: string
                  format: date-time
                Description:
                  type: string
                  nullable: true
                DocumentTypeId:
                  type: integer
                  format: int32
                  nullable: true
                DocumentTypeName:
                  type: string
                  nullable: true
                Id:
                  type: integer
                  format: int32
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    delete:
      tags:
      - Attachments
      operationId: Attachments_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: attachmentType
        in: query
        schema:
          "$ref": "#/components/schemas/AttachmentType"
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/attachments/details":
    put:
      tags:
      - Attachments
      operationId: Attachments_UpdateDetails
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AttachmentDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/attachments/bulk-delete":
    post:
      tags:
      - Attachments
      operationId: Attachments_BulkDelete
      requestBody:
        x-name: attachmentIds
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/attachments/fromLibrary":
    post:
      tags:
      - Attachments
      operationId: Attachments_AddFromLibrary
      parameters:
      - name: recordId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: attachmentType
        in: query
        schema:
          "$ref": "#/components/schemas/AttachmentType"
        x-position: 2
      - name: attachmentIdToCopy
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: tenantId
        in: query
        schema:
          type: string
          format: guid
        x-position: 4
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/attachments/copy-from-email-template":
    post:
      tags:
      - Attachments
      operationId: Attachments_CopyFromEmailTemplateToMessage
      parameters:
      - name: templateGuid
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: messageGuid
        in: query
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/attachments/move-to-folder":
    post:
      tags:
      - Attachments
      operationId: Attachments_MoveToDifferentFolder
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MoveFilesToFolderDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/audit-logs/archived":
    get:
      tags:
      - AuditLog
      operationId: AuditLog_GetAllArchived
      parameters:
      - name: PersonId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 1
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfArchivedAuditLogDto"
      security:
      - JWT: []
  "/api/v1/management/audit-logs/archivedDetails":
    get:
      tags:
      - AuditLog
      operationId: AuditLog_GetAllArchived2
      parameters:
      - name: filePath
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ArchivedAuditLogDto"
      security:
      - JWT: []
  "/api/v1/management/audit-logs":
    get:
      tags:
      - AuditLog
      operationId: AuditLog_GetAll
      parameters:
      - name: PersonId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 1
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfAuditLogDto"
      security:
      - JWT: []
    post:
      tags:
      - AuditLog
      operationId: AuditLog_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AuditLogDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AuditLogDto"
      security:
      - JWT: []
  "/api/v1/management/audit-logs/{id}":
    get:
      tags:
      - AuditLog
      operationId: AuditLog_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AuditLogDto"
      security:
      - JWT: []
    put:
      tags:
      - AuditLog
      operationId: AuditLog_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AuditLogDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AuditLogDto"
      security:
      - JWT: []
    delete:
      tags:
      - AuditLog
      operationId: AuditLog_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/avatars/person/{personId}":
    get:
      tags:
      - Avatars
      operationId: Avatars_GetApprovedForPerson
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AvatarDto"
      security:
      - JWT: []
  "/api/v1/management/avatars/person/{personId}/unapproved":
    get:
      tags:
      - Avatars
      operationId: Avatars_GetUnApprovedForPerson
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AvatarDto"
      security:
      - JWT: []
  "/api/v1/management/avatars":
    post:
      tags:
      - Avatars
      operationId: Avatars_Post
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                PersonId:
                  type: string
                  format: guid
                Url:
                  type: string
                  nullable: true
                File:
                  type: string
                  format: binary
                  nullable: true
                Id:
                  type: integer
                  format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AvatarDto"
      security:
      - JWT: []
  "/api/v1/management/avatars/{id}":
    put:
      tags:
      - Avatars
      operationId: Avatars_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                PersonId:
                  type: string
                  format: guid
                Url:
                  type: string
                  nullable: true
                File:
                  type: string
                  format: binary
                  nullable: true
                Id:
                  type: integer
                  format: int32
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AvatarDto"
      security:
      - JWT: []
    delete:
      tags:
      - Avatars
      operationId: Avatars_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/avatars/{id}/status":
    put:
      tags:
      - Avatars
      operationId: Avatars_SetStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AvatarStatusUpdateDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/background-jobs/{guid}":
    get:
      tags:
      - BackgroundJobs
      operationId: BackgroundJobs_Get
      parameters:
      - name: guid
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: skipLogEntries
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BackgroundJobDto"
      security:
      - JWT: []
    delete:
      tags:
      - BackgroundJobs
      operationId: BackgroundJobs_Cancel
      parameters:
      - name: guid
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/background-jobs":
    get:
      tags:
      - BackgroundJobs
      operationId: BackgroundJobs_GetAll
      parameters:
      - name: StartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 1
      - name: EndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 2
      - name: BackgroundJobNames
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 3
      - name: States
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/BackgroundJobState"
        x-position: 4
      - name: Creator
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: OnlyManual
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 6
      - name: FederationId
        in: query
        schema:
          type: string
          format: guid
        x-position: 7
      - name: ClubId
        in: query
        schema:
          type: string
          format: guid
        x-position: 8
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 11
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfBackgroundJobDto"
      security:
      - JWT: []
    post:
      tags:
      - BackgroundJobs
      operationId: BackgroundJobs_Create
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateBackgroundJobInput"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BackgroundJobDto"
      security:
      - JWT: []
  "/api/v1/management/billing-items/{id}":
    delete:
      tags:
      - BillingItems
      operationId: BillingItems_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/plan-assignment-billing-items/{planAssignmentId}":
    get:
      tags:
      - BillingItems
      operationId: BillingItems_GetAllPlanAssignmentBillingItems
      parameters:
      - name: planAssignmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Id
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfBillingItemOverviewDto"
      security:
      - JWT: []
  "/api/v1/management/organisation-plan-assignment-billing-items/{organisationPlanAssignmentId}":
    get:
      tags:
      - BillingItems
      operationId: BillingItems_GetAllOrganisationPlanAssignmentBillingItems
      parameters:
      - name: organisationPlanAssignmentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Id
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfBillingItemOverviewDto"
      security:
      - JWT: []
  "/api/v1/management/subscription-billing-items/{subscriptionId}":
    get:
      tags:
      - BillingItems
      operationId: BillingItems_GetAllSubscriptionBillingItems
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Id
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfBillingItemOverviewDto"
      security:
      - JWT: []
  "/api/v1/management/rental-billing-items/{rentalId}":
    get:
      tags:
      - BillingItems
      operationId: BillingItems_GetAllRentalBillingItems
      parameters:
      - name: rentalId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Id
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfBillingItemOverviewDto"
      security:
      - JWT: []
  "/api/v1/management/calendar-event-attendance":
    get:
      tags:
      - CalendarEventAttendance
      operationId: CalendarEventAttendance_GetAttendees
      parameters:
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: OccurrenceId
        in: query
        schema:
          type: string
          format: guid
        x-position: 2
      - name: AttendanceType
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/EventAttendanceType"
        x-position: 3
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfCalendarEventAttendanceDto"
      security:
      - JWT: []
    post:
      tags:
      - CalendarEventAttendance
      operationId: CalendarEventAttendance_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateCalendarEventAttendanceDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarEventAttendanceDto"
      security:
      - JWT: []
  "/api/v1/management/calendar-event-attendance/occurrence/{occurrenceId}/attendance-type/going/count":
    get:
      tags:
      - CalendarEventAttendance
      operationId: CalendarEventAttendance_GetGoingAttendeesCount
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - JWT: []
  "/api/v1/management/calendar-event-attendance/occurrence/{occurrenceId}/attendance-type/interested/count":
    get:
      tags:
      - CalendarEventAttendance
      operationId: CalendarEventAttendance_GetInterestedAttendeesCount
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - JWT: []
  "/api/v1/management/calendar-event-attendance/occurrence/{occurrenceId}/attendance-type/notGoing/count":
    get:
      tags:
      - CalendarEventAttendance
      operationId: CalendarEventAttendance_GetNotGoingAttendeesCount
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - JWT: []
  "/api/v1/management/calendar-event-attendance/occurrence/{occurrenceId}/attendance-type/unspecified/count":
    get:
      tags:
      - CalendarEventAttendance
      operationId: CalendarEventAttendance_GetUnspecifiedAttendeesCount
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - JWT: []
  "/api/v1/management/calendar-event-attendance/occurrence/{occurrenceId}/attendance-type/incomplete/count":
    get:
      tags:
      - CalendarEventAttendance
      operationId: CalendarEventAttendance_GetIncompleteAttendeesCount
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - JWT: []
  "/api/v1/management/calendar-event-attendance/export":
    get:
      tags:
      - CalendarEventAttendance
      operationId: CalendarEventAttendance_ExportAttendees
      parameters:
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: OccurrenceId
        in: query
        schema:
          type: string
          format: guid
        x-position: 2
      - name: AttendanceType
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/EventAttendanceType"
        x-position: 3
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/calendar-event-attendance/{id}":
    get:
      tags:
      - CalendarEventAttendance
      operationId: CalendarEventAttendance_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarEventAttendanceDto"
      security:
      - JWT: []
    put:
      tags:
      - CalendarEventAttendance
      operationId: CalendarEventAttendance_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CalendarEventAttendanceDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarEventAttendanceDto"
      security:
      - JWT: []
    delete:
      tags:
      - CalendarEventAttendance
      operationId: CalendarEventAttendance_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/calendar-events/{calendarEventId}/occurrences":
    get:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_GetOccurrences
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OccurrenceDto"
      security:
      - JWT: []
    post:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_AddOccurrence
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: occurrence
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OccurrenceDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OccurrenceDto"
      security:
      - JWT: []
    put:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_UpdateOccurrence
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: occurrence
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OccurrenceDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OccurrenceDto"
      security:
      - JWT: []
  "/api/v1/management/calendar-events/occurrences/{occurrenceId}":
    get:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_GetOccurrence
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OccurrenceDto"
      security:
      - JWT: []
  "/api/v1/management/calendar-events/{calendarEventId}/occurrences/{occurrenceId}":
    delete:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_DeleteOccurrence
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/calendar-events/details/{calendarEventId}":
    get:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_Get
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: type
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarEventDto"
      security:
      - JWT: []
    put:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_Put
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CalendarEventDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarEventDto"
      security:
      - JWT: []
  "/api/v1/management/calendar-events/duplicate/{calendarEventId}":
    post:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_Duplicate
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DuplicateCalendarEventDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarEventDto"
      security:
      - JWT: []
  "/api/v1/management/calendar-events/details":
    post:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_Post
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CalendarEventDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarEventDto"
      security:
      - JWT: []
  "/api/v1/management/calendar-events/{calendarEventId}/custom-questions":
    get:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_GetCalendarEventCustomQuestions
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CalendarEventQuestionDto"
      security:
      - JWT: []
  "/api/v1/management/calendar-events/{calendarEventId}/attendance-answers/{attendanceId}":
    get:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_GetCalendarEventAttendaceAnswers
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: attendanceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CalendarEventQuestionAnswersDto"
      security:
      - JWT: []
  "/api/v1/management/calendar-events/attendance-answers":
    put:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_UpdateCalendarEventAttendanceAnswers
      parameters:
      - name: occurrenceId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: answers
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/CalendarEventAttendanceAnswerDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/calendar-events/{calendarEventId}/custom-question":
    post:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_CreateCalendarEventQuestions
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CalendarEventQuestionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarEventQuestionDto"
      security:
      - JWT: []
  "/api/v1/management/calendar-events/{calendarEventId}/custom-questions/{customQuestionId}/update-position":
    put:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_Put2
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: customQuestionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateItemPositionDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/calendar-events/{calendarEventId}/field":
    put:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_UpdateFieldData
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateFieldAndPortionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/calendar-events/{calendarEventId}/custom-question/{customQuestionId}":
    put:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_EditCalendarEventQuestions
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: customQuestionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CalendarEventQuestionDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarEventQuestionDto"
      security:
      - JWT: []
    delete:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_DeleteCustomQuestion
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: customQuestionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/calendar-events/{calendarEventId}/registrations":
    get:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_GetRegistrations
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/EventRegistrationListDto"
      security:
      - JWT: []
    post:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_RegisterMembers
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EventRegistrationAddDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/calendar-events/{occurrenceId}/assignments":
    get:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_GetOccurrenceAssignments
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OccurrenceAssignmentsDto"
      security:
      - JWT: []
    post:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_SaveOccurrenceAssignments
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OccurrenceAssignmentsDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/calendar-events/{calendarEventId}/registrations/{registrationId}":
    delete:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_DeleteRegistration
      parameters:
      - name: calendarEventId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: registrationId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/calendar-events/duties/occurrences-overview":
    get:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_GetDutiesOccurrencesOverview
      parameters:
      - name: DutyCategoryId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: Start.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      - name: Start.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      - name: ShowHistory
        in: query
        schema:
          type: boolean
        x-position: 5
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 8
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfDutiesOccurrenceOverviewDto"
      security:
      - JWT: []
  "/api/v1/management/calendar-events/duties/occurrence-overview/{occurrenceId}":
    get:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_GetDutyOccurrenceOverview
      parameters:
      - name: occurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DutiesOccurrenceOverviewDto"
      security:
      - JWT: []
  "/api/v1/management/calendar-events/overview":
    get:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_GetOverviewData
      parameters:
      - name: start
        in: query
        schema:
          type: string
          format: date-time
        x-position: 1
      - name: end
        in: query
        schema:
          type: string
          format: date-time
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CalendarOverviewItemDto"
      security:
      - JWT: []
  "/api/v1/management/calendar-events":
    get:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_GetAll
      parameters:
      - name: CalendarItemType
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: Title
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: TagId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 3
      - name: TeamId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      - name: LocationId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 5
      - name: Organiser
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: Date.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 7
      - name: Date.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 8
      - name: UpcomingItems
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 9
      - name: DutyCategoryId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 10
      - name: UpdatedSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 11
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 12
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 13
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 14
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfCalendarEventListBaseDto"
      security:
      - JWT: []
  "/api/v1/management/calendar-events/{id}":
    delete:
      tags:
      - CalendarEvents
      operationId: CalendarEvents_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/committee-persons/persons/{personId}":
    get:
      tags:
      - CommitteePersons
      operationId: CommitteePersons_GetPersonCommittees
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CommitteePersonDto"
      security:
      - JWT: []
  "/api/v1/management/committee-persons/position/{id}":
    put:
      tags:
      - CommitteePersonsManagement
      operationId: CommitteePersonsManagement_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateItemPositionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/committee-persons":
    get:
      tags:
      - CommitteePersonsManagement
      operationId: CommitteePersonsManagement_GetAll
      parameters:
      - name: CommitteeId
        in: query
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Active
        in: query
        schema:
          type: boolean
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfCommitteePersonDto"
      security:
      - JWT: []
    post:
      tags:
      - CommitteePersonsManagement
      operationId: CommitteePersonsManagement_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CommitteePersonDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CommitteePersonDto"
      security:
      - JWT: []
  "/api/v1/management/committee-persons/{id}":
    get:
      tags:
      - CommitteePersonsManagement
      operationId: CommitteePersonsManagement_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CommitteePersonDto"
      security:
      - JWT: []
    put:
      tags:
      - CommitteePersonsManagement
      operationId: CommitteePersonsManagement_Put2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CommitteePersonDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CommitteePersonDto"
      security:
      - JWT: []
    delete:
      tags:
      - CommitteePersonsManagement
      operationId: CommitteePersonsManagement_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/committees":
    get:
      tags:
      - Committees
      operationId: Committees_GetAll
      parameters:
      - name: IsPubliclyVisible
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 1
      - name: IsActive
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 2
      - name: SearchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfCommitteeDto"
      security:
      - JWT: []
    post:
      tags:
      - Committees
      operationId: Committees_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CommitteeDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CommitteeDto"
      security:
      - JWT: []
  "/api/v1/management/committees/{id}":
    get:
      tags:
      - Committees
      operationId: Committees_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CommitteeDto"
      security:
      - JWT: []
    put:
      tags:
      - Committees
      operationId: Committees_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CommitteeDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CommitteeDto"
      security:
      - JWT: []
    delete:
      tags:
      - Committees
      operationId: Committees_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/configuration-settings/export/{type}":
    get:
      tags:
      - ConfigurationSettings
      operationId: ConfigurationSettings_Get
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/configuration-settings/import/{type}":
    post:
      tags:
      - ConfigurationSettings
      operationId: ConfigurationSettings_Import
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-sites/{resourceId}/contact-forms":
    get:
      tags:
      - ContactFormConfiguration
      operationId: ContactFormConfiguration_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfContactFormConfigurationDto"
      security:
      - JWT: []
    post:
      tags:
      - ContactFormConfiguration
      operationId: ContactFormConfiguration_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ContactFormConfigurationDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactFormConfigurationDto"
      security:
      - JWT: []
  "/api/v1/management/web-sites/{resourceId}/contact-forms/{id}":
    get:
      tags:
      - ContactFormConfiguration
      operationId: ContactFormConfiguration_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactFormConfigurationDto"
      security:
      - JWT: []
    put:
      tags:
      - ContactFormConfiguration
      operationId: ContactFormConfiguration_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ContactFormConfigurationDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactFormConfigurationDto"
      security:
      - JWT: []
    delete:
      tags:
      - ContactFormConfiguration
      operationId: ContactFormConfiguration_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/contact-forms/{resourceId}/questions/position/{id}":
    put:
      tags:
      - ContactFormQuestions
      operationId: ContactFormQuestions_UpdatePosition
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateItemPositionDtoOfGuid"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/contact-forms/{resourceId}/questions":
    get:
      tags:
      - ContactFormQuestions
      operationId: ContactFormQuestions_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfContactFormQuestionDto"
      security:
      - JWT: []
    post:
      tags:
      - ContactFormQuestions
      operationId: ContactFormQuestions_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ContactFormQuestionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactFormQuestionDto"
      security:
      - JWT: []
  "/api/v1/management/contact-forms/{resourceId}/questions/{id}":
    get:
      tags:
      - ContactFormQuestions
      operationId: ContactFormQuestions_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactFormQuestionDto"
      security:
      - JWT: []
    put:
      tags:
      - ContactFormQuestions
      operationId: ContactFormQuestions_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ContactFormQuestionDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactFormQuestionDto"
      security:
      - JWT: []
    delete:
      tags:
      - ContactFormQuestions
      operationId: ContactFormQuestions_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/contact-moments":
    get:
      tags:
      - ContactMoment
      operationId: ContactMoment_GetAll
      parameters:
      - name: GeneralSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: PersonGuid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfContactMomentDto"
      security:
      - JWT: []
    post:
      tags:
      - ContactMoment
      operationId: ContactMoment_Post
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ContactMomentDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactMomentDto"
      security:
      - JWT: []
  "/api/v1/management/contact-moments/{id}":
    get:
      tags:
      - ContactMoment
      operationId: ContactMoment_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactMomentDto"
      security:
      - JWT: []
    put:
      tags:
      - ContactMoment
      operationId: ContactMoment_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ContactMomentDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactMomentDto"
      security:
      - JWT: []
    delete:
      tags:
      - ContactMoment
      operationId: ContactMoment_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/contact-moments/persons/{personGuid}":
    get:
      tags:
      - ContactMoment
      operationId: ContactMoment_GetPersonContactMoments
      parameters:
      - name: personGuid
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: GeneralSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      - name: PersonGuid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 4
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfContactMomentDto"
      security:
      - JWT: []
  "/api/v1/management/contact-moments/organisation/{organisationId}":
    get:
      tags:
      - ContactMoment
      operationId: ContactMoment_GetOrganisationContactMoments
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: GeneralSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      - name: PersonGuid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 4
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfContactMomentDto"
      security:
      - JWT: []
  "/api/csp/report":
    post:
      tags:
      - ContentSecurityPolicy
      operationId: ContentSecurityPolicy_Post
      responses:
        '200':
          description: ''
  "/api/v1/management/contribution-terms":
    get:
      tags:
      - ContributionTerm
      operationId: ContributionTerm_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfContributionTermDto"
      security:
      - JWT: []
    post:
      tags:
      - ContributionTerm
      operationId: ContributionTerm_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ContributionTermDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContributionTermDto"
      security:
      - JWT: []
  "/api/v1/management/contribution-terms/{id}":
    get:
      tags:
      - ContributionTerm
      operationId: ContributionTerm_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContributionTermDto"
      security:
      - JWT: []
    put:
      tags:
      - ContributionTerm
      operationId: ContributionTerm_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ContributionTermDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContributionTermDto"
      security:
      - JWT: []
    delete:
      tags:
      - ContributionTerm
      operationId: ContributionTerm_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/custom-field-groups/position/{id}":
    put:
      tags:
      - CustomFieldGroups
      operationId: CustomFieldGroups_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateCustomFieldGroupPositionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/custom-field-groups":
    get:
      tags:
      - CustomFieldGroups
      operationId: CustomFieldGroups_GetAll
      parameters:
      - name: Destination
        in: query
        schema:
          "$ref": "#/components/schemas/CustomFieldDestination"
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfCustomFieldGroupDto"
      security:
      - JWT: []
    post:
      tags:
      - CustomFieldGroups
      operationId: CustomFieldGroups_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CustomFieldGroupDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomFieldGroupDto"
      security:
      - JWT: []
  "/api/v1/management/custom-field-groups/{id}":
    get:
      tags:
      - CustomFieldGroups
      operationId: CustomFieldGroups_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomFieldGroupDto"
      security:
      - JWT: []
    put:
      tags:
      - CustomFieldGroups
      operationId: CustomFieldGroups_Put2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CustomFieldGroupDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomFieldGroupDto"
      security:
      - JWT: []
    delete:
      tags:
      - CustomFieldGroups
      operationId: CustomFieldGroups_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/custom-field-responses/{destination}/{entityId}":
    get:
      tags:
      - CustomFieldResponses
      operationId: CustomFieldResponses_GetAll
      parameters:
      - name: destination
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/CustomFieldDestination"
        x-position: 1
      - name: entityId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CustomFieldResponseDto"
      security:
      - JWT: []
  "/api/v1/management/custom-field-responses":
    put:
      tags:
      - CustomFieldResponses
      operationId: CustomFieldResponses_Update
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateCustomFieldResponsesDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/custom-fields":
    get:
      tags:
      - CustomFields
      operationId: CustomFields_GetAll
      parameters:
      - name: Destination
        in: query
        schema:
          "$ref": "#/components/schemas/CustomFieldDestination"
        x-position: 1
      - name: OrganisationTypeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: IsEditableByPerson
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 3
      - name: IsEditableByOrganisation
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 4
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfCustomFieldDto"
      security:
      - JWT: []
    post:
      tags:
      - CustomFields
      operationId: CustomFields_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CustomFieldDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomFieldDto"
      security:
      - JWT: []
  "/api/v1/management/custom-fields/position/{id}":
    put:
      tags:
      - CustomFields
      operationId: CustomFields_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateCustomFieldPositionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/custom-fields/{id}/options":
    put:
      tags:
      - CustomFields
      operationId: CustomFields_UpdateOptions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateCustomFieldOptionsDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/custom-fields/from-parent-organisation":
    get:
      tags:
      - CustomFields
      operationId: CustomFields_GetAllFromParentOrganisation
      parameters:
      - name: Destination
        in: query
        schema:
          "$ref": "#/components/schemas/CustomFieldDestination"
        x-position: 1
      - name: OrganisationTypeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: IsEditableByPerson
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 3
      - name: IsEditableByOrganisation
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 4
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfCustomFieldDto"
      security:
      - JWT: []
  "/api/v1/management/custom-fields/{id}":
    get:
      tags:
      - CustomFields
      operationId: CustomFields_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomFieldDto"
      security:
      - JWT: []
    put:
      tags:
      - CustomFields
      operationId: CustomFields_Put2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CustomFieldDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CustomFieldDto"
      security:
      - JWT: []
    delete:
      tags:
      - CustomFields
      operationId: CustomFields_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/dashboard/total-members":
    get:
      tags:
      - Dashboard
      operationId: Dashboard_GetTotalMembers
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - JWT: []
  "/api/v1/management/dashboard/new-members-last-week":
    get:
      tags:
      - Dashboard
      operationId: Dashboard_GetNewMembersCountLastWeek
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - JWT: []
  "/api/v1/management/dashboard/members-last-years":
    get:
      tags:
      - Dashboard
      operationId: Dashboard_GetMembersForLastYears
      parameters:
      - name: years
        in: query
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MembersByYear"
      security:
      - JWT: []
  "/api/v1/management/dashboard/members-by-age":
    get:
      tags:
      - Dashboard
      operationId: Dashboard_GetMembersByAge
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MembersByAge"
      security:
      - JWT: []
  "/api/v1/management/dashboard/clubs-last-years":
    get:
      tags:
      - Dashboard
      operationId: Dashboard_GetClubsForLastYears
      parameters:
      - name: years
        in: query
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClubsByYear"
      security:
      - JWT: []
  "/api/v1/management/dashboard/total-clubs":
    get:
      tags:
      - Dashboard
      operationId: Dashboard_GetTotalClubs
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - JWT: []
  "/api/v1/management/dashboard/missing-required-federation-roles":
    get:
      tags:
      - Dashboard
      operationId: Dashboard_GetMissingRequiredFederationRoles
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FederationRoleDto"
      security:
      - JWT: []
  "/api/v1/management/dashboard/follow-ups":
    get:
      tags:
      - Dashboard
      operationId: Dashboard_GetFollowUps
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContactMomentDto"
      security:
      - JWT: []
  "/api/v1/management/disciplines":
    get:
      tags:
      - Disciplines
      operationId: Disciplines_GetDisciplines
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DisciplineDto"
      security:
      - JWT: []
  "/api/v1/management/disciplines/for-person-to-assign/{personId}":
    get:
      tags:
      - Disciplines
      operationId: Disciplines_GetDisciplinesForPersonToAssign
      parameters:
      - name: personId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 1
      - name: personId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DisciplineDto"
      security:
      - JWT: []
  "/api/v1/management/discount-types":
    get:
      tags:
      - DiscountTypes
      operationId: DiscountTypes_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfDiscountTypeDto"
      security:
      - JWT: []
    post:
      tags:
      - DiscountTypes
      operationId: DiscountTypes_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DiscountTypeDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DiscountTypeDto"
      security:
      - JWT: []
  "/api/v1/management/discount-types/{id}":
    get:
      tags:
      - DiscountTypes
      operationId: DiscountTypes_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DiscountTypeDto"
      security:
      - JWT: []
    put:
      tags:
      - DiscountTypes
      operationId: DiscountTypes_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DiscountTypeDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DiscountTypeDto"
      security:
      - JWT: []
    delete:
      tags:
      - DiscountTypes
      operationId: DiscountTypes_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/document-types/for-person/{personId}":
    get:
      tags:
      - DocumentTypes
      operationId: DocumentTypes_GetDisciplinesForPersonToAssign
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DocumentTypeDto"
      security:
      - JWT: []
  "/api/v1/management/document-types":
    get:
      tags:
      - DocumentTypes
      operationId: DocumentTypes_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfDocumentTypeDto"
      security:
      - JWT: []
    post:
      tags:
      - DocumentTypes
      operationId: DocumentTypes_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DocumentTypeDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DocumentTypeDto"
      security:
      - JWT: []
  "/api/v1/management/document-types/{id}":
    get:
      tags:
      - DocumentTypes
      operationId: DocumentTypes_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DocumentTypeDto"
      security:
      - JWT: []
    put:
      tags:
      - DocumentTypes
      operationId: DocumentTypes_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DocumentTypeDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DocumentTypeDto"
      security:
      - JWT: []
    delete:
      tags:
      - DocumentTypes
      operationId: DocumentTypes_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/duty-assignments/occurrences/{dutyOccurrenceId}":
    post:
      tags:
      - DutyAssignment
      operationId: DutyAssignment_RegisterMembersForDuty
      parameters:
      - name: dutyOccurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DutyMemberRegistrationDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    get:
      tags:
      - DutyAssignment
      operationId: DutyAssignment_GetMembersAssignedForDuty
      parameters:
      - name: dutyOccurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DutyAssignmentDto"
      security:
      - JWT: []
  "/api/v1/management/duty-assignments/members/{memberId}/occurrences/{dutyOccurrenceId}/roles/{roleId}":
    delete:
      tags:
      - DutyAssignment
      operationId: DutyAssignment_UnregisterMemberFromDutyRole
      parameters:
      - name: dutyOccurrenceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: roleId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: memberId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 3
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/duty-assignments/people":
    get:
      tags:
      - DutyAssignment
      operationId: DutyAssignment_GetPeopleWithDutyPointsPerSeason
      parameters:
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: Points.From
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: Points.To
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 3
      - name: TagLabelIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 4
      - name: QualificationIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 5
      - name: MarketingInterestIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 6
      - name: NewsletterIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 7
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 9
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPersonDto"
      security:
      - JWT: []
  "/api/v1/management/duty-assignments/assign-in-bulk":
    post:
      tags:
      - DutyAssignment
      operationId: DutyAssignment_Create
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DutyAssignInBulkBackgroundJobInput"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/management/duty-categories":
    get:
      tags:
      - DutyCategories
      operationId: DutyCategories_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfDutyCategoryDto"
      security:
      - JWT: []
    post:
      tags:
      - DutyCategories
      operationId: DutyCategories_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DutyCategoryDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DutyCategoryDto"
      security:
      - JWT: []
  "/api/v1/management/duty-categories/{id}":
    get:
      tags:
      - DutyCategories
      operationId: DutyCategories_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DutyCategoryDto"
      security:
      - JWT: []
    put:
      tags:
      - DutyCategories
      operationId: DutyCategories_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DutyCategoryDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DutyCategoryDto"
      security:
      - JWT: []
    delete:
      tags:
      - DutyCategories
      operationId: DutyCategories_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/duty-excluded-members":
    put:
      tags:
      - DutyExcludedMembers
      operationId: DutyExcludedMembers_Update
      requestBody:
        x-name: dutyExcludedMemberToUpdateDto
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DutyExcludedMemberToUpdateDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    get:
      tags:
      - DutyExcludedMembers
      operationId: DutyExcludedMembers_GeDutyExcludedMembersPerSeason
      parameters:
      - name: SeasonId
        in: query
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/duty-excluded-members/members-to-exclude":
    get:
      tags:
      - DutyExcludedMembers
      operationId: DutyExcludedMembers_GetMembersToExclude
      parameters:
      - name: HasActiveMembership
        in: query
        schema:
          type: boolean
        x-position: 1
      - name: FirstName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: LastName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: NamePrefix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: NameInfix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: BirthDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 6
      - name: BirthDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 7
      - name: Gender
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/Gender"
        x-position: 8
      - name: InsertedAt.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 9
      - name: InsertedAt.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 10
      - name: MemberSince.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 11
      - name: MemberSince.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 12
      - name: ZipCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 13
      - name: FederationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 14
      - name: TagLabelIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 15
      - name: QualificationIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 16
      - name: MarketingInterestIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 17
      - name: NewsletterIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 18
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 19
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 20
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 21
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 22
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/duty-excluded-members/copy-excluded-members-to-season":
    post:
      tags:
      - DutyExcludedMembers
      operationId: DutyExcludedMembers_CopyEcludedMembersFromToSeason
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CopyExcludedMembersToSeasonDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/duty-points/people":
    get:
      tags:
      - DutyPoints
      operationId: DutyPoints_GetPeopleWithDutyPointsPerSeason
      parameters:
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: HasActiveMembership
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 2
      - name: Points.From
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 3
      - name: Points.To
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      - name: SeasonId
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 8
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPersonDutyPointsDto"
      security:
      - JWT: []
  "/api/v1/management/duty-points":
    get:
      tags:
      - DutyPoints
      operationId: DutyPoints_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfDutyPointDto"
      security:
      - JWT: []
    post:
      tags:
      - DutyPoints
      operationId: DutyPoints_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DutyPointDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DutyPointDto"
      security:
      - JWT: []
  "/api/v1/management/duty-points/{id}":
    get:
      tags:
      - DutyPoints
      operationId: DutyPoints_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DutyPointDto"
      security:
      - JWT: []
    put:
      tags:
      - DutyPoints
      operationId: DutyPoints_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DutyPointDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DutyPointDto"
      security:
      - JWT: []
    delete:
      tags:
      - DutyPoints
      operationId: DutyPoints_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/duty-roles":
    get:
      tags:
      - DutyRoles
      operationId: DutyRoles_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfDutyRoleDto"
      security:
      - JWT: []
    post:
      tags:
      - DutyRoles
      operationId: DutyRoles_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DutyRoleDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DutyRoleDto"
      security:
      - JWT: []
  "/api/v1/management/duty-roles/{id}":
    get:
      tags:
      - DutyRoles
      operationId: DutyRoles_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DutyRoleDto"
      security:
      - JWT: []
    put:
      tags:
      - DutyRoles
      operationId: DutyRoles_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DutyRoleDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DutyRoleDto"
      security:
      - JWT: []
    delete:
      tags:
      - DutyRoles
      operationId: DutyRoles_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/email-logs":
    get:
      tags:
      - EmailLog
      operationId: EmailLog_GetAll
      parameters:
      - name: personId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfEmailLogDto"
      security:
      - JWT: []
    post:
      tags:
      - EmailLog
      operationId: EmailLog_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailLogDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmailLogDto"
      security:
      - JWT: []
  "/api/v1/management/email-logs/{id}":
    get:
      tags:
      - EmailLog
      operationId: EmailLog_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmailLogDto"
      security:
      - JWT: []
    put:
      tags:
      - EmailLog
      operationId: EmailLog_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailLogDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmailLogDto"
      security:
      - JWT: []
    delete:
      tags:
      - EmailLog
      operationId: EmailLog_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/email-templates/all":
    get:
      tags:
      - EmailTemplates
      operationId: EmailTemplates_GetAll
      parameters:
      - name: containerId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      - name: organisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: Filters
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FilterBase"
        x-position: 3
      - name: OnlyCustomTemplates
        in: query
        schema:
          type: boolean
        x-position: 4
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: Subject
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: MailCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: GroupCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 11
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfEmailTemplateListDto"
      security:
      - JWT: []
  "/api/v1/management/email-templates/custom":
    get:
      tags:
      - EmailTemplates
      operationId: EmailTemplates_GetCustomTemplate
      parameters:
      - name: containerId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      - name: organisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: templateId
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmailTemplateDto"
      security:
      - JWT: []
  "/api/v1/management/email-templates/systemAction":
    get:
      tags:
      - EmailTemplates
      operationId: EmailTemplates_GetSystemActionTemplate
      parameters:
      - name: containerId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      - name: organisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: systemActionId
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmailTemplateDto"
      security:
      - JWT: []
  "/api/v1/management/email-templates":
    post:
      tags:
      - EmailTemplates
      operationId: EmailTemplates_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailTemplateDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmailTemplateDto"
      security:
      - JWT: []
  "/api/v1/management/email-templates/{id}":
    put:
      tags:
      - EmailTemplates
      operationId: EmailTemplates_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailTemplateDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmailTemplateDto"
      security:
      - JWT: []
    delete:
      tags:
      - EmailTemplates
      operationId: EmailTemplates_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/email-templates/languages":
    get:
      tags:
      - EmailTemplates
      operationId: EmailTemplates_GetLanguages
      parameters:
      - name: containerId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      - name: organisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/EmailTemplateLanguageDto"
      security:
      - JWT: []
  "/api/v1/management/email-templates/parameters":
    get:
      tags:
      - EmailTemplates
      operationId: EmailTemplates_GetTemplateParameters
      parameters:
      - name: isMasterTemplate
        in: query
        schema:
          type: boolean
          default: false
        x-position: 1
      - name: systemActionId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/EmailTemplateParameterDto"
      security:
      - JWT: []
  "/api/v1/management/email-templates/master-templates":
    get:
      tags:
      - EmailTemplates
      operationId: EmailTemplates_GetMasterTemplates
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/email-templates/test-send":
    post:
      tags:
      - EmailTemplates
      operationId: EmailTemplates_SendTestEmail
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TestEmailDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/external-system-links/{personGuid}":
    get:
      tags:
      - ExternalSystemLink
      operationId: ExternalSystemLink_GetAllForPerson
      parameters:
      - name: personGuid
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ExternalSystemLinkDto"
      security:
      - JWT: []
  "/api/v1/management/external-system-links/multiple/{personGuid}":
    put:
      tags:
      - ExternalSystemLink
      operationId: ExternalSystemLink_UpdateMultiple
      parameters:
      - name: personGuid
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/ExternalSystemLinkDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/external-system-notifications-audit-logs":
    get:
      tags:
      - ExternalSystemNotificationAuditLogs
      operationId: ExternalSystemNotificationAuditLogs_GetAll
      parameters:
      - name: PersonQuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: Success
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 2
      - name: Details
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: ProcessorType
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/EsnProcessorType2"
        x-position: 4
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfEsnAuditLogListDto"
      security:
      - JWT: []
    post:
      tags:
      - ExternalSystemNotificationAuditLogs
      operationId: ExternalSystemNotificationAuditLogs_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EsnAuditLogCreateDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EsnAuditLogDto"
      security:
      - JWT: []
  "/api/v1/management/external-system-notifications-audit-logs/{id}":
    get:
      tags:
      - ExternalSystemNotificationAuditLogs
      operationId: ExternalSystemNotificationAuditLogs_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EsnAuditLogDto"
      security:
      - JWT: []
    put:
      tags:
      - ExternalSystemNotificationAuditLogs
      operationId: ExternalSystemNotificationAuditLogs_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EsnAuditLogCreateDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EsnAuditLogDto"
      security:
      - JWT: []
    delete:
      tags:
      - ExternalSystemNotificationAuditLogs
      operationId: ExternalSystemNotificationAuditLogs_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/external-system-notifications":
    get:
      tags:
      - ExternalSystemNotification
      operationId: ExternalSystemNotification_GetAll
      parameters:
      - name: ProcessorType
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/EsnProcessorType2"
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfEsnDto"
      security:
      - JWT: []
    post:
      tags:
      - ExternalSystemNotification
      operationId: ExternalSystemNotification_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EsnDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EsnDto"
      security:
      - JWT: []
  "/api/v1/management/external-system-notifications/{id}":
    get:
      tags:
      - ExternalSystemNotification
      operationId: ExternalSystemNotification_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EsnDto"
      security:
      - JWT: []
    put:
      tags:
      - ExternalSystemNotification
      operationId: ExternalSystemNotification_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EsnDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EsnDto"
      security:
      - JWT: []
    delete:
      tags:
      - ExternalSystemNotification
      operationId: ExternalSystemNotification_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/federation-roles":
    get:
      tags:
      - FederationRoles
      operationId: FederationRoles_GetAll
      parameters:
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfFederationRoleDto"
      security:
      - JWT: []
    post:
      tags:
      - FederationRoles
      operationId: FederationRoles_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FederationRoleDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FederationRoleDto"
      security:
      - JWT: []
  "/api/v1/management/federation-roles/{id}":
    put:
      tags:
      - FederationRoles
      operationId: FederationRoles_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FederationRoleDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FederationRoleDto"
      security:
      - JWT: []
    delete:
      tags:
      - FederationRoles
      operationId: FederationRoles_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    get:
      tags:
      - FederationRoles
      operationId: FederationRoles_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FederationRoleDto"
      security:
      - JWT: []
  "/api/v1/management/federation-roles/position/{id}":
    put:
      tags:
      - FederationRoles
      operationId: FederationRoles_Put2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateItemPositionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/fields/position/{id}":
    put:
      tags:
      - Fields
      operationId: Fields_UpdateFieldPosition
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateItemPositionDtoOfGuid"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/fields/accommodations":
    get:
      tags:
      - Fields
      operationId: Fields_UpdateFieldPositionAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FieldDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/fields":
    get:
      tags:
      - Fields
      operationId: Fields_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfFieldDto"
      security:
      - JWT: []
    post:
      tags:
      - Fields
      operationId: Fields_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FieldDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/fields/{id}":
    get:
      tags:
      - Fields
      operationId: Fields_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldDto"
      security:
      - JWT: []
    put:
      tags:
      - Fields
      operationId: Fields_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FieldDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldDto"
      security:
      - JWT: []
    delete:
      tags:
      - Fields
      operationId: Fields_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/grade-details":
    get:
      tags:
      - GradeDetails
      operationId: GradeDetails_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfGradeDetailDto"
      security:
      - JWT: []
    post:
      tags:
      - GradeDetails
      operationId: GradeDetails_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GradeDetailDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GradeDetailDto"
      security:
      - JWT: []
  "/api/v1/management/grade-details/{id}":
    get:
      tags:
      - GradeDetails
      operationId: GradeDetails_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GradeDetailDto"
      security:
      - JWT: []
    put:
      tags:
      - GradeDetails
      operationId: GradeDetails_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GradeDetailDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GradeDetailDto"
      security:
      - JWT: []
    delete:
      tags:
      - GradeDetails
      operationId: GradeDetails_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/grade-details/import":
    post:
      tags:
      - GradeDetailsImport
      operationId: GradeDetailsImport_ImportGradeDetails
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                File:
                  type: string
                  format: binary
                  nullable: true
                Mapping:
                  type: string
                  nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
                format: guid
      security:
      - JWT: []
  "/api/v1/management/grade-types/position/{id}":
    put:
      tags:
      - GradeTypes
      operationId: GradeTypes_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateItemPositionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/grade-types":
    get:
      tags:
      - GradeTypes
      operationId: GradeTypes_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfGradeTypeDto"
      security:
      - JWT: []
    post:
      tags:
      - GradeTypes
      operationId: GradeTypes_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GradeTypeDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GradeTypeDto"
      security:
      - JWT: []
  "/api/v1/management/grade-types/{id}":
    get:
      tags:
      - GradeTypes
      operationId: GradeTypes_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GradeTypeDto"
      security:
      - JWT: []
    put:
      tags:
      - GradeTypes
      operationId: GradeTypes_Put2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GradeTypeDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GradeTypeDto"
      security:
      - JWT: []
    delete:
      tags:
      - GradeTypes
      operationId: GradeTypes_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/grade-detail/{resourceId}/graduation-report":
    get:
      tags:
      - GraduationReport
      operationId: GraduationReport_GetGraduationPdf
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/inventory-items":
    get:
      tags:
      - InventoryItems
      operationId: InventoryItems_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfInventoryItemDto"
      security:
      - JWT: []
    post:
      tags:
      - InventoryItems
      operationId: InventoryItems_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/InventoryItemDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InventoryItemDto"
      security:
      - JWT: []
  "/api/v1/management/inventory-items/{id}":
    get:
      tags:
      - InventoryItems
      operationId: InventoryItems_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InventoryItemDto"
      security:
      - JWT: []
    put:
      tags:
      - InventoryItems
      operationId: InventoryItems_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/InventoryItemDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InventoryItemDto"
      security:
      - JWT: []
    delete:
      tags:
      - InventoryItems
      operationId: InventoryItems_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/inventory-item-types":
    get:
      tags:
      - InventoryItemTypes
      operationId: InventoryItemTypes_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfInventoryItemTypeDto"
      security:
      - JWT: []
    post:
      tags:
      - InventoryItemTypes
      operationId: InventoryItemTypes_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/InventoryItemTypeDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InventoryItemTypeDto"
      security:
      - JWT: []
  "/api/v1/management/inventory-item-types/{id}":
    get:
      tags:
      - InventoryItemTypes
      operationId: InventoryItemTypes_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InventoryItemTypeDto"
      security:
      - JWT: []
    put:
      tags:
      - InventoryItemTypes
      operationId: InventoryItemTypes_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/InventoryItemTypeDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InventoryItemTypeDto"
      security:
      - JWT: []
    delete:
      tags:
      - InventoryItemTypes
      operationId: InventoryItemTypes_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/knowledge-base-articles/{id}":
    get:
      tags:
      - KnowledgeBaseArticles
      operationId: KnowledgeBaseArticles_GetArticle
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/KnowledgeBaseArticleDto"
      security:
      - JWT: []
  "/api/v1/management/knowledge-base-articles/search":
    get:
      tags:
      - KnowledgeBaseArticles
      operationId: KnowledgeBaseArticles_SearchArticle
      parameters:
      - name: Query
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfKnowledgeBaseSearchResultDto"
      security:
      - JWT: []
  "/api/v1/management/knowledge-base-categories":
    get:
      tags:
      - KnowledgeBaseCategories
      operationId: KnowledgeBaseCategories_GetAll
      parameters:
      - name: SystemRoleId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfKnowledgeBaseCategoryDto"
      security:
      - JWT: []
  "/api/v1/management/knowledge-base-categories/{id}":
    get:
      tags:
      - KnowledgeBaseCategories
      operationId: KnowledgeBaseCategories_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/KnowledgeBaseCategoryDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/locations":
    get:
      tags:
      - Locations
      operationId: Locations_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfLocationDto"
      security:
      - JWT: []
    post:
      tags:
      - Locations
      operationId: Locations_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LocationDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LocationDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/locations/{id}":
    get:
      tags:
      - Locations
      operationId: Locations_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LocationDto"
      security:
      - JWT: []
    put:
      tags:
      - Locations
      operationId: Locations_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LocationDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LocationDto"
      security:
      - JWT: []
    delete:
      tags:
      - Locations
      operationId: Locations_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/lookups/my-env-configs":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetMyEnvironmentConfigs
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfMyEnvironmentConfigLookupDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/system-roles":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetSystemRoles
      parameters:
      - name: SystemRoleIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 1
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: AspNetRoleId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SystemRoleListDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/system-roles-filtered":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetSystemRolesFiltered
      parameters:
      - name: SystemRoleIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 1
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: AspNetRoleId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SystemRoleListDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/user-types":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetUserTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/user-types-filtered":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetFilteredUserTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/link-service-types":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetLinkServiceTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDtoOfShort"
      security:
      - JWT: []
  "/api/v1/management/lookups/federations":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetFederations
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      security:
      - JWT: []
  "/api/v1/management/lookups/clubs":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetClubs
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      security:
      - JWT: []
  "/api/v1/management/lookups/federation-clubs":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetFederationClubs
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClubListDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/external-organisations":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetExternalOrganisations
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ExternalOrganisationDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/locations":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetLocations
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/tags":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetTags
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TagLookupDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/grouped-tags":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetGroupedTags
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TagTypeGroupedDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/tags-filtered":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetTagsFiltered
      parameters:
      - name: assignableOnly
        in: query
        schema:
          type: boolean
          default: false
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TagDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/federation-roles":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetFederationRoles
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/teams":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetTeams
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TeamLookupDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/teams-for-matches":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetTeamsForMatches
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TeamLookupDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/location-types":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetLocationTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LocationTypeDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/organisation-types":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetOrganisationTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/regions":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetRegions
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/team-roles":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetTeamRoles
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TeamRoleDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/team-cancellation-reasons":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetTeamCancellationReasons
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      security:
      - JWT: []
  "/api/v1/management/lookups/people-for-autocomplete":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetPeopleForAutocomplete
      parameters:
      - name: searchString
        in: query
        schema:
          type: string
          default: ''
          nullable: true
        x-position: 1
      - name: activeOnly
        in: query
        schema:
          type: boolean
          default: false
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonAutocompleteDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/current-plans":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetCurrentPlans
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/current-federation-plans":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetCurrentFederationPlans
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/custom-fields":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetCustomFields
      parameters:
      - name: destination
        in: query
        schema:
          "$ref": "#/components/schemas/CustomFieldDestination"
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CustomFieldDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/export-definitions":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetExportDefinitions
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/import-definitions":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetImportDefinitions
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/external-systems":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetExternalSystems
      parameters:
      - name: type
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/ExternalSystemType"
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/federation-qualifications":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetFederationQualifications
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/available-languages":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetAvailableLanguages
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LanguageDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/seasons":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetSeasons
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SeasonDto2"
      security:
      - JWT: []
  "/api/v1/management/lookups/parent-seasons":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetParentSeasons
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SeasonDto2"
      security:
      - JWT: []
  "/api/v1/management/lookups/parent-members-for-plan":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetMembersForParentPersonInPlanAssignment
      parameters:
      - name: personId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      security:
      - JWT: []
  "/api/v1/management/lookups/person-id/{federationMembershipIdentifier}":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetPersonId
      parameters:
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
                format: guid
      security:
      - JWT: []
  "/api/v1/management/lookups/organisation-default-country":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetDefaultCountryForOrganisation
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - JWT: []
  "/api/v1/management/lookups/email-templates":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetEmailTemplates
      parameters:
      - name: containerId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      - name: organisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: Filters
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FilterBase"
        x-position: 3
      - name: OnlyCustomTemplates
        in: query
        schema:
          type: boolean
        x-position: 4
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: Subject
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: MailCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: GroupCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 11
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfEmailTemplateListDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/field-types":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetFieldsTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FieldTypeDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/field-materials":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetFieldsMaterials
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FieldMaterialDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/discount-types":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetDiscountTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/contribution-terms":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetContributionTerms
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/person-username/{personId}":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetPersonUsername
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/management/lookups/users-for-autocomplete":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetTenantUsers
      parameters:
      - name: searchString
        in: query
        schema:
          type: string
          default: ''
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/lookups/team-categories":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetTeamCategories
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      security:
      - JWT: []
  "/api/v1/management/lookups/training-types":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetTrainingTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      security:
      - JWT: []
  "/api/v1/management/lookups/quick-search":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetQuickSearch
      parameters:
      - name: query
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/QuickSearchDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/club-persons":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetClubPersons
      parameters:
      - name: clubId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: query
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonLookupDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/unread-notifications-count":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetUnreadNotificationsCount
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - JWT: []
  "/api/v1/management/lookups/organisation-relation-types":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetOrganisationRelationTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/player-license-types":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetPlayerLicenseTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PlayerLicenseTypeDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/team-license-types":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetTeamLicenseTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/disciplines":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetDisciplines
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/facility-types":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetFacilityTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FacilityTypeDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/child-organisations-for-autocomplete":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetChildOrganisationsForAutocomplete
      parameters:
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: discriminator
        in: query
        schema:
          "$ref": "#/components/schemas/TenantType2"
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      security:
      - JWT: []
  "/api/v1/management/lookups/dashboard-html-blocks":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetDashboardHtmlBlocks
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DashboardHtmlBlockDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/services":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetServices
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/web-sites/{webSiteId}/web-page-groups":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetWebPageGroups
      parameters:
      - name: webSiteId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WebPageGroupDto"
      security:
      - JWT: []
  "/api/v1/management/lookups/media-folders":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetMediaFolders
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      security:
      - JWT: []
  "/api/v1/management/lookups/match-categories":
    get:
      tags:
      - Lookup
      operationId: Lookup_GetMatchCategories
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/media-folders":
    post:
      tags:
      - MediaFolders
      operationId: MediaFolders_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MediaFolderDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MediaFolderDto"
      security:
      - JWT: []
    get:
      tags:
      - MediaFolders
      operationId: MediaFolders_GetAll
      parameters:
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: ParentId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfMediaFolderDto"
      security:
      - JWT: []
  "/api/v1/management/media-folders/{id}":
    put:
      tags:
      - MediaFolders
      operationId: MediaFolders_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MediaFolderUpdateDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MediaFolderDto"
      security:
      - JWT: []
    delete:
      tags:
      - MediaFolders
      operationId: MediaFolders_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    get:
      tags:
      - MediaFolders
      operationId: MediaFolders_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MediaFolderDto"
      security:
      - JWT: []
  "/api/v1/management/persons/{resourceId}/membership-report":
    get:
      tags:
      - MembershipReport
      operationId: MembershipReport_GetMembershipPdf
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/message/{messageId}/recipients":
    get:
      tags:
      - MessageRecipients
      operationId: MessageRecipients_GetAll
      parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: MessageId
        in: query
        schema:
          type: string
          format: guid
        x-position: 2
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfMessageRecipientDto"
      security:
      - JWT: []
    post:
      tags:
      - MessageRecipients
      operationId: MessageRecipients_EditMessageRecipientsRecipients
      parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MessageRecipientsDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/message/{messageId}/recipients/{id}":
    delete:
      tags:
      - MessageRecipients
      operationId: MessageRecipients_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: messageId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/message/{messageId}/recipients/all":
    delete:
      tags:
      - MessageRecipients
      operationId: MessageRecipients_DeleteAll
      parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/messages/print-letters/{messageId}":
    post:
      tags:
      - Messages
      operationId: Messages_Print
      parameters:
      - name: messageId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
                format: guid
      security:
      - JWT: []
  "/api/v1/management/messages":
    post:
      tags:
      - Messages
      operationId: Messages_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MessageDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageDto"
      security:
      - JWT: []
    get:
      tags:
      - Messages
      operationId: Messages_GetAll
      parameters:
      - name: Published
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 1
      - name: Title
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: Start.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      - name: Start.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      - name: Status
        in: query
        schema:
          "$ref": "#/components/schemas/MessageStatus"
        x-position: 5
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 8
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfMessageListDto"
      security:
      - JWT: []
  "/api/v1/management/messages/{guid}":
    get:
      tags:
      - Messages
      operationId: Messages_Get
      parameters:
      - name: guid
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageDto"
      security:
      - JWT: []
  "/api/v1/management/messages/user-communication-details/{userId}":
    get:
      tags:
      - Messages
      operationId: Messages_GetUserCommunicationDetails
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmailDetailsDto"
      security:
      - JWT: []
  "/api/v1/management/messages/{guid}/duplicate":
    post:
      tags:
      - Messages
      operationId: Messages_Duplicate
      parameters:
      - name: guid
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DuplicateMessageDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageDto"
      security:
      - JWT: []
  "/api/v1/management/messages/test-send":
    post:
      tags:
      - Messages
      operationId: Messages_SendTestEmail
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SendMessageDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/messages/{id}":
    get:
      tags:
      - Messages
      operationId: Messages_Get2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageDto"
      security:
      - JWT: []
    put:
      tags:
      - Messages
      operationId: Messages_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MessageDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MessageDto"
      security:
      - JWT: []
    delete:
      tags:
      - Messages
      operationId: Messages_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/metabase-reports":
    get:
      tags:
      - MetabaseReports
      operationId: MetabaseReports_Get
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MetabaseReportDto"
      security:
      - JWT: []
  "/api/v1/management/metabase-reports/dashboard":
    get:
      tags:
      - MetabaseReports
      operationId: MetabaseReports_GetDashboardMetabaseReports
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MetabaseReportDto"
      security:
      - JWT: []
  "/api/v1/management/metabase-reports/{id}":
    get:
      tags:
      - MetabaseReports
      operationId: MetabaseReports_GetById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MetabaseReportUrlDto"
      security:
      - JWT: []
  "/api/v1/management/my-environment-configs":
    get:
      tags:
      - MyEnvironmentConfig
      operationId: MyEnvironmentConfig_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfMyEnvironmentConfigDto"
      security:
      - JWT: []
    post:
      tags:
      - MyEnvironmentConfig
      operationId: MyEnvironmentConfig_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MyEnvironmentConfigDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MyEnvironmentConfigDto"
      security:
      - JWT: []
  "/api/v1/management/my-environment-configs/{id}":
    get:
      tags:
      - MyEnvironmentConfig
      operationId: MyEnvironmentConfig_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MyEnvironmentConfigDto"
      security:
      - JWT: []
    put:
      tags:
      - MyEnvironmentConfig
      operationId: MyEnvironmentConfig_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MyEnvironmentConfigDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MyEnvironmentConfigDto"
      security:
      - JWT: []
    delete:
      tags:
      - MyEnvironmentConfig
      operationId: MyEnvironmentConfig_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/news-items/details/{newsItemId}":
    get:
      tags:
      - NewsItems
      operationId: NewsItems_Get
      parameters:
      - name: newsItemId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NewsItemDto"
      security:
      - JWT: []
  "/api/v1/management/news-items/cancel-push-notification-job/{newsItemId}":
    post:
      tags:
      - NewsItems
      operationId: NewsItems_CancelPushNotificationJob
      parameters:
      - name: newsItemId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/news-items":
    get:
      tags:
      - NewsItems
      operationId: NewsItems_GetAll
      parameters:
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: ShowHistory
        in: query
        schema:
          type: boolean
        x-position: 2
      - name: TagId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 3
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfNewsItemListDto"
      security:
      - JWT: []
    post:
      tags:
      - NewsItems
      operationId: NewsItems_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewsItemDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NewsItemDto"
      security:
      - JWT: []
  "/api/v1/management/news-items/{id}":
    put:
      tags:
      - NewsItems
      operationId: NewsItems_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewsItemDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NewsItemDto"
      security:
      - JWT: []
    delete:
      tags:
      - NewsItems
      operationId: NewsItems_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/child-organisations":
    post:
      tags:
      - Organisation
      operationId: Organisation_CreateChildOrganisation
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: club
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateOrganisationDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      security:
      - JWT: []
    get:
      tags:
      - Organisation
      operationId: Organisation_GetChildOrganisations
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Discriminator
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/TenantType2"
        x-position: 2
      - name: Discriminators
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TenantType2"
        x-position: 3
      - name: Status
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/OrganisationStatus"
        x-position: 4
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: Code
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: DisciplineId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 8
      - name: FacilityTypeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 9
      - name: RegionId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 10
      - name: OrganisationTypeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 11
      - name: OrganisationTypeIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 12
      - name: OnlyPublicOrganisationTypes
        in: query
        schema:
          type: boolean
        x-position: 13
      - name: ExternalSystemId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 14
      - name: HasFinanceYearStartBefore
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 15
      - name: HasFinanceYearStartAfter
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 16
      - name: UpdatedAfter
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 17
      - name: Latitude
        in: query
        schema:
          type: number
          format: double
          nullable: true
        x-position: 18
      - name: Longitude
        in: query
        schema:
          type: number
          format: double
          nullable: true
        x-position: 19
      - name: Distance
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 20
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 21
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 22
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 23
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfChildOrganisationListDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/details":
    get:
      tags:
      - Organisation
      operationId: Organisation_GetDetails
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationDetailsDto"
      security:
      - JWT: []
    put:
      tags:
      - Organisation
      operationId: Organisation_UpdateDetails
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationDetailsDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/club-details":
    get:
      tags:
      - Organisation
      operationId: Organisation_GetClubDetails
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ClubDetailsDto"
      security:
      - JWT: []
    put:
      tags:
      - Organisation
      operationId: Organisation_UpdateClubDetails
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ClubDetailsDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/contact-details":
    get:
      tags:
      - Organisation
      operationId: Organisation_GetContactDetails
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationContactDetailsDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/default-communication-details":
    get:
      tags:
      - Organisation
      operationId: Organisation_GetDefaultCommunicationDetails
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationCommunicationDetailsDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/financial-details":
    get:
      tags:
      - Organisation
      operationId: Organisation_GetFinancialDetails
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationFinancialDetailsDto"
      security:
      - JWT: []
    put:
      tags:
      - Organisation
      operationId: Organisation_UpdateFinancialDetails
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationFinancialDetailsDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/marketing-details":
    get:
      tags:
      - Organisation
      operationId: Organisation_GetMarketingDetails
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationMarketingDetailsDto"
      security:
      - JWT: []
    put:
      tags:
      - Organisation
      operationId: Organisation_UpdateMarketingDetails
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationMarketingDetailsDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/person-numbering-settings":
    get:
      tags:
      - Organisation
      operationId: Organisation_GetPersonNumberingSettings
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonNumberingSettingsDto"
      security:
      - JWT: []
    put:
      tags:
      - Organisation
      operationId: Organisation_UpdatePersonNumberingDetails
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonNumberingSettingsDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/emails/{id}":
    delete:
      tags:
      - Organisation
      operationId: Organisation_DeleteContactEmail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/emails":
    put:
      tags:
      - Organisation
      operationId: Organisation_UpdateContactEmail
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: email
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    post:
      tags:
      - Organisation
      operationId: Organisation_AddContactEmail
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: email
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/links":
    put:
      tags:
      - Organisation
      operationId: Organisation_UpdateContactLink
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: link
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LinkDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    post:
      tags:
      - Organisation
      operationId: Organisation_AddContactLink
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: link
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LinkDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/links/{id}":
    delete:
      tags:
      - Organisation
      operationId: Organisation_DeleteContactLink
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/phones":
    put:
      tags:
      - Organisation
      operationId: Organisation_UpdateContactPhone
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: phone
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PhoneDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    post:
      tags:
      - Organisation
      operationId: Organisation_AddContactPhone
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: phone
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PhoneDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/phones/{id}":
    delete:
      tags:
      - Organisation
      operationId: Organisation_DeleteContactPhone
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/organisation-members":
    get:
      tags:
      - Organisation
      operationId: Organisation_GetOrganisationMembers
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOrganisationMemberDto"
      security:
      - JWT: []
    post:
      tags:
      - Organisation
      operationId: Organisation_AddOrganisationMembers
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkOrganisationMembersDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    delete:
      tags:
      - Organisation
      operationId: Organisation_DeleteOrganisationMember
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: personId
        in: query
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/organisation-member":
    put:
      tags:
      - Organisation
      operationId: Organisation_EditOrganisationMember
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: organisationMember
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationMemberDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationMemberDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/data-integrity-settings":
    get:
      tags:
      - Organisation
      operationId: Organisation_GetDataIntegritySettings
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DataIntegritySettingsDto"
      security:
      - JWT: []
    put:
      tags:
      - Organisation
      operationId: Organisation_UpdateDataIntegritySettings
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DataIntegritySettingsDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/organisation-mailchimp-settings":
    get:
      tags:
      - Organisation
      operationId: Organisation_GetOrganisationMailChimpSettings
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationMailchimpSettingsDto"
      security:
      - JWT: []
    put:
      tags:
      - Organisation
      operationId: Organisation_UpdateOrganisationMailchimpSettings
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: details
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationMailchimpSettingsDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/organisation-mailchimp-synchronize":
    put:
      tags:
      - Organisation
      operationId: Organisation_OrganisationMailChimpSynchronize
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: federationMembershipIdentifiers
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/organisation-mailchimp-synchronize-roles":
    put:
      tags:
      - Organisation
      operationId: Organisation_OrganisationMailChimpSynchronizeRoles
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/organisation-mailchimp-archive":
    put:
      tags:
      - Organisation
      operationId: Organisation_OrganisationMailChimpArchives
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisation-plan-assignments":
    get:
      tags:
      - OrganisationPlanAssignments
      operationId: OrganisationPlanAssignments_GetAll
      parameters:
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOrganisationPlanAssignmentDto"
      security:
      - JWT: []
    post:
      tags:
      - OrganisationPlanAssignments
      operationId: OrganisationPlanAssignments_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationPlanAssignmentDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationPlanAssignmentDto"
      security:
      - JWT: []
  "/api/v1/management/organisation-plan-assignments/{id}":
    get:
      tags:
      - OrganisationPlanAssignments
      operationId: OrganisationPlanAssignments_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationPlanAssignmentDto"
      security:
      - JWT: []
    put:
      tags:
      - OrganisationPlanAssignments
      operationId: OrganisationPlanAssignments_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationPlanAssignmentDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationPlanAssignmentDto"
      security:
      - JWT: []
    delete:
      tags:
      - OrganisationPlanAssignments
      operationId: OrganisationPlanAssignments_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisation-plans":
    get:
      tags:
      - OrganisationPlans
      operationId: OrganisationPlans_GetAll
      parameters:
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: Season
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: IsActive
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 3
      - name: StartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOrganisationPlanDto"
      security:
      - JWT: []
    post:
      tags:
      - OrganisationPlans
      operationId: OrganisationPlans_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationPlanDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationPlanDto"
      security:
      - JWT: []
  "/api/v1/management/organisation-plans/{id}":
    get:
      tags:
      - OrganisationPlans
      operationId: OrganisationPlans_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationPlanDto"
      security:
      - JWT: []
    put:
      tags:
      - OrganisationPlans
      operationId: OrganisationPlans_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationPlanDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationPlanDto"
      security:
      - JWT: []
    delete:
      tags:
      - OrganisationPlans
      operationId: OrganisationPlans_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisation-relations/for-child/{organisationId}":
    get:
      tags:
      - OrganisationRelation
      operationId: OrganisationRelation_GetAllForChild
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrganisationRelationDto"
      security:
      - JWT: []
  "/api/v1/management/organisation-relations":
    post:
      tags:
      - OrganisationRelation
      operationId: OrganisationRelation_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationRelationDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationRelationDto"
      security:
      - JWT: []
  "/api/v1/management/organisation-relations/{id}":
    put:
      tags:
      - OrganisationRelation
      operationId: OrganisationRelation_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationRelationDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationRelationDto"
      security:
      - JWT: []
    delete:
      tags:
      - OrganisationRelation
      operationId: OrganisationRelation_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisation-relation-types":
    get:
      tags:
      - OrganisationRelationType
      operationId: OrganisationRelationType_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOrganisationRelationTypeDto"
      security:
      - JWT: []
    post:
      tags:
      - OrganisationRelationType
      operationId: OrganisationRelationType_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationRelationTypeDto2"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationRelationTypeDto2"
      security:
      - JWT: []
  "/api/v1/management/organisation-relation-types/{id}":
    get:
      tags:
      - OrganisationRelationType
      operationId: OrganisationRelationType_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationRelationTypeDto2"
      security:
      - JWT: []
    put:
      tags:
      - OrganisationRelationType
      operationId: OrganisationRelationType_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationRelationTypeDto2"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationRelationTypeDto2"
      security:
      - JWT: []
    delete:
      tags:
      - OrganisationRelationType
      operationId: OrganisationRelationType_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/outfits":
    get:
      tags:
      - Outfits
      operationId: Outfits_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOutfitDto"
      security:
      - JWT: []
    post:
      tags:
      - Outfits
      operationId: Outfits_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OutfitDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OutfitDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/outfits/{id}":
    get:
      tags:
      - Outfits
      operationId: Outfits_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OutfitDto"
      security:
      - JWT: []
    put:
      tags:
      - Outfits
      operationId: Outfits_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OutfitDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OutfitDto"
      security:
      - JWT: []
    delete:
      tags:
      - Outfits
      operationId: Outfits_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/people":
    get:
      tags:
      - People
      operationId: People_GetMembersList
      parameters:
      - name: Visibilities
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FieldVisibility"
        x-position: 1
      - name: Filters
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FilterBase"
        x-position: 2
      - name: HasActiveMembership
        in: query
        schema:
          type: boolean
        x-position: 3
      - name: SkipActiveMembershipCheck
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 4
      - name: FirstName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: LastName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: NamePrefix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: NameInfix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: BirthDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 9
      - name: BirthDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 10
      - name: Gender
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/Gender"
        x-position: 11
      - name: InsertedAt.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 12
      - name: InsertedAt.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 13
      - name: MemberSince.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 14
      - name: MemberSince.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 15
      - name: ZipCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 16
      - name: FederationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 17
      - name: Age.From
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 18
      - name: Age.To
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 19
      - name: Email
        in: query
        schema:
          type: string
          nullable: true
        x-position: 20
      - name: Phone
        in: query
        schema:
          type: string
          nullable: true
        x-position: 21
      - name: Mobile
        in: query
        schema:
          type: string
          nullable: true
        x-position: 22
      - name: CancellationDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 23
      - name: CancellationDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 24
      - name: IncludeDeceasedPersons
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 25
      - name: TagLabelIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 26
      - name: FederationRoleIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 27
      - name: QualificationIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 28
      - name: FederationQualificationId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 29
      - name: CurrentPlanIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 30
      - name: CurrentFederationPlanId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 31
      - name: PlanOrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 32
      - name: ServiceIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 33
      - name: ClubIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfGuid"
        x-position: 34
      - name: ClubNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 35
      - name: TeamId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 36
      - name: TeamIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 37
      - name: CommitteeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 38
      - name: FederationNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 39
      - name: Initials
        in: query
        schema:
          type: string
          nullable: true
        x-position: 40
      - name: IBAN
        in: query
        schema:
          type: string
          nullable: true
        x-position: 41
      - name: Region
        in: query
        schema:
          type: string
          nullable: true
        x-position: 42
      - name: City
        in: query
        schema:
          type: string
          nullable: true
        x-position: 43
      - name: CountryId
        in: query
        schema:
          type: integer
          nullable: true
        x-position: 44
      - name: IsFederationMember
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 45
      - name: HasProfilePicture
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 46
      - name: IsUpForReview
        in: query
        schema:
          type: boolean
        x-position: 47
      - name: ExcludedFromDuty
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 48
      - name: CertificateOfConductEndDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 49
      - name: CertificateOfConductEndDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 50
      - name: HasLoginAccount
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 51
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 52
      - name: MarketingInterestIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 53
      - name: NewsletterIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 54
      - name: CollectivePayment
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 55
      - name: LanguageCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 56
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 57
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 58
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 59
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPersonListDto"
      security:
      - JWT: []
    delete:
      tags:
      - People
      operationId: People_DeletePeople
      requestBody:
        x-name: selectedIds
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: guid
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
    post:
      tags:
      - PersonDetails
      operationId: PersonDetails_Post
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonCreateDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonDto"
      security:
      - JWT: []
  "/api/v1/management/people/up-for-review":
    get:
      tags:
      - People
      operationId: People_GetUpForReviewList
      parameters:
      - name: Visibilities
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FieldVisibility"
        x-position: 1
      - name: Filters
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FilterBase"
        x-position: 2
      - name: HasActiveMembership
        in: query
        schema:
          type: boolean
        x-position: 3
      - name: SkipActiveMembershipCheck
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 4
      - name: FirstName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: LastName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: NamePrefix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: NameInfix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: BirthDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 9
      - name: BirthDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 10
      - name: Gender
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/Gender"
        x-position: 11
      - name: InsertedAt.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 12
      - name: InsertedAt.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 13
      - name: MemberSince.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 14
      - name: MemberSince.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 15
      - name: ZipCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 16
      - name: FederationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 17
      - name: Age.From
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 18
      - name: Age.To
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 19
      - name: Email
        in: query
        schema:
          type: string
          nullable: true
        x-position: 20
      - name: Phone
        in: query
        schema:
          type: string
          nullable: true
        x-position: 21
      - name: Mobile
        in: query
        schema:
          type: string
          nullable: true
        x-position: 22
      - name: CancellationDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 23
      - name: CancellationDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 24
      - name: IncludeDeceasedPersons
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 25
      - name: TagLabelIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 26
      - name: FederationRoleIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 27
      - name: QualificationIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 28
      - name: FederationQualificationId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 29
      - name: CurrentPlanIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 30
      - name: CurrentFederationPlanId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 31
      - name: PlanOrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 32
      - name: ServiceIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 33
      - name: ClubIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfGuid"
        x-position: 34
      - name: ClubNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 35
      - name: TeamId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 36
      - name: TeamIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 37
      - name: CommitteeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 38
      - name: FederationNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 39
      - name: Initials
        in: query
        schema:
          type: string
          nullable: true
        x-position: 40
      - name: IBAN
        in: query
        schema:
          type: string
          nullable: true
        x-position: 41
      - name: Region
        in: query
        schema:
          type: string
          nullable: true
        x-position: 42
      - name: City
        in: query
        schema:
          type: string
          nullable: true
        x-position: 43
      - name: CountryId
        in: query
        schema:
          type: integer
          nullable: true
        x-position: 44
      - name: IsFederationMember
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 45
      - name: HasProfilePicture
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 46
      - name: IsUpForReview
        in: query
        schema:
          type: boolean
        x-position: 47
      - name: ExcludedFromDuty
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 48
      - name: CertificateOfConductEndDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 49
      - name: CertificateOfConductEndDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 50
      - name: HasLoginAccount
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 51
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 52
      - name: MarketingInterestIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 53
      - name: NewsletterIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 54
      - name: CollectivePayment
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 55
      - name: LanguageCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 56
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 57
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 58
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 59
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPersonUpForReviewListDto"
      security:
      - JWT: []
  "/api/v1/management/people/ids":
    get:
      tags:
      - People
      operationId: People_GetPeopleIdsList
      parameters:
      - name: Visibilities
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FieldVisibility"
        x-position: 1
      - name: Filters
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FilterBase"
        x-position: 2
      - name: HasActiveMembership
        in: query
        schema:
          type: boolean
        x-position: 3
      - name: SkipActiveMembershipCheck
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 4
      - name: FirstName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: LastName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: NamePrefix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: NameInfix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: BirthDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 9
      - name: BirthDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 10
      - name: Gender
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/Gender"
        x-position: 11
      - name: InsertedAt.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 12
      - name: InsertedAt.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 13
      - name: MemberSince.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 14
      - name: MemberSince.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 15
      - name: ZipCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 16
      - name: FederationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 17
      - name: Age.From
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 18
      - name: Age.To
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 19
      - name: Email
        in: query
        schema:
          type: string
          nullable: true
        x-position: 20
      - name: Phone
        in: query
        schema:
          type: string
          nullable: true
        x-position: 21
      - name: Mobile
        in: query
        schema:
          type: string
          nullable: true
        x-position: 22
      - name: CancellationDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 23
      - name: CancellationDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 24
      - name: IncludeDeceasedPersons
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 25
      - name: TagLabelIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 26
      - name: FederationRoleIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 27
      - name: QualificationIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 28
      - name: FederationQualificationId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 29
      - name: CurrentPlanIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 30
      - name: CurrentFederationPlanId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 31
      - name: PlanOrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 32
      - name: ServiceIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 33
      - name: ClubIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfGuid"
        x-position: 34
      - name: ClubNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 35
      - name: TeamId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 36
      - name: TeamIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 37
      - name: CommitteeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 38
      - name: FederationNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 39
      - name: Initials
        in: query
        schema:
          type: string
          nullable: true
        x-position: 40
      - name: IBAN
        in: query
        schema:
          type: string
          nullable: true
        x-position: 41
      - name: Region
        in: query
        schema:
          type: string
          nullable: true
        x-position: 42
      - name: City
        in: query
        schema:
          type: string
          nullable: true
        x-position: 43
      - name: CountryId
        in: query
        schema:
          type: integer
          nullable: true
        x-position: 44
      - name: IsFederationMember
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 45
      - name: HasProfilePicture
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 46
      - name: IsUpForReview
        in: query
        schema:
          type: boolean
        x-position: 47
      - name: ExcludedFromDuty
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 48
      - name: CertificateOfConductEndDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 49
      - name: CertificateOfConductEndDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 50
      - name: HasLoginAccount
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 51
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 52
      - name: MarketingInterestIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 53
      - name: NewsletterIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 54
      - name: CollectivePayment
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 55
      - name: LanguageCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 56
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 57
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 58
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 59
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: guid
      security:
      - JWT: []
  "/api/v1/management/people/download-csv-template":
    get:
      tags:
      - People
      operationId: People_DownloadCsvImportTemplate
      parameters:
      - name: importDefinitionId
        in: query
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/people/csv-file-for-import/{importDefinitionId}":
    post:
      tags:
      - People
      operationId: People_CsvFileForImport
      parameters:
      - name: importDefinitionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/management/people/csv-file-for-import-preview/{importDefinitionId}":
    post:
      tags:
      - People
      operationId: People_CsvFileForImportPreview
      parameters:
      - name: importDefinitionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonCsvImportPreviewModelDto"
      security:
      - JWT: []
  "/api/v1/management/people/send-app-invitation":
    post:
      tags:
      - People
      operationId: People_SendAppInvitation
      requestBody:
        x-name: selectedIds
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: guid
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/people/accept-registrations":
    post:
      tags:
      - People
      operationId: People_AcceptMultipleRegistrations
      requestBody:
        x-name: selectedIds
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                format: guid
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/management/people/names":
    get:
      tags:
      - People
      operationId: People_GetPeopleNames
      parameters:
      - name: Visibilities
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FieldVisibility"
        x-position: 1
      - name: Filters
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FilterBase"
        x-position: 2
      - name: HasActiveMembership
        in: query
        schema:
          type: boolean
        x-position: 3
      - name: SkipActiveMembershipCheck
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 4
      - name: FirstName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: LastName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: NamePrefix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: NameInfix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: BirthDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 9
      - name: BirthDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 10
      - name: Gender
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/Gender"
        x-position: 11
      - name: InsertedAt.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 12
      - name: InsertedAt.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 13
      - name: MemberSince.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 14
      - name: MemberSince.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 15
      - name: ZipCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 16
      - name: FederationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 17
      - name: Age.From
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 18
      - name: Age.To
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 19
      - name: Email
        in: query
        schema:
          type: string
          nullable: true
        x-position: 20
      - name: Phone
        in: query
        schema:
          type: string
          nullable: true
        x-position: 21
      - name: Mobile
        in: query
        schema:
          type: string
          nullable: true
        x-position: 22
      - name: CancellationDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 23
      - name: CancellationDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 24
      - name: IncludeDeceasedPersons
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 25
      - name: TagLabelIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 26
      - name: FederationRoleIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 27
      - name: QualificationIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 28
      - name: FederationQualificationId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 29
      - name: CurrentPlanIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 30
      - name: CurrentFederationPlanId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 31
      - name: PlanOrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 32
      - name: ServiceIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 33
      - name: ClubIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfGuid"
        x-position: 34
      - name: ClubNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 35
      - name: TeamId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 36
      - name: TeamIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 37
      - name: CommitteeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 38
      - name: FederationNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 39
      - name: Initials
        in: query
        schema:
          type: string
          nullable: true
        x-position: 40
      - name: IBAN
        in: query
        schema:
          type: string
          nullable: true
        x-position: 41
      - name: Region
        in: query
        schema:
          type: string
          nullable: true
        x-position: 42
      - name: City
        in: query
        schema:
          type: string
          nullable: true
        x-position: 43
      - name: CountryId
        in: query
        schema:
          type: integer
          nullable: true
        x-position: 44
      - name: IsFederationMember
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 45
      - name: HasProfilePicture
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 46
      - name: IsUpForReview
        in: query
        schema:
          type: boolean
        x-position: 47
      - name: ExcludedFromDuty
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 48
      - name: CertificateOfConductEndDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 49
      - name: CertificateOfConductEndDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 50
      - name: HasLoginAccount
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 51
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 52
      - name: MarketingInterestIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 53
      - name: NewsletterIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 54
      - name: CollectivePayment
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 55
      - name: LanguageCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 56
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 57
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 58
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 59
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfNamedEntityDtoOfGuid"
      security:
      - JWT: []
  "/api/v1/management/people/synchronize-esn/{organisationId}":
    get:
      tags:
      - People
      operationId: People_EsnManualSync
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: IncludePlanAssignments
        in: query
        schema:
          type: boolean
        x-position: 2
      - name: SelectedPersonIds
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: Visibilities
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FieldVisibility"
        x-position: 4
      - name: Filters
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FilterBase"
        x-position: 5
      - name: HasActiveMembership
        in: query
        schema:
          type: boolean
        x-position: 6
      - name: SkipActiveMembershipCheck
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 7
      - name: FirstName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: LastName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      - name: NamePrefix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 10
      - name: NameInfix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 11
      - name: BirthDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 12
      - name: BirthDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 13
      - name: Gender
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/Gender"
        x-position: 14
      - name: InsertedAt.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 15
      - name: InsertedAt.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 16
      - name: MemberSince.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 17
      - name: MemberSince.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 18
      - name: ZipCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 19
      - name: FederationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 20
      - name: Age.From
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 21
      - name: Age.To
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 22
      - name: Email
        in: query
        schema:
          type: string
          nullable: true
        x-position: 23
      - name: Phone
        in: query
        schema:
          type: string
          nullable: true
        x-position: 24
      - name: Mobile
        in: query
        schema:
          type: string
          nullable: true
        x-position: 25
      - name: CancellationDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 26
      - name: CancellationDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 27
      - name: IncludeDeceasedPersons
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 28
      - name: TagLabelIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 29
      - name: FederationRoleIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 30
      - name: QualificationIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 31
      - name: FederationQualificationId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 32
      - name: CurrentPlanIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 33
      - name: CurrentFederationPlanId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 34
      - name: PlanOrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 35
      - name: ServiceIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 36
      - name: ClubIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfGuid"
        x-position: 37
      - name: ClubNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 38
      - name: TeamId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 39
      - name: TeamIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 40
      - name: CommitteeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 41
      - name: FederationNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 42
      - name: Initials
        in: query
        schema:
          type: string
          nullable: true
        x-position: 43
      - name: IBAN
        in: query
        schema:
          type: string
          nullable: true
        x-position: 44
      - name: Region
        in: query
        schema:
          type: string
          nullable: true
        x-position: 45
      - name: City
        in: query
        schema:
          type: string
          nullable: true
        x-position: 46
      - name: CountryId
        in: query
        schema:
          type: integer
          nullable: true
        x-position: 47
      - name: IsFederationMember
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 48
      - name: HasProfilePicture
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 49
      - name: IsUpForReview
        in: query
        schema:
          type: boolean
        x-position: 50
      - name: ExcludedFromDuty
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 51
      - name: CertificateOfConductEndDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 52
      - name: CertificateOfConductEndDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 53
      - name: HasLoginAccount
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 54
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 55
      - name: MarketingInterestIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 56
      - name: NewsletterIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 57
      - name: CollectivePayment
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 58
      - name: LanguageCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 59
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 60
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 61
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 62
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/management/people/export":
    post:
      tags:
      - People
      operationId: People_Export
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonsExportArgsDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/management/people/run-export-job":
    post:
      tags:
      - People
      operationId: People_RunExportJob
      parameters:
      - name: Visibilities
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FieldVisibility"
        x-position: 2
      - name: Filters
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FilterBase"
        x-position: 3
      - name: HasActiveMembership
        in: query
        schema:
          type: boolean
        x-position: 4
      - name: SkipActiveMembershipCheck
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 5
      - name: FirstName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: LastName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: NamePrefix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: NameInfix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      - name: BirthDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 10
      - name: BirthDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 11
      - name: Gender
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/Gender"
        x-position: 12
      - name: InsertedAt.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 13
      - name: InsertedAt.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 14
      - name: MemberSince.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 15
      - name: MemberSince.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 16
      - name: ZipCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 17
      - name: FederationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 18
      - name: Age.From
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 19
      - name: Age.To
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 20
      - name: Email
        in: query
        schema:
          type: string
          nullable: true
        x-position: 21
      - name: Phone
        in: query
        schema:
          type: string
          nullable: true
        x-position: 22
      - name: Mobile
        in: query
        schema:
          type: string
          nullable: true
        x-position: 23
      - name: CancellationDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 24
      - name: CancellationDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 25
      - name: IncludeDeceasedPersons
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 26
      - name: TagLabelIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 27
      - name: FederationRoleIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 28
      - name: QualificationIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 29
      - name: FederationQualificationId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 30
      - name: CurrentPlanIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 31
      - name: CurrentFederationPlanId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 32
      - name: PlanOrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 33
      - name: ServiceIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 34
      - name: ClubIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfGuid"
        x-position: 35
      - name: ClubNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 36
      - name: TeamId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 37
      - name: TeamIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 38
      - name: CommitteeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 39
      - name: FederationNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 40
      - name: Initials
        in: query
        schema:
          type: string
          nullable: true
        x-position: 41
      - name: IBAN
        in: query
        schema:
          type: string
          nullable: true
        x-position: 42
      - name: Region
        in: query
        schema:
          type: string
          nullable: true
        x-position: 43
      - name: City
        in: query
        schema:
          type: string
          nullable: true
        x-position: 44
      - name: CountryId
        in: query
        schema:
          type: integer
          nullable: true
        x-position: 45
      - name: IsFederationMember
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 46
      - name: HasProfilePicture
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 47
      - name: IsUpForReview
        in: query
        schema:
          type: boolean
        x-position: 48
      - name: ExcludedFromDuty
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 49
      - name: CertificateOfConductEndDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 50
      - name: CertificateOfConductEndDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 51
      - name: HasLoginAccount
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 52
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 53
      - name: MarketingInterestIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 54
      - name: NewsletterIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 55
      - name: CollectivePayment
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 56
      - name: LanguageCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 57
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 58
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 59
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 60
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonsExportArgsDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/management/people/download/{id}/{exportFileType}/{exportDefinitionId}":
    get:
      tags:
      - People
      operationId: People_Download
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: exportFileType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/ExportFileType"
        x-position: 2
      - name: exportDefinitionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/periodic-task-configs/{int}":
    get:
      tags:
      - PeriodicTaskConfigs
      operationId: PeriodicTaskConfigs_Get
      parameters:
      - name: id
        in: query
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: int
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PeriodicTaskConfigDto"
      security:
      - JWT: []
  "/api/v1/management/periodic-task-configs":
    get:
      tags:
      - PeriodicTaskConfigs
      operationId: PeriodicTaskConfigs_GetAll
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPeriodicTaskConfigDto"
      security:
      - JWT: []
    post:
      tags:
      - PeriodicTaskConfigs
      operationId: PeriodicTaskConfigs_Create
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PeriodicTaskConfigDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PeriodicTaskConfigDto"
      security:
      - JWT: []
  "/api/v1/management/periodic-task-configs/{id}":
    put:
      tags:
      - PeriodicTaskConfigs
      operationId: PeriodicTaskConfigs_Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PeriodicTaskConfigDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PeriodicTaskConfigDto"
      security:
      - JWT: []
    delete:
      tags:
      - PeriodicTaskConfigs
      operationId: PeriodicTaskConfigs_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PeriodicTaskConfigDto"
      security:
      - JWT: []
  "/api/v1/management/permissions/user/all":
    get:
      tags:
      - Permissions
      operationId: Permissions_GetUserPermissions
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PermissionKeyDto"
      security:
      - JWT: []
  "/api/v1/management/service-permissions/user/all":
    get:
      tags:
      - Permissions
      operationId: Permissions_GetUserPermissions2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PermissionKeyDto"
      security:
      - JWT: []
  "/api/v1/management/permissions/organisation/all":
    get:
      tags:
      - Permissions
      operationId: Permissions_GetOrganisationPermissions
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PermissionDto"
      security:
      - JWT: []
  "/api/v1/management/service-permissions/organisation/all":
    get:
      tags:
      - Permissions
      operationId: Permissions_GetOrganisationPermissions2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PermissionDto"
      security:
      - JWT: []
  "/api/v1/management/persons/{personId}/contact-info":
    get:
      tags:
      - PersonContactInfo
      operationId: PersonContactInfo_Get
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonContactInfoDto"
      security:
      - JWT: []
    put:
      tags:
      - PersonContactInfo
      operationId: PersonContactInfo_Update
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonContactInfoDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/people/{guid}":
    get:
      tags:
      - PersonDetails
      operationId: PersonDetails_Get
      parameters:
      - name: guid
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonDto"
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/options":
    get:
      tags:
      - PersonDetails
      operationId: PersonDetails_GetPersonOptions
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonOptionsDto"
      security:
      - JWT: []
    put:
      tags:
      - PersonDetails
      operationId: PersonDetails_UpdatePersonOptions
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonOptionsDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/generate-club-membership-identifier":
    put:
      tags:
      - PersonDetails
      operationId: PersonDetails_GenerateClubMembershipIdentifier
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/generate-federation-membership-identifier":
    put:
      tags:
      - PersonDetails
      operationId: PersonDetails_GenerateFederationMembershipIdentifier
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/revive":
    put:
      tags:
      - PersonDetails
      operationId: PersonDetails_RevivePerson
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/family-members":
    get:
      tags:
      - PersonDetails
      operationId: PersonDetails_GetFamilyMembers
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/decease":
    put:
      tags:
      - PersonDetails
      operationId: PersonDetails_PersonDecease
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: personDeceasedDto
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonDeceasedDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/people/duplicated-person":
    get:
      tags:
      - PersonDetails
      operationId: PersonDetails_DuplicatedPersonCheck
      parameters:
      - name: Password
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: FederationPlan.PlanId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: FederationPlan.PlanCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: FederationPlan.PersonId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      - name: FederationPlan.PersonGuid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 5
      - name: FederationPlan.StartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 6
      - name: FederationPlan.MemberSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 7
      - name: FederationPlan.EndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 8
      - name: FederationPlan.ParentPersonId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 9
      - name: FederationPlan.ParentPersonGuid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 10
      - name: FederationPlan.RegistrationFee
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 11
      - name: FederationPlan.TransferFee
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 12
      - name: FederationPlan.OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 13
      - name: FederationPlan.IsFromImport
        in: query
        schema:
          type: boolean
        x-position: 14
      - name: FederationPlan.ChangeReasonCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 15
      - name: FederationPlan.NotInvoicedReason
        in: query
        schema:
          type: string
          nullable: true
        x-position: 16
      - name: FederationPlan.Id
        in: query
        schema:
          type: integer
          format: int32
        x-position: 17
      - name: ClubPlan.PlanId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 18
      - name: ClubPlan.PlanCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 19
      - name: ClubPlan.PersonId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 20
      - name: ClubPlan.PersonGuid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 21
      - name: ClubPlan.StartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 22
      - name: ClubPlan.MemberSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 23
      - name: ClubPlan.EndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 24
      - name: ClubPlan.ParentPersonId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 25
      - name: ClubPlan.ParentPersonGuid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 26
      - name: ClubPlan.RegistrationFee
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 27
      - name: ClubPlan.TransferFee
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 28
      - name: ClubPlan.OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 29
      - name: ClubPlan.IsFromImport
        in: query
        schema:
          type: boolean
        x-position: 30
      - name: ClubPlan.ChangeReasonCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 31
      - name: ClubPlan.NotInvoicedReason
        in: query
        schema:
          type: string
          nullable: true
        x-position: 32
      - name: ClubPlan.Id
        in: query
        schema:
          type: integer
          format: int32
        x-position: 33
      - name: DisciplineIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 34
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
        x-position: 35
      - name: Email.Email
        in: query
        schema:
          type: string
          nullable: true
        x-position: 36
      - name: Email.Type
        in: query
        schema:
          type: string
          nullable: true
        x-position: 37
      - name: Email.Description
        in: query
        schema:
          type: string
          nullable: true
        x-position: 38
      - name: Email.IsPrivate
        in: query
        schema:
          type: boolean
        x-position: 39
      - name: Email.Id
        in: query
        schema:
          type: integer
          format: int32
        x-position: 40
      - name: NamePrefix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 41
      - name: FirstName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 42
      - name: NameInfix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 43
      - name: LastName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 44
      - name: Initials
        in: query
        schema:
          type: string
          nullable: true
        x-position: 45
      - name: FederationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 46
      - name: ImportedFederationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 47
      - name: ClubMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 48
      - name: FoysMemberLogin
        in: query
        schema:
          type: string
          nullable: true
        x-position: 49
      - name: NationalityCountryId
        in: query
        schema:
          type: integer
          nullable: true
        x-position: 50
      - name: NationalityCountryCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 51
      - name: PlaceOfBirth
        in: query
        schema:
          type: string
          nullable: true
        x-position: 52
      - name: CountryOfBirthId
        in: query
        schema:
          type: integer
          nullable: true
        x-position: 53
      - name: MobilePhone.CountryId
        in: query
        schema:
          type: integer
          nullable: true
        x-position: 54
      - name: MobilePhone.CountryCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 55
      - name: MobilePhone.Number
        in: query
        schema:
          type: string
          nullable: true
        x-position: 56
      - name: MobilePhone.Description
        in: query
        schema:
          type: string
          nullable: true
        x-position: 57
      - name: MobilePhone.IsPrivate
        in: query
        schema:
          type: boolean
        x-position: 58
      - name: MobilePhone.Type
        in: query
        schema:
          "$ref": "#/components/schemas/PhoneType"
        x-position: 59
      - name: MobilePhone.Id
        in: query
        schema:
          type: integer
          format: int32
        x-position: 60
      - name: OtherPhone.CountryId
        in: query
        schema:
          type: integer
          nullable: true
        x-position: 61
      - name: OtherPhone.CountryCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 62
      - name: OtherPhone.Number
        in: query
        schema:
          type: string
          nullable: true
        x-position: 63
      - name: OtherPhone.Description
        in: query
        schema:
          type: string
          nullable: true
        x-position: 64
      - name: OtherPhone.IsPrivate
        in: query
        schema:
          type: boolean
        x-position: 65
      - name: OtherPhone.Type
        in: query
        schema:
          "$ref": "#/components/schemas/PhoneType"
        x-position: 66
      - name: OtherPhone.Id
        in: query
        schema:
          type: integer
          format: int32
        x-position: 67
      - name: Gender
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/Gender"
        x-position: 68
      - name: GenderForMatches
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/GenderForMatches"
        x-position: 69
      - name: BirthDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 70
      - name: MemberSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 71
      - name: PlanCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 72
      - name: AddressInfo.Address1
        in: query
        schema:
          type: string
          nullable: true
        x-position: 73
      - name: AddressInfo.Address2
        in: query
        schema:
          type: string
          nullable: true
        x-position: 74
      - name: AddressInfo.Address3
        in: query
        schema:
          type: string
          nullable: true
        x-position: 75
      - name: AddressInfo.HouseNumber
        in: query
        schema:
          type: string
          nullable: true
        x-position: 76
      - name: AddressInfo.HouseNumberExtension
        in: query
        schema:
          type: string
          nullable: true
        x-position: 77
      - name: AddressInfo.ZipCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 78
      - name: AddressInfo.City
        in: query
        schema:
          type: string
          nullable: true
        x-position: 79
      - name: AddressInfo.CountryCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 80
      - name: AddressInfo.CountryName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 81
      - name: AddressInfo.Suffix
        in: query
        schema:
          type: string
          nullable: true
        x-position: 82
      - name: AddressInfo.CountryId
        in: query
        schema:
          type: integer
        x-position: 83
      - name: AddressInfo.Latitude
        in: query
        schema:
          type: number
          format: double
          nullable: true
        x-position: 84
      - name: AddressInfo.Longitude
        in: query
        schema:
          type: number
          format: double
          nullable: true
        x-position: 85
      - name: AddressInfo.Id
        in: query
        schema:
          type: integer
          format: int32
        x-position: 86
      - name: ParentInfos
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ParentInfoDto"
        x-position: 87
      - name: BillingInfoDto.DebtCollection
        in: query
        schema:
          type: boolean
        x-position: 88
      - name: BillingInfoDto.DontInvoiceMemberships
        in: query
        schema:
          type: boolean
        x-position: 89
      - name: BillingInfoDto.IBAN
        in: query
        schema:
          type: string
          nullable: true
        x-position: 90
      - name: BillingInfoDto.Ip
        in: query
        schema:
          type: string
          nullable: true
        x-position: 91
      - name: BillingInfoDto.UserAgent
        in: query
        schema:
          type: string
          nullable: true
        x-position: 92
      - name: BillingInfoDto.MandateId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 93
      - name: BillingInfoDto.DebtCollectionTerms
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 94
      - name: BillingInfoDto.BankAccountName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 95
      - name: BillingInfoDto.BIC
        in: query
        schema:
          type: string
          nullable: true
        x-position: 96
      - name: BillingInfoDto.MandateDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 97
      - name: BillingInfoDto.MandateEndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 98
      - name: BillingInfoDto.InvoiceDeliveryMethod
        in: query
        schema:
          "$ref": "#/components/schemas/InvoiceDeliveryMethod"
        x-position: 99
      - name: BillingInfoDto.DiscountTypeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 100
      - name: BillingInfoDto.DiscountTypeName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 101
      - name: BillingInfoDto.ContributionTermId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 102
      - name: BillingInfoDto.ContributionTermName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 103
      - name: BillingInfoDto.IsMembershipPaidByExternalOrganisation
        in: query
        schema:
          type: boolean
        x-position: 104
      - name: BillingInfoDto.MembershipPaidByExternalOrganisation.Id
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 105
      - name: BillingInfoDto.MembershipPaidByExternalOrganisation.Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 106
      - name: BillingInfoDto.MembershipPaidByExternalOrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 107
      - name: BillingInfoDto.MembershipPaidByExternalOrganisationName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 108
      - name: BillingInfoDto.MembershipPaidByExternalOrganisationDescription
        in: query
        schema:
          type: string
          nullable: true
        x-position: 109
      - name: BillingInfoDto.Id
        in: query
        schema:
          type: integer
          format: int32
        x-position: 110
      - name: WantsToReceiveMagazine
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 111
      - name: WantsToReceiveEmail
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 112
      - name: WantsToReceivePromotions
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 113
      - name: Injuries
        in: query
        schema:
          type: string
          nullable: true
        x-position: 114
      - name: AutomatedExternalDefibrilator
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 115
      - name: GdprConsent
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 116
      - name: GdprConsentDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 117
      - name: CertificateOfConduct
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 118
      - name: CertificateOfConductDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 119
      - name: CertificateOfConductEndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 120
      - name: PhotoCheck
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 121
      - name: PhotoUploadedAt
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 122
      - name: PhotoValidUntil
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 123
      - name: ExternalClubAdministrationSystemId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 124
      - name: NationalityVerified
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 125
      - name: NationalityVerifiedDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 126
      - name: IsBlocked
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 127
      - name: RegistrationStatus
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/RegistrationStatus"
        x-position: 128
      - name: Notes
        in: query
        schema:
          type: string
          nullable: true
        x-position: 129
      - name: IsFromImport
        in: query
        schema:
          type: boolean
        x-position: 130
      - name: Id
        in: query
        schema:
          type: integer
          format: int32
        x-position: 131
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonIdentityDto"
      security:
      - JWT: []
  "/api/v1/management/people/{personId}":
    put:
      tags:
      - PersonDetails
      operationId: PersonDetails_UpdatePerson
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: personUpdateDto
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonUpdateDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonDto"
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/certificate-of-conduct":
    put:
      tags:
      - PersonDetails
      operationId: PersonDetails_UpdatePersonCertificateOfConduct
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CertificateOfConductDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonDto"
      security:
      - JWT: []
  "/api/v1/management/people/federation-roles/{federationMembershipIdentifier}":
    get:
      tags:
      - PersonDetails
      operationId: PersonDetails_GetPersonFederationRoles
      parameters:
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonFederationRoleDto"
      security:
      - JWT: []
  "/api/v1/management/people/merge/{guid}":
    get:
      tags:
      - PersonDetails
      operationId: PersonDetails_GetPersonForMerge
      parameters:
      - name: guid
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonMergeDto"
      security:
      - JWT: []
  "/api/v1/management/people/merge/{personToRemoveId}/with/{targetPersonId}":
    put:
      tags:
      - PersonDetails
      operationId: PersonDetails_MergePeople
      parameters:
      - name: personToRemoveId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: targetPersonId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: targetPersonFullInfo
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonMergeDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
                format: guid
      security:
      - JWT: []
  "/api/v1/management/people/external-systems/{federationMembershipIdentifier}":
    get:
      tags:
      - PersonDetails
      operationId: PersonDetails_GetPersonExternalSystems
      parameters:
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClubExternalSystemInfoDto"
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/gdpr-removal":
    post:
      tags:
      - PersonDetails
      operationId: PersonDetails_GdprRemoval
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/accept-registration":
    post:
      tags:
      - PersonDetails
      operationId: PersonDetails_AcceptRegistration
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/people/mark-up-for-review/{personId}":
    post:
      tags:
      - PersonDetails
      operationId: PersonDetails_MarkPersonUpForReview
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ReviewRemarkDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/people/resolve-review-remark/{personId}":
    post:
      tags:
      - PersonDetails
      operationId: PersonDetails_ResolveReviewRemark
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/people/search-federation-member":
    get:
      tags:
      - PersonDetails
      operationId: PersonDetails_SearchFederationMember
      parameters:
      - name: federationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: dateOfBirth
        in: query
        schema:
          type: string
          format: date-time
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonInitialDataDto"
      security:
      - JWT: []
  "/api/v1/management/people/blocked-at-federation/{federationMembershipIdentifier}":
    get:
      tags:
      - PersonDetails
      operationId: PersonDetails_IsPersonBlockedAtFederation
      parameters:
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: boolean
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/administration-access-data":
    get:
      tags:
      - PersonDetails
      operationId: PersonDetails_GetPersonAdministrationAccessData
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonOrganisationAccessDto"
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/my-env-external-login":
    get:
      tags:
      - PersonDetails
      operationId: PersonDetails_GetMyEnvExternalLoginLink
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: myEnvConfigId
        in: query
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/person-active-plan-assignment-organisations":
    get:
      tags:
      - PersonDetails
      operationId: PersonDetails_GetPersonActivePlanAssignmentOrganisations
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      security:
      - JWT: []
  "/api/v1/management/person-disciplines/{personId}":
    get:
      tags:
      - PersonDisciplines
      operationId: PersonDisciplines_GetDisciplinesForMember
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: PersonId
        in: query
        schema:
          type: string
          format: guid
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPersonDisciplineDto"
      security:
      - JWT: []
  "/api/v1/management/person-disciplines":
    post:
      tags:
      - PersonDisciplines
      operationId: PersonDisciplines_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonDisciplineDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonDisciplineDto"
      security:
      - JWT: []
  "/api/v1/management/person-disciplines/{id}":
    put:
      tags:
      - PersonDisciplines
      operationId: PersonDisciplines_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonDisciplineDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonDisciplineDto"
      security:
      - JWT: []
    delete:
      tags:
      - PersonDisciplines
      operationId: PersonDisciplines_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/federation-person-roles":
    get:
      tags:
      - PersonFederationRoles
      operationId: PersonFederationRoles_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: RoleId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: RoleIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 3
      - name: RoleCodes
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 4
      - name: OrganisationTypeIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 5
      - name: DisciplineIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 6
      - name: FederationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: PersonName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: OrganisationName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      - name: OrganisationCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 10
      - name: FacilityTypeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 11
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 12
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 13
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 14
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPersonFederationRoleDto"
      security:
      - JWT: []
    post:
      tags:
      - PersonFederationRoles
      operationId: PersonFederationRoles_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreatePersonFederationRoleDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonFederationRoleDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/federation-person-roles/for-role/{roleId}":
    get:
      tags:
      - PersonFederationRoles
      operationId: PersonFederationRoles_GetPersonsForRole
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: roleId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPersonFederationRoleDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/federation-person-roles/{id}":
    get:
      tags:
      - PersonFederationRoles
      operationId: PersonFederationRoles_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonFederationRoleDto"
      security:
      - JWT: []
    put:
      tags:
      - PersonFederationRoles
      operationId: PersonFederationRoles_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatePersonFederationRoleDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonFederationRoleDto"
      security:
      - JWT: []
    delete:
      tags:
      - PersonFederationRoles
      operationId: PersonFederationRoles_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/federation-person-roles/overview":
    get:
      tags:
      - PersonFederationRolesOverview
      operationId: PersonFederationRolesOverview_GetPersonsForFederationOverview
      parameters:
      - name: RoleId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      - name: RoleIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 2
      - name: RoleCodes
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 3
      - name: OrganisationTypeIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 4
      - name: DisciplineIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 5
      - name: FederationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: PersonName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: OrganisationName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: OrganisationCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      - name: FacilityTypeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 10
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 11
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 12
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 13
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
        x-position: 14
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPersonFederationRoleDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/federation-person-roles/overview/ids":
    get:
      tags:
      - PersonFederationRolesOverview
      operationId: PersonFederationRolesOverview_GetIdsForPersonOverview
      parameters:
      - name: RoleId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      - name: RoleIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 2
      - name: RoleCodes
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 3
      - name: OrganisationTypeIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 4
      - name: DisciplineIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
        x-position: 5
      - name: FederationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: PersonName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: OrganisationName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: OrganisationCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      - name: FacilityTypeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 10
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 11
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 12
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 13
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
        x-position: 14
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
      security:
      - JWT: []
  "/api/v1/management/persons/{personId}/finance":
    get:
      tags:
      - PersonFinance
      operationId: PersonFinance_Get
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BillingInfoDto"
      security:
      - JWT: []
    put:
      tags:
      - PersonFinance
      operationId: PersonFinance_Update
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BillingInfoDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    post:
      tags:
      - PersonFinance
      operationId: PersonFinance_Add
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BillingInfoDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/persons/{personId}/finance/generate-invoice":
    post:
      tags:
      - PersonFinance
      operationId: PersonFinance_GenerateInvoice
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonGenerateInvoiceDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int64
      security:
      - JWT: []
  "/api/v1/management/persons/{resourceId}/marketing-info":
    get:
      tags:
      - PersonMarketingInfo
      operationId: PersonMarketingInfo_GetAllByIds
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MarketingInfoDto"
      security:
      - JWT: []
    put:
      tags:
      - PersonMarketingInfo
      operationId: PersonMarketingInfo_Update
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MarketingInfoDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MarketingInfoDto"
      security:
      - JWT: []
  "/api/v1/management/persons/{resourceId}/marketing-info/{id}":
    put:
      tags:
      - PersonMarketingInfo
      operationId: PersonMarketingInfo_Update2
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MarketingInfoDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MarketingInfoDto"
      security:
      - JWT: []
  "/api/v1/management/persons/{resourceId}/marketing-info/links":
    get:
      tags:
      - PersonMarketingInfo
      operationId: PersonMarketingInfo_GetLinks
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LinkDto"
      security:
      - JWT: []
    put:
      tags:
      - PersonMarketingInfo
      operationId: PersonMarketingInfo_UpdateLink
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LinkDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LinkDto"
      security:
      - JWT: []
    post:
      tags:
      - PersonMarketingInfo
      operationId: PersonMarketingInfo_CreateLink
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MarketingLinkDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MarketingLinkDto"
      security:
      - JWT: []
  "/api/v1/management/persons/{resourceId}/marketing-info/links/{id}":
    delete:
      tags:
      - PersonMarketingInfo
      operationId: PersonMarketingInfo_DeleteLink
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/person-relations/children/{personId}":
    get:
      tags:
      - PersonRelations
      operationId: PersonRelations_GetChildren
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonRelationDto"
      security:
      - JWT: []
  "/api/v1/management/person-relations/parents/{personId}":
    get:
      tags:
      - PersonRelations
      operationId: PersonRelations_GetParents
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonRelationDto"
      security:
      - JWT: []
  "/api/v1/management/person-relations":
    post:
      tags:
      - PersonRelations
      operationId: PersonRelations_AddPersonRelation
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonRelationDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/person-relations/{id}":
    delete:
      tags:
      - PersonRelations
      operationId: PersonRelations_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/person-relation-types":
    get:
      tags:
      - PersonRelationTypes
      operationId: PersonRelationTypes_GetPersonRelationTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonRelationTypeDto"
      security:
      - JWT: []
  "/api/v1/management/person-tags/{id}/tag-type/{tagType}":
    get:
      tags:
      - PersonTags
      operationId: PersonTags_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: tagType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    delete:
      tags:
      - PersonTags
      operationId: PersonTags_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: tagType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    put:
      tags:
      - PersonTags
      operationId: PersonTags_Update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: tagType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonTagDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/person-tags/tag-type/{tagType}":
    post:
      tags:
      - PersonTags
      operationId: PersonTags_Create
      parameters:
      - name: tagType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/TagType"
        x-position: 1
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonTagDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/person-tags/multiple":
    post:
      tags:
      - PersonTags
      operationId: PersonTags_AddTagToPeople
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateMultiplePersonTagsDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/person-tags/person/{personId}/tag-type/{tagType}":
    get:
      tags:
      - PersonTags
      operationId: PersonTags_GetPersonTags
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: tagType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      - name: activeOnly
        in: query
        schema:
          type: boolean
          default: false
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/person-tags/federation-person/{federationMembershipIdentifier}/tag-type/{tagType}":
    get:
      tags:
      - PersonTags
      operationId: PersonTags_GetFederationPersonTags
      parameters:
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: tagType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      - name: activeOnly
        in: query
        schema:
          type: boolean
          default: false
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/person-tags/club-person/{federationMembershipIdentifier}/tag-type/{tagType}":
    get:
      tags:
      - PersonTags
      operationId: PersonTags_GetClubPersonTags
      parameters:
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: tagType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      - name: activeOnly
        in: query
        schema:
          type: boolean
          default: false
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/persons/{personId}/teams":
    get:
      tags:
      - PersonTeams
      operationId: PersonTeams_GetPersonsActiveTeams
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TeamMemberListDto"
      security:
      - JWT: []
  "/api/v1/management/persons/{personId}/teams/historic":
    get:
      tags:
      - PersonTeams
      operationId: PersonTeams_GetPersonHistoricTeams
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TeamMemberListDto"
      security:
      - JWT: []
  "/api/v1/management/persons/{personId}/teams/{teamId}":
    post:
      tags:
      - PersonTeams
      operationId: PersonTeams_AssignPersonTeam
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: teamId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AddTeamMemberDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamMemberListDto"
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/reviews":
    get:
      tags:
      - PersonUpForReview
      operationId: PersonUpForReview_GetReviews
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PersonUpForReviewDto"
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/reviews/remark":
    put:
      tags:
      - PersonUpForReview
      operationId: PersonUpForReview_UpdateRemark
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ReviewRemarkDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/people/{personId}/reviews/done":
    post:
      tags:
      - PersonUpForReview
      operationId: PersonUpForReview_MarkReviewAsDone
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ReviewRemarkDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/photo-albums/position/{id}":
    put:
      tags:
      - PhotoAlbums
      operationId: PhotoAlbums_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateItemPositionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/photo-albums":
    get:
      tags:
      - PhotoAlbums
      operationId: PhotoAlbums_GetAll
      parameters:
      - name: IsPublished
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPhotoAlbumDto"
      security:
      - JWT: []
    post:
      tags:
      - PhotoAlbums
      operationId: PhotoAlbums_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PhotoAlbumDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PhotoAlbumDto"
      security:
      - JWT: []
  "/api/v1/management/photo-albums/{id}":
    get:
      tags:
      - PhotoAlbums
      operationId: PhotoAlbums_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PhotoAlbumDto"
      security:
      - JWT: []
    put:
      tags:
      - PhotoAlbums
      operationId: PhotoAlbums_Put2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PhotoAlbumDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PhotoAlbumDto"
      security:
      - JWT: []
    delete:
      tags:
      - PhotoAlbums
      operationId: PhotoAlbums_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/plan-assignments/{id}":
    get:
      tags:
      - PlanAssignment
      operationId: PlanAssignment_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanAssignmentDto"
      security:
      - JWT: []
    put:
      tags:
      - PlanAssignment
      operationId: PlanAssignment_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanAssignmentUpdateDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanAssignmentDto"
      security:
      - JWT: []
    delete:
      tags:
      - PlanAssignment
      operationId: PlanAssignment_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/plan-assignments":
    post:
      tags:
      - PlanAssignment
      operationId: PlanAssignment_Post
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanAssignmentCreateDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanAssignmentDto"
      security:
      - JWT: []
  "/api/v1/management/plan-assignments/person/{personId}":
    get:
      tags:
      - PlanAssignment
      operationId: PlanAssignment_GetPersonPlanAssignments
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PlanAssignmentDto"
      security:
      - JWT: []
  "/api/v1/management/plan-assignments/person/{personId}/parent":
    get:
      tags:
      - PlanAssignment
      operationId: PlanAssignment_GetParentOrganisationPlanAssignmentsForPerson
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PlanAssignmentDto"
      security:
      - JWT: []
  "/api/v1/management/plan-assignments/cancel":
    post:
      tags:
      - PlanAssignment
      operationId: PlanAssignment_CancelPlanAssignment
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanAssignmentCancelDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/plan-assignments/raw-edit":
    put:
      tags:
      - PlanAssignment
      operationId: PlanAssignment_RawEdit
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanAssignmentDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanAssignmentDto"
      security:
      - JWT: []
  "/api/v1/management/plan-assignments/raw-add":
    post:
      tags:
      - PlanAssignment
      operationId: PlanAssignment_RawCreate
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanAssignmentDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanAssignmentDto"
      security:
      - JWT: []
  "/api/v1/management/plan-cancellation-reasons":
    get:
      tags:
      - PlanCancellationReasons
      operationId: PlanCancellationReasons_GetAll
      parameters:
      - name: IsDisabled
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPlanCancellationReasonDto"
      security:
      - JWT: []
    post:
      tags:
      - PlanCancellationReasons
      operationId: PlanCancellationReasons_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanCancellationReasonDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanCancellationReasonDto"
      security:
      - JWT: []
  "/api/v1/management/plan-cancellation-reasons/{id}":
    get:
      tags:
      - PlanCancellationReasons
      operationId: PlanCancellationReasons_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanCancellationReasonDto"
      security:
      - JWT: []
    put:
      tags:
      - PlanCancellationReasons
      operationId: PlanCancellationReasons_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanCancellationReasonDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanCancellationReasonDto"
      security:
      - JWT: []
    delete:
      tags:
      - PlanCancellationReasons
      operationId: PlanCancellationReasons_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/plan-cancellation-reasons/parent":
    get:
      tags:
      - PlanCancellationReasons
      operationId: PlanCancellationReasons_GetAllForParentOrganisation
      parameters:
      - name: IsDisabled
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPlanCancellationReasonDto"
      security:
      - JWT: []
  "/api/v1/management/plans/person/{personId}":
    get:
      tags:
      - Plans
      operationId: Plans_GetPlansForPersonToAssign
      parameters:
      - name: organisationId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      - name: startDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PlanDto"
      security:
      - JWT: []
  "/api/v1/management/plans":
    get:
      tags:
      - Plans
      operationId: Plans_GetAll
      parameters:
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: Season
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: CategoryTypeCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: IsActive
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 4
      - name: PlanCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 8
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPlanDto"
      security:
      - JWT: []
    post:
      tags:
      - Plans
      operationId: Plans_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanDto"
      security:
      - JWT: []
  "/api/v1/management/plans/new-person-plans":
    get:
      tags:
      - Plans
      operationId: Plans_GetNewPersonFederationPlans
      parameters:
      - name: organisationId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: gender
        in: query
        schema:
          "$ref": "#/components/schemas/Gender"
        x-position: 2
      - name: birthdate
        in: query
        schema:
          type: string
          format: date-time
        x-position: 3
      - name: startDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/plans/parent":
    get:
      tags:
      - Plans
      operationId: Plans_GetForParentOrganisation
      parameters:
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: Season
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: CategoryTypeCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: IsActive
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 4
      - name: PlanCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 8
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPlanDto"
      security:
      - JWT: []
  "/api/v1/management/plans/yearly-prolongation":
    get:
      tags:
      - Plans
      operationId: Plans_YearlyProlongation
      parameters:
      - name: fromDate
        in: query
        schema:
          type: string
          format: date-time
        x-position: 1
      - name: untilDate
        in: query
        schema:
          type: string
          format: date-time
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/management/plans/copy-season-plans":
    post:
      tags:
      - Plans
      operationId: Plans_CopySeasonPlans
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CopySeasonPlansDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/plans/{id}":
    get:
      tags:
      - Plans
      operationId: Plans_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanDto"
      security:
      - JWT: []
    put:
      tags:
      - Plans
      operationId: Plans_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlanDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlanDto"
      security:
      - JWT: []
    delete:
      tags:
      - Plans
      operationId: Plans_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/player-licenses/person/{personId}":
    get:
      tags:
      - PlayerLicenses
      operationId: PlayerLicenses_GetLicensesForMember
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PlayerLicenseDto"
      security:
      - JWT: []
  "/api/v1/management/player-licenses":
    get:
      tags:
      - PlayerLicenses
      operationId: PlayerLicenses_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPlayerLicenseDto"
      security:
      - JWT: []
    post:
      tags:
      - PlayerLicenses
      operationId: PlayerLicenses_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlayerLicenseDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayerLicenseDto"
      security:
      - JWT: []
  "/api/v1/management/player-licenses/{id}":
    get:
      tags:
      - PlayerLicenses
      operationId: PlayerLicenses_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayerLicenseDto"
      security:
      - JWT: []
    put:
      tags:
      - PlayerLicenses
      operationId: PlayerLicenses_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlayerLicenseDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayerLicenseDto"
      security:
      - JWT: []
    delete:
      tags:
      - PlayerLicenses
      operationId: PlayerLicenses_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/player-license-types":
    get:
      tags:
      - PlayerLicenseType
      operationId: PlayerLicenseType_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPlayerLicenseTypeDto"
      security:
      - JWT: []
    post:
      tags:
      - PlayerLicenseType
      operationId: PlayerLicenseType_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlayerLicenseTypeDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayerLicenseTypeDto"
      security:
      - JWT: []
  "/api/v1/management/player-license-types/{id}":
    get:
      tags:
      - PlayerLicenseType
      operationId: PlayerLicenseType_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayerLicenseTypeDto"
      security:
      - JWT: []
    put:
      tags:
      - PlayerLicenseType
      operationId: PlayerLicenseType_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlayerLicenseTypeDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayerLicenseTypeDto"
      security:
      - JWT: []
    delete:
      tags:
      - PlayerLicenseType
      operationId: PlayerLicenseType_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/price-tables":
    get:
      tags:
      - PriceTables
      operationId: PriceTables_GetAll
      parameters:
      - name: Destination
        in: query
        schema:
          "$ref": "#/components/schemas/PriceTableDestination"
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    post:
      tags:
      - PriceTables
      operationId: PriceTables_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PriceTableDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/price-tables/{id}/destination/{destination}":
    get:
      tags:
      - PriceTables
      operationId: PriceTables_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: destination
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/PriceTableDestination"
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    put:
      tags:
      - PriceTables
      operationId: PriceTables_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: destination
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/PriceTableDestination"
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdatePriceTableInput"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    delete:
      tags:
      - PriceTables
      operationId: PriceTables_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: destination
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/PriceTableDestination"
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/registration-forms":
    get:
      tags:
      - RegistrationFormConfig
      operationId: RegistrationFormConfig_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfRegistrationFormConfigDto"
      security:
      - JWT: []
    post:
      tags:
      - RegistrationFormConfig
      operationId: RegistrationFormConfig_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegistrationFormConfigDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RegistrationFormConfigDto"
      security:
      - JWT: []
  "/api/v1/management/registration-forms/{id}":
    get:
      tags:
      - RegistrationFormConfig
      operationId: RegistrationFormConfig_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RegistrationFormConfigDto"
      security:
      - JWT: []
    put:
      tags:
      - RegistrationFormConfig
      operationId: RegistrationFormConfig_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegistrationFormConfigDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RegistrationFormConfigDto"
      security:
      - JWT: []
    delete:
      tags:
      - RegistrationFormConfig
      operationId: RegistrationFormConfig_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/rental-price-entries":
    get:
      tags:
      - RentalPriceEntries
      operationId: RentalPriceEntries_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfRentalPriceEntryDto"
      security:
      - JWT: []
    post:
      tags:
      - RentalPriceEntries
      operationId: RentalPriceEntries_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RentalPriceEntryDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RentalPriceEntryDto"
      security:
      - JWT: []
  "/api/v1/management/rental-price-entries/{id}":
    get:
      tags:
      - RentalPriceEntries
      operationId: RentalPriceEntries_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RentalPriceEntryDto"
      security:
      - JWT: []
    put:
      tags:
      - RentalPriceEntries
      operationId: RentalPriceEntries_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RentalPriceEntryDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RentalPriceEntryDto"
      security:
      - JWT: []
    delete:
      tags:
      - RentalPriceEntries
      operationId: RentalPriceEntries_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/rentals/prolongation":
    post:
      tags:
      - Rentals
      operationId: Rentals_Prolong
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RentalsProlongationDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
                format: guid
      security:
      - JWT: []
  "/api/v1/management/rentals":
    get:
      tags:
      - Rentals
      operationId: Rentals_GetAll
      parameters:
      - name: PersonId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 1
      - name: SeasonId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: PersonName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: InventoryItemType
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: StartDate.From
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 6
      - name: StartDate.To
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 7
      - name: IsHistoric
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 8
      - name: InventoryItem
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 10
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 11
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 12
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfRentalDto"
      security:
      - JWT: []
    post:
      tags:
      - Rentals
      operationId: Rentals_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RentalDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RentalDto"
      security:
      - JWT: []
  "/api/v1/management/rentals/{id}":
    get:
      tags:
      - Rentals
      operationId: Rentals_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RentalDto"
      security:
      - JWT: []
    put:
      tags:
      - Rentals
      operationId: Rentals_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RentalDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RentalDto"
      security:
      - JWT: []
    delete:
      tags:
      - Rentals
      operationId: Rentals_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/seasons/active-season":
    get:
      tags:
      - Seasons
      operationId: Seasons_ActiveSeason
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SeasonDto"
      security:
      - JWT: []
  "/api/v1/management/seasons":
    get:
      tags:
      - Seasons
      operationId: Seasons_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfSeasonDto"
      security:
      - JWT: []
    post:
      tags:
      - Seasons
      operationId: Seasons_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SeasonDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SeasonDto"
      security:
      - JWT: []
  "/api/v1/management/seasons/{id}":
    get:
      tags:
      - Seasons
      operationId: Seasons_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SeasonDto"
      security:
      - JWT: []
    put:
      tags:
      - Seasons
      operationId: Seasons_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SeasonDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SeasonDto"
      security:
      - JWT: []
    delete:
      tags:
      - Seasons
      operationId: Seasons_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/services/available-for-person/{personId}":
    get:
      tags:
      - Services
      operationId: Services_GetServicesAvailableForPerson
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: IsActive
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 3
      - name: StartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      - name: ServiceCodes
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 5
      - name: FilterByActiveMembership
        in: query
        schema:
          type: boolean
        x-position: 6
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 8
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 9
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ServiceDto"
      security:
      - JWT: []
  "/api/v1/management/services/yearly-prolongation":
    get:
      tags:
      - Services
      operationId: Services_YearlyProlongation
      parameters:
      - name: dateToProlong
        in: query
        schema:
          type: string
          format: date-time
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/management/services/copy-season-services":
    post:
      tags:
      - Services
      operationId: Services_CopySeasonPlans
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CopySeasonServicesDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/services":
    get:
      tags:
      - Services
      operationId: Services_GetAll
      parameters:
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: IsActive
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 2
      - name: StartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      - name: ServiceCodes
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 4
      - name: FilterByActiveMembership
        in: query
        schema:
          type: boolean
        x-position: 5
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 8
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfServiceDto"
      security:
      - JWT: []
    post:
      tags:
      - Services
      operationId: Services_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ServiceDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ServiceDto"
      security:
      - JWT: []
  "/api/v1/management/services/{id}":
    get:
      tags:
      - Services
      operationId: Services_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ServiceDto"
      security:
      - JWT: []
    put:
      tags:
      - Services
      operationId: Services_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ServiceDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ServiceDto"
      security:
      - JWT: []
    delete:
      tags:
      - Services
      operationId: Services_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/spa-layout/theme":
    get:
      tags:
      - SpaLayout
      operationId: SpaLayout_GetTheme
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ThemeDto"
      security:
      - JWT: []
  "/api/v1/management/spa-layout/languages":
    get:
      tags:
      - SpaLayout
      operationId: SpaLayout_GetLanguages
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - JWT: []
  "/api/v1/management/spa-layout/menu":
    get:
      tags:
      - SpaLayout
      operationId: SpaLayout_GetMenu
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MenuItemDto"
      security:
      - JWT: []
  "/api/v1/management/spa-layout/custom-translations":
    get:
      tags:
      - SpaLayout
      operationId: SpaLayout_GetCustomTranslations
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      deprecated: true
      security:
      - JWT: []
  "/api/v1/management/spa-layout/container":
    get:
      tags:
      - SpaLayout
      operationId: SpaLayout_GetContainer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContainerSpaLayoutDto"
      security:
      - JWT: []
  "/api/v1/management/spa-layout/users":
    get:
      tags:
      - SpaLayout
      operationId: SpaLayout_GetTenantUsers
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserSpaLayoutDto"
      security:
      - JWT: []
  "/api/v1/management/sponsors":
    get:
      tags:
      - Sponsors
      operationId: Sponsors_GetAll
      parameters:
      - name: ShowInApp
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfSponsorDto"
      security:
      - JWT: []
    post:
      tags:
      - Sponsors
      operationId: Sponsors_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SponsorDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SponsorDto"
      security:
      - JWT: []
  "/api/v1/management/sponsors/position/{id}":
    put:
      tags:
      - Sponsors
      operationId: Sponsors_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateItemPositionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/sponsors/{id}":
    get:
      tags:
      - Sponsors
      operationId: Sponsors_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SponsorDto"
      security:
      - JWT: []
    put:
      tags:
      - Sponsors
      operationId: Sponsors_Put2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SponsorDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SponsorDto"
      security:
      - JWT: []
    delete:
      tags:
      - Sponsors
      operationId: Sponsors_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/sport-achievements":
    get:
      tags:
      - SportAchievements
      operationId: SportAchievements_GetAll
      parameters:
      - name: PersonGuid
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfSportAchievementDto"
      security:
      - JWT: []
    post:
      tags:
      - SportAchievements
      operationId: SportAchievements_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SportAchievementDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SportAchievementDto"
      security:
      - JWT: []
  "/api/v1/management/sport-achievements/{id}":
    get:
      tags:
      - SportAchievements
      operationId: SportAchievements_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SportAchievementDto"
      security:
      - JWT: []
    put:
      tags:
      - SportAchievements
      operationId: SportAchievements_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SportAchievementDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SportAchievementDto"
      security:
      - JWT: []
    delete:
      tags:
      - SportAchievements
      operationId: SportAchievements_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/subscription-import/download-csv-template":
    get:
      tags:
      - SubscriptionImport
      operationId: SubscriptionImport_DownloadCsvImportTemplate
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/subscription-import/import-from-csv":
    post:
      tags:
      - SubscriptionImport
      operationId: SubscriptionImport_CsvFileForImport
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/management/subscription-import/import-from-csv-preview":
    post:
      tags:
      - SubscriptionImport
      operationId: SubscriptionImport_CsvFileForImportPreview
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubscriptionCsvImportResultDto"
      security:
      - JWT: []
  "/api/v1/management/subscriptions/person/{personId}":
    get:
      tags:
      - Subscriptions
      operationId: Subscriptions_GetAll
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: PersonId
        in: query
        schema:
          type: string
          format: guid
        x-position: 2
      - name: StartedAfter
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      - name: EndsBefore
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      - name: IncludeFamilySubscriptions
        in: query
        schema:
          type: boolean
        x-position: 5
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 8
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfSubscriptionDto"
      security:
      - JWT: []
  "/api/v1/management/subscriptions/{subscriptionId}/uncancel":
    post:
      tags:
      - Subscriptions
      operationId: Subscriptions_UncancelSubscription
      parameters:
      - name: subscriptionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/subscriptions":
    get:
      tags:
      - Subscriptions
      operationId: Subscriptions_GetAll2
      parameters:
      - name: PersonId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: StartedAfter
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 2
      - name: EndsBefore
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      - name: IncludeFamilySubscriptions
        in: query
        schema:
          type: boolean
        x-position: 4
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfSubscriptionDto"
      security:
      - JWT: []
    post:
      tags:
      - Subscriptions
      operationId: Subscriptions_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SubscriptionDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubscriptionDto"
      security:
      - JWT: []
  "/api/v1/management/subscriptions/{id}":
    get:
      tags:
      - Subscriptions
      operationId: Subscriptions_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubscriptionDto"
      security:
      - JWT: []
    put:
      tags:
      - Subscriptions
      operationId: Subscriptions_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SubscriptionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SubscriptionDto"
      security:
      - JWT: []
    delete:
      tags:
      - Subscriptions
      operationId: Subscriptions_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/surveys/{resourceId}/question-categories/all":
    get:
      tags:
      - SurveyQuestionCategories
      operationId: SurveyQuestionCategories_GetAllCategories
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      security:
      - JWT: []
  "/api/v1/management/surveys/{resourceId}/question-categories":
    get:
      tags:
      - SurveyQuestionCategories
      operationId: SurveyQuestionCategories_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfSurveyQuestionCategoryDto"
      security:
      - JWT: []
    post:
      tags:
      - SurveyQuestionCategories
      operationId: SurveyQuestionCategories_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SurveyQuestionCategoryDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SurveyQuestionCategoryDto"
      security:
      - JWT: []
  "/api/v1/management/surveys/{resourceId}/question-categories/{id}":
    get:
      tags:
      - SurveyQuestionCategories
      operationId: SurveyQuestionCategories_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SurveyQuestionCategoryDto"
      security:
      - JWT: []
    put:
      tags:
      - SurveyQuestionCategories
      operationId: SurveyQuestionCategories_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SurveyQuestionCategoryDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SurveyQuestionCategoryDto"
      security:
      - JWT: []
    delete:
      tags:
      - SurveyQuestionCategories
      operationId: SurveyQuestionCategories_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/surveys/{resourceId}/questions/{id}/position":
    put:
      tags:
      - SurveyQuestions
      operationId: SurveyQuestions_UpdatePosition
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateItemPositionDtoOfGuid"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/surveys/{resourceId}/questions/{questionId}/options":
    get:
      tags:
      - SurveyQuestions
      operationId: SurveyQuestions_GetQuestionOptions
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: questionId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SurveyQuestionOptionDto"
      security:
      - JWT: []
    post:
      tags:
      - SurveyQuestions
      operationId: SurveyQuestions_AddQuestionOption
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: questionId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SurveyQuestionOptionDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/surveys/{resourceId}/questions/{questionId}/options/{optionId}":
    put:
      tags:
      - SurveyQuestions
      operationId: SurveyQuestions_UpdateQuestionOption
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: questionId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      - name: optionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 3
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SurveyQuestionOptionDto"
        required: true
        x-position: 4
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    delete:
      tags:
      - SurveyQuestions
      operationId: SurveyQuestions_DeleteQuestionOption
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: questionId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      - name: optionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/surveys/{resourceId}/questions":
    get:
      tags:
      - SurveyQuestions
      operationId: SurveyQuestions_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfSurveyQuestionDto"
      security:
      - JWT: []
    post:
      tags:
      - SurveyQuestions
      operationId: SurveyQuestions_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SurveyQuestionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SurveyQuestionDto"
      security:
      - JWT: []
  "/api/v1/management/surveys/{resourceId}/questions/{id}":
    get:
      tags:
      - SurveyQuestions
      operationId: SurveyQuestions_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SurveyQuestionDto"
      security:
      - JWT: []
    put:
      tags:
      - SurveyQuestions
      operationId: SurveyQuestions_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SurveyQuestionDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SurveyQuestionDto"
      security:
      - JWT: []
    delete:
      tags:
      - SurveyQuestions
      operationId: SurveyQuestions_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/surveys/{id}/copy":
    post:
      tags:
      - Surveys
      operationId: Surveys_Post
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CopySurveyDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SurveyDto"
      security:
      - JWT: []
  "/api/v1/management/surveys":
    get:
      tags:
      - Surveys
      operationId: Surveys_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfSurveyDto"
      security:
      - JWT: []
    post:
      tags:
      - Surveys
      operationId: Surveys_Post2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SurveyDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SurveyDto"
      security:
      - JWT: []
  "/api/v1/management/surveys/{id}":
    get:
      tags:
      - Surveys
      operationId: Surveys_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SurveyDto"
      security:
      - JWT: []
    put:
      tags:
      - Surveys
      operationId: Surveys_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SurveyDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SurveyDto"
      security:
      - JWT: []
    delete:
      tags:
      - Surveys
      operationId: Surveys_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/surveys/{surveyId}/submissions":
    get:
      tags:
      - SurveySubmissions
      operationId: SurveySubmissions_GetAll
      parameters:
      - name: surveyId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfSurveySubmissionDto"
      security:
      - JWT: []
  "/api/v1/management/surveys/{surveyId}/submissions/{id}":
    get:
      tags:
      - SurveySubmissions
      operationId: SurveySubmissions_Get
      parameters:
      - name: surveyId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SurveySubmissionDetailsDto"
      security:
      - JWT: []
  "/api/v1/management/system-notifications":
    get:
      tags:
      - SystemNotifications
      operationId: SystemNotifications_GetNotificationsForCurrentUser
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SystemNotificationDto"
      security:
      - JWT: []
  "/api/v1/management/system-settings/all":
    get:
      tags:
      - SystemSettings
      operationId: SystemSettings_GetAllSystemSettings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SystemSettingValueDetailsDto"
      security:
      - JWT: []
  "/api/v1/management/system-settings":
    put:
      tags:
      - SystemSettings
      operationId: SystemSettings_Update
      requestBody:
        x-name: systemSettings
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/SystemSettingValueDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/tag-groups":
    get:
      tags:
      - TagGroups
      operationId: TagGroups_GetAll
      parameters:
      - name: tagType
        in: query
        schema:
          "$ref": "#/components/schemas/TagType"
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    post:
      tags:
      - TagGroups
      operationId: TagGroups_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TagGroupDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/tag-groups/{id}/tag-type/{tagType}":
    get:
      tags:
      - TagGroups
      operationId: TagGroups_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: tagType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    delete:
      tags:
      - TagGroups
      operationId: TagGroups_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: tagType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/tag-groups/{id}":
    put:
      tags:
      - TagGroups
      operationId: TagGroups_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TagGroupDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/tag-groups/tag-type/{tagType}/position/{id}":
    put:
      tags:
      - TagGroups
      operationId: TagGroups_Put2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: tagType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateItemPositionDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/tags":
    get:
      tags:
      - Tags
      operationId: Tags_GetAll
      parameters:
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: tagType
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      - name: tagTypes[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagType"
        x-position: 3
      - name: IsHistoric
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 4
      - name: IsVisibleForPersons
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 5
      - name: IncludeParentTags
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 6
      - name: UpdatedSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 7
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 9
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    post:
      tags:
      - Tags
      operationId: Tags_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TagDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/tags/{id}/tag-type/{tagType}":
    get:
      tags:
      - Tags
      operationId: Tags_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: tagType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
    delete:
      tags:
      - Tags
      operationId: Tags_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: tagType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/tags/{id}":
    put:
      tags:
      - Tags
      operationId: Tags_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TagDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/tags/parent":
    get:
      tags:
      - Tags
      operationId: Tags_GetParentTags
      parameters:
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: tagType
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      - name: tagTypes[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagType"
        x-position: 3
      - name: IsHistoric
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 4
      - name: IsVisibleForPersons
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 5
      - name: IncludeParentTags
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 6
      - name: UpdatedSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 7
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 9
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/tags/position/{id}/tag-type/{tagType}":
    put:
      tags:
      - Tags
      operationId: Tags_Put2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: tagType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/TagType"
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateTagPositionDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/team-cancellation-reasons":
    get:
      tags:
      - TeamCancellationReasons
      operationId: TeamCancellationReasons_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfTeamCancellationReasonDto"
      security:
      - JWT: []
    post:
      tags:
      - TeamCancellationReasons
      operationId: TeamCancellationReasons_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamCancellationReasonDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamCancellationReasonDto"
      security:
      - JWT: []
  "/api/v1/management/team-cancellation-reasons/{id}":
    get:
      tags:
      - TeamCancellationReasons
      operationId: TeamCancellationReasons_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamCancellationReasonDto"
      security:
      - JWT: []
    put:
      tags:
      - TeamCancellationReasons
      operationId: TeamCancellationReasons_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamCancellationReasonDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamCancellationReasonDto"
      security:
      - JWT: []
    delete:
      tags:
      - TeamCancellationReasons
      operationId: TeamCancellationReasons_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/team-categories":
    get:
      tags:
      - TeamCategories
      operationId: TeamCategories_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfTeamCategoryDto"
      security:
      - JWT: []
    post:
      tags:
      - TeamCategories
      operationId: TeamCategories_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamCategoryDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamCategoryDto"
      security:
      - JWT: []
  "/api/v1/management/team-categories/{id}":
    get:
      tags:
      - TeamCategories
      operationId: TeamCategories_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamCategoryDto"
      security:
      - JWT: []
    put:
      tags:
      - TeamCategories
      operationId: TeamCategories_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamCategoryDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamCategoryDto"
      security:
      - JWT: []
    delete:
      tags:
      - TeamCategories
      operationId: TeamCategories_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/team-license-types":
    get:
      tags:
      - TeamLicenseTypes
      operationId: TeamLicenseTypes_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfNamedEntityDto"
      security:
      - JWT: []
    post:
      tags:
      - TeamLicenseTypes
      operationId: TeamLicenseTypes_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NamedEntityDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/management/organisations/{resourceId}/team-license-types/{id}":
    get:
      tags:
      - TeamLicenseTypes
      operationId: TeamLicenseTypes_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
    put:
      tags:
      - TeamLicenseTypes
      operationId: TeamLicenseTypes_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NamedEntityDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
    delete:
      tags:
      - TeamLicenseTypes
      operationId: TeamLicenseTypes_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/teams/{resourceId}/members/bulk":
    post:
      tags:
      - TeamMembers
      operationId: TeamMembers_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BulkAddTeamMembersDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/teams/{resourceId}/members":
    get:
      tags:
      - TeamMembers
      operationId: TeamMembers_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: ActiveMembers
        in: query
        schema:
          type: boolean
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfTeamMemberListDto"
      security:
      - JWT: []
    post:
      tags:
      - TeamMembers
      operationId: TeamMembers_Post2
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AddTeamMemberDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamMemberListDto"
      security:
      - JWT: []
  "/api/v1/management/teams/{resourceId}/members/{id}":
    get:
      tags:
      - TeamMembers
      operationId: TeamMembers_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamMemberListDto"
      security:
      - JWT: []
    put:
      tags:
      - TeamMembers
      operationId: TeamMembers_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateTeamMemberDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamMemberListDto"
      security:
      - JWT: []
    delete:
      tags:
      - TeamMembers
      operationId: TeamMembers_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/team-roles":
    get:
      tags:
      - TeamRoles
      operationId: TeamRoles_GetAll
      parameters:
      - name: ContainerId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      - name: TenantId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfTeamRoleDto"
      security:
      - JWT: []
    post:
      tags:
      - TeamRoles
      operationId: TeamRoles_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamRoleDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamRoleDto"
      security:
      - JWT: []
  "/api/v1/management/team-roles/{id}":
    get:
      tags:
      - TeamRoles
      operationId: TeamRoles_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamRoleDto"
      security:
      - JWT: []
    put:
      tags:
      - TeamRoles
      operationId: TeamRoles_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamRoleDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamRoleDto"
      security:
      - JWT: []
    delete:
      tags:
      - TeamRoles
      operationId: TeamRoles_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/teams/{id}":
    get:
      tags:
      - Teams
      operationId: Teams_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamDto"
      security:
      - JWT: []
    put:
      tags:
      - Teams
      operationId: Teams_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateTeamDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamDto"
      security:
      - JWT: []
    delete:
      tags:
      - Teams
      operationId: Teams_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/teams":
    post:
      tags:
      - Teams
      operationId: Teams_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateTeamDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamDto"
      security:
      - JWT: []
    get:
      tags:
      - Teams
      operationId: Teams_GetAll
      parameters:
      - name: SeasonId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      - name: NoSeason
        in: query
        schema:
          type: boolean
        x-position: 2
      - name: ActiveSeason
        in: query
        schema:
          type: boolean
        x-position: 3
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: ShortName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: TeamLicenseTypeId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 6
      - name: TeamCategoryId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 7
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 8
      - name: UpdatedSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 9
      - name: IsCompetitionTeam
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 10
      - name: MatchCategoryId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 11
      - name: DisciplineId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 12
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 13
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 14
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 15
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfTeamDto"
      security:
      - JWT: []
  "/api/v1/management/teams/copy-team-to-season":
    post:
      tags:
      - Teams
      operationId: Teams_CopyTeamToSeason
      requestBody:
        x-name: copyTeamWrapperDto
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CopyTeamWrapperDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/management/teams/{id}/license":
    put:
      tags:
      - Teams
      operationId: Teams_UpdateTeamLicense
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateTeamLicenseDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/top-sport/person/{personId}":
    get:
      tags:
      - TopSportInfo
      operationId: TopSportInfo_GetForPerson
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TopSportInfoDto"
      security:
      - JWT: []
    put:
      tags:
      - TopSportInfo
      operationId: TopSportInfo_Update
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TopSportInfoDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TopSportInfoDto"
      security:
      - JWT: []
    post:
      tags:
      - TopSportInfo
      operationId: TopSportInfo_Create
      parameters:
      - name: personId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TopSportInfoDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TopSportInfoDto"
      security:
      - JWT: []
  "/api/v1/management/training-types":
    get:
      tags:
      - TrainingTypes
      operationId: TrainingTypes_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfTrainingTypeDto"
      security:
      - JWT: []
    post:
      tags:
      - TrainingTypes
      operationId: TrainingTypes_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TrainingTypeDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrainingTypeDto"
      security:
      - JWT: []
  "/api/v1/management/training-types/{id}":
    get:
      tags:
      - TrainingTypes
      operationId: TrainingTypes_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrainingTypeDto"
      security:
      - JWT: []
    put:
      tags:
      - TrainingTypes
      operationId: TrainingTypes_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TrainingTypeDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrainingTypeDto"
      security:
      - JWT: []
    delete:
      tags:
      - TrainingTypes
      operationId: TrainingTypes_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/transponders":
    get:
      tags:
      - Transponders
      operationId: Transponders_GetAll
      parameters:
      - name: PersonId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfTransponderDto"
      security:
      - JWT: []
    post:
      tags:
      - Transponders
      operationId: Transponders_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransponderDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransponderDto"
      security:
      - JWT: []
  "/api/v1/management/transponders/{id}":
    get:
      tags:
      - Transponders
      operationId: Transponders_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransponderDto"
      security:
      - JWT: []
    put:
      tags:
      - Transponders
      operationId: Transponders_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransponderDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransponderDto"
      security:
      - JWT: []
    delete:
      tags:
      - Transponders
      operationId: Transponders_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/transponder-types":
    get:
      tags:
      - TransponderTypes
      operationId: TransponderTypes_GetTransponderTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TransponderTypeDto"
      security:
      - JWT: []
  "/api/v1/management/users/tenant-users":
    get:
      tags:
      - Users
      operationId: Users_GetTenantUsers
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserDto"
      security:
      - JWT: []
  "/api/v1/management/users/users-for-organisation/{organisationId}":
    get:
      tags:
      - Users
      operationId: Users_GetUsersForOrganisation
      parameters:
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserDto"
      security:
      - JWT: []
  "/api/v1/management/users/{id}":
    get:
      tags:
      - Users
      operationId: Users_GetById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserDetailsDto"
      security:
      - JWT: []
  "/api/v1/management/users":
    get:
      tags:
      - Users
      operationId: Users_GetAll
      parameters:
      - name: IsActive
        in: query
        schema:
          type: boolean
        x-position: 1
      - name: FederationGuid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: Email
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: Login
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: FullName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: ClubName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: UserTypeId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: SystemRoleId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 8
      - name: SystemRoleCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 9
      - name: ExternalOrganisationName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 10
      - name: HasRoleId
        in: query
        schema:
          type: boolean
        x-position: 11
      - name: HasPerson
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 12
      - name: QuickSearch
        in: query
        schema:
          type: string
          nullable: true
        x-position: 13
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 14
      - name: ExcludeOrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 15
      - name: OrganisationStatus
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/OrganisationStatus"
        x-position: 16
      - name: UserIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 17
      - name: IncludeCurrentUser
        in: query
        schema:
          type: boolean
        x-position: 18
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 19
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 20
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 21
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfUserListDto"
      security:
      - JWT: []
    post:
      tags:
      - Users
      operationId: Users_Create
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateUserDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/users/{id}/name":
    get:
      tags:
      - Users
      operationId: Users_GetUserName
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/management/users/resetTwoFactorAuth/{userId}":
    post:
      tags:
      - Users
      operationId: Users_ResetTwoFactorAuth
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/users/clearLockout/{userId}":
    post:
      tags:
      - Users
      operationId: Users_ClearLockout
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/users/{userId}":
    put:
      tags:
      - Users
      operationId: Users_Update
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateUserDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    delete:
      tags:
      - Users
      operationId: Users_Delete
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/users/for-person":
    put:
      tags:
      - Users
      operationId: Users_UpdateForPerson
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateSystemRolesForPersonDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/users/impersonateUser/{userId}":
    post:
      tags:
      - Users
      operationId: Users_ImpersonateUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: useOwnAccount
        in: query
        schema:
          type: boolean
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/management/users/sendConfirmationEmail/{userId}":
    post:
      tags:
      - Users
      operationId: Users_SendConfirmationEmail
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/users/acceptTermsAndConditions/{userId}":
    post:
      tags:
      - UsersTermsAndConditions
      operationId: UsersTermsAndConditions_AcceptTermsAndConditions
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/management/web-sites/{resourceId}/web-files":
    get:
      tags:
      - WebFiles
      operationId: WebFiles_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfWebFileDto"
      security:
      - JWT: []
    post:
      tags:
      - WebFiles
      operationId: WebFiles_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebFileDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebFileDto"
      security:
      - JWT: []
  "/api/v1/management/web-sites/{resourceId}/web-files/{id}":
    get:
      tags:
      - WebFiles
      operationId: WebFiles_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebFileDto"
      security:
      - JWT: []
    put:
      tags:
      - WebFiles
      operationId: WebFiles_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebFileDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebFileDto"
      security:
      - JWT: []
    delete:
      tags:
      - WebFiles
      operationId: WebFiles_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-menus/{resourceId}/items/position/{id}":
    put:
      tags:
      - WebMenuItems
      operationId: WebMenuItems_UpdatePosition
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateItemPositionAndParentDtoOfNullableGuidAndGuid"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-menus/{resourceId}/items":
    post:
      tags:
      - WebMenuItems
      operationId: WebMenuItems_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebMenuItemDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebMenuItemDto"
      security:
      - JWT: []
    get:
      tags:
      - WebMenuItems
      operationId: WebMenuItems_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfWebMenuItemDto"
      security:
      - JWT: []
  "/api/v1/management/web-menus/{resourceId}/items/{id}":
    put:
      tags:
      - WebMenuItems
      operationId: WebMenuItems_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebMenuItemDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebMenuItemDto"
      security:
      - JWT: []
    delete:
      tags:
      - WebMenuItems
      operationId: WebMenuItems_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
    get:
      tags:
      - WebMenuItems
      operationId: WebMenuItems_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebMenuItemDto"
      security:
      - JWT: []
  "/api/v1/management/web-menus":
    get:
      tags:
      - WebMenus
      operationId: WebMenus_GetAll
      parameters:
      - name: WebSiteId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfWebMenuDto"
      security:
      - JWT: []
    post:
      tags:
      - WebMenus
      operationId: WebMenus_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebMenuDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebMenuDto"
      security:
      - JWT: []
  "/api/v1/management/web-menus/{id}":
    get:
      tags:
      - WebMenus
      operationId: WebMenus_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebMenuDto"
      security:
      - JWT: []
    put:
      tags:
      - WebMenus
      operationId: WebMenus_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebMenuDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebMenuDto"
      security:
      - JWT: []
    delete:
      tags:
      - WebMenus
      operationId: WebMenus_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-sites/{resourceId}/web-page-groups/{id}/position":
    put:
      tags:
      - WebPageGroups
      operationId: WebPageGroups_UpdatePosition
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateItemPositionAndParentDtoOfNullableIntegerAndInteger"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-sites/{resourceId}/web-page-groups":
    get:
      tags:
      - WebPageGroups
      operationId: WebPageGroups_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfWebPageGroupDto"
      security:
      - JWT: []
    post:
      tags:
      - WebPageGroups
      operationId: WebPageGroups_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebPageGroupDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebPageGroupDto"
      security:
      - JWT: []
  "/api/v1/management/web-sites/{resourceId}/web-page-groups/{id}":
    get:
      tags:
      - WebPageGroups
      operationId: WebPageGroups_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebPageGroupDto"
      security:
      - JWT: []
    put:
      tags:
      - WebPageGroups
      operationId: WebPageGroups_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebPageGroupDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebPageGroupDto"
      security:
      - JWT: []
    delete:
      tags:
      - WebPageGroups
      operationId: WebPageGroups_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-pages/{resourceId}/web-page-items/position/{id}":
    put:
      tags:
      - WebPageItems
      operationId: WebPageItems_UpdatePosition
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateItemPositionAndParentDtoOfNullableGuidAndGuid"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-pages/{resourceId}/web-page-items/{id}/lock":
    put:
      tags:
      - WebPageItems
      operationId: WebPageItems_LockItem
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-pages/{resourceId}/web-page-items/{id}/unlock":
    put:
      tags:
      - WebPageItems
      operationId: WebPageItems_UnlockItem
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-pages/{resourceId}/web-page-items/{id}/hide":
    put:
      tags:
      - WebPageItems
      operationId: WebPageItems_HideItem
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-pages/{resourceId}/web-page-items/{id}/unhide":
    put:
      tags:
      - WebPageItems
      operationId: WebPageItems_UnhideItem
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-pages/{resourceId}/web-page-items/paste":
    post:
      tags:
      - WebPageItems
      operationId: WebPageItems_PasteItemFromAnotherPage
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: itemIdToCopy
        in: query
        schema:
          type: string
          format: guid
        x-position: 2
      - name: newParentItemId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-pages/{resourceId}/web-page-items/main":
    get:
      tags:
      - WebPageItems
      operationId: WebPageItems_GetMainPageItems
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WebPageItemDto"
      security:
      - JWT: []
  "/api/v1/management/web-pages/{resourceId}/web-page-items/all":
    delete:
      tags:
      - WebPageItems
      operationId: WebPageItems_DeleteAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-pages/{resourceId}/web-page-items":
    get:
      tags:
      - WebPageItems
      operationId: WebPageItems_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfWebPageItemDto"
      security:
      - JWT: []
    post:
      tags:
      - WebPageItems
      operationId: WebPageItems_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebPageItemDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebPageItemDto"
      security:
      - JWT: []
  "/api/v1/management/web-pages/{resourceId}/web-page-items/{id}":
    get:
      tags:
      - WebPageItems
      operationId: WebPageItems_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebPageItemDto"
      security:
      - JWT: []
    put:
      tags:
      - WebPageItems
      operationId: WebPageItems_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebPageItemDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebPageItemDto"
      security:
      - JWT: []
    delete:
      tags:
      - WebPageItems
      operationId: WebPageItems_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-sites/{resourceId}/web-page-layouts":
    get:
      tags:
      - WebPageLayouts
      operationId: WebPageLayouts_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfWebPageLayoutDto"
      security:
      - JWT: []
    post:
      tags:
      - WebPageLayouts
      operationId: WebPageLayouts_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebPageLayoutDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebPageLayoutDto"
      security:
      - JWT: []
  "/api/v1/management/web-sites/{resourceId}/web-page-layouts/{id}":
    get:
      tags:
      - WebPageLayouts
      operationId: WebPageLayouts_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebPageLayoutDto"
      security:
      - JWT: []
    put:
      tags:
      - WebPageLayouts
      operationId: WebPageLayouts_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebPageLayoutDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebPageLayoutDto"
      security:
      - JWT: []
    delete:
      tags:
      - WebPageLayouts
      operationId: WebPageLayouts_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-pages/{id}/copy":
    post:
      tags:
      - WebPages
      operationId: WebPages_DuplicateWebPage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebPageDto"
      security:
      - JWT: []
  "/api/v1/management/web-pages/{id}/position":
    put:
      tags:
      - WebPages
      operationId: WebPages_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateWebPagePositionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-pages":
    get:
      tags:
      - WebPages
      operationId: WebPages_GetAll
      parameters:
      - name: WebSiteId
        in: query
        schema:
          type: string
          format: guid
        x-position: 1
      - name: IsContentBlock
        in: query
        schema:
          type: boolean
        x-position: 2
      - name: IsTemplate
        in: query
        schema:
          type: boolean
        x-position: 3
      - name: WebPageGroupId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      - name: NoGroup
        in: query
        schema:
          type: boolean
        x-position: 5
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 6
      - name: Url
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: Title
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: IsPublished
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 9
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 10
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 11
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 12
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfWebPageDto"
      security:
      - JWT: []
    post:
      tags:
      - WebPages
      operationId: WebPages_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateWebPageDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebPageDto"
      security:
      - JWT: []
  "/api/v1/management/web-pages/{id}":
    get:
      tags:
      - WebPages
      operationId: WebPages_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebPageDto"
      security:
      - JWT: []
    put:
      tags:
      - WebPages
      operationId: WebPages_Put2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebPageDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebPageDto"
      security:
      - JWT: []
    delete:
      tags:
      - WebPages
      operationId: WebPages_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-sites":
    get:
      tags:
      - WebSites
      operationId: WebSites_GetAllForOrganisation
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WebSiteDto"
      security:
      - JWT: []
    post:
      tags:
      - WebSites
      operationId: WebSites_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebSiteDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebSiteDto"
      security:
      - JWT: []
  "/api/v1/management/web-sites/{id}":
    get:
      tags:
      - WebSites
      operationId: WebSites_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebSiteDto"
      security:
      - JWT: []
    put:
      tags:
      - WebSites
      operationId: WebSites_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebSiteDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebSiteDto"
      security:
      - JWT: []
    delete:
      tags:
      - WebSites
      operationId: WebSites_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-sites/credentials":
    put:
      tags:
      - WebSites
      operationId: WebSites_SaveDeploymentCredentials
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WebSiteCredentialsDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/management/web-sites/{id}/media":
    post:
      tags:
      - WebSites
      operationId: WebSites_AddMediaPOST
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                Url:
                  type: string
                  nullable: true
                WebMediaType:
                  "$ref": "#/components/schemas/WebMediaType"
                Id:
                  type: string
                  format: guid
                Name:
                  type: string
                  nullable: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WebMediaDto"
      security:
      - JWT: []
  "/api/v1/management/web-sites/{id}/media/{webMediaId}":
    delete:
      tags:
      - WebSites
      operationId: WebSites_AddMediaDELETE
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: webMediaId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/knwu/federations/{federationId}/organisations":
    get:
      tags:
      - KNWUOrganisations
      operationId: KNWUOrganisations_GetClubFeed
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: planCodes[]
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfKNWUOrganisationDto"
  "/api/v1/knvvl/federations/{federationId}/organisations":
    get:
      tags:
      - KNVVLOrganisations
      operationId: KNVVLOrganisations_GetExtendedClubFeed
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: OrganisationTypeIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfKNVVLClubFeedDto"
      security:
      - JWT: []
  "/api/v1/knvvl/federations/{federationId}/memberships":
    get:
      tags:
      - KnvvlPersons
      operationId: KnvvlPersons_GetExtendedClubFeed
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: federationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: birthdate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/KnvvlMembershipDto"
      security:
      - JWT: []
  "/api/v1/knsb/person/{federationMembershipIdentifier}":
    get:
      tags:
      - KNSBMembers
      operationId: KNSBMembers_GetPerson
      parameters:
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/KNSBPersonDto"
      security:
      - JWT: []
  "/api/v1/knsb/federations/{federationId}/clubs":
    get:
      tags:
      - KNSBOrganisations
      operationId: KNSBOrganisations_GetClubFeed
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfKNSBClubFeedDto"
      security:
      - JWT: []
  "/api/v1/knsb/federations/{federationId}/organisations":
    get:
      tags:
      - KNSBOrganisations
      operationId: KNSBOrganisations_GetExtendedClubFeed
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: OrganisationTypeIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfKNSBExtendedClubFeedDto"
  "/knrb-api/v1/federations/{federationId}/clubs":
    get:
      tags:
      - KnrbClubs
      operationId: KnrbClubs_IndexClubs
      parameters:
      - name: club_name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: club_name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: club_type_id
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 3
      - name: updated_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedClubsKNRB"
  "/api/v1/jbn/federations/{federationId}/clubs":
    get:
      tags:
      - JBNClubs
      operationId: JBNClubs_GetClubFeed
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: LastMinutes
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfJBNClubFeedDto"
  "/external-api/v1/token":
    post:
      tags:
      - ExternalAuthTokens
      operationId: GetToken
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/JwtAuthTokenLoginWithClub"
        required: true
        x-position: 1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: string
        '403':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
  "/external-api/v1/functionaries/codes":
    get:
      tags:
      - ExternalFunctionaries
      operationId: GetFunctionaryTypes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ExternalFederationRoleDto"
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Functionaries-couldnt-be-found
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Error-appeared-while-getting-functionary-types
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/external-api/v1/functionaries":
    get:
      tags:
      - ExternalFunctionaries
      operationId: ListFunctionaries
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ExternalPersonFederationRoleDto"
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Functionaries-couldnt-be-found
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Error-appeared-while-listing-functionaries
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
    post:
      tags:
      - ExternalFunctionaries
      operationId: AddNewFunctionary
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ExternalPersonFederationRoleDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExternalPersonFederationRoleDto"
        '400':
          description: Functionary-id-is-not-in-a-valid-format
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Member-id-couldnt-be-found
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Error-appeared-while-adding-a-new-functionary
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/external-api/v1/functionaries/{functionaryId}":
    put:
      tags:
      - ExternalFunctionaries
      operationId: ModifyFunctionary
      parameters:
      - name: functionaryId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ExternalPersonFederationRoleDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExternalPersonFederationRoleDto"
        '400':
          description: Functionary-id-is-not-in-a-valid-format
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Member-id-couldnt-be-found
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Error-appeared-while-modifying-the-functionary
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
    delete:
      tags:
      - ExternalFunctionaries
      operationId: RemoveFunctionary
      parameters:
      - name: functionaryId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Functionary-id-is-not-in-a-valid-format
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Functionary-id-couldnt-be-found
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Error-appeared-while-removing-the-functionary
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/external-api/v1/members":
    get:
      tags:
      - ExternalMembers
      operationId: GetMembers
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WrappedMemberDetailsExternal"
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
    post:
      tags:
      - ExternalMembers
      operationId: AddMember
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WrappedMemberDetailsExternalInput"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BasicMemberDetailsExternal"
        '400':
          description: Unable-to-process-the-request
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Error-appeared-while-creating-a-new-member
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/external-api/v1/members/{federationMembershipIdentifier}":
    get:
      tags:
      - ExternalMembers
      operationId: GetMemberDetails
      parameters:
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedMemberDetailsExternal"
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Member-was-not-found
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
    put:
      tags:
      - ExternalMembers
      operationId: UpdateMemberDetails
      parameters:
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WrappedMemberDetailsExternalInput"
        required: true
        x-position: 2
      responses:
        '200':
          description: User-was-sucessfully-updated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WrappedMemberDetailsExternal"
        '400':
          description: Unable-to-process-the-request
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Error-appeared-while-updating-a-member
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
    delete:
      tags:
      - ExternalMembers
      operationId: CancelMembership
      parameters:
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ExternalMembershipCancellationDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Unable-to-process-the-request
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Member-was-not-found
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/external-api/v1/persons":
    post:
      tags:
      - ExternalMembers
      operationId: AddBasicMember
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WrappedBasicMemberDetailsExternalInput"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/BasicMemberDetailsExternal"
        '400':
          description: Unable-to-process-the-request
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Error-appeared-while-creating-a-new-member
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/external-api/v1/player-licenses/{federationMembershipIdentifier}":
    get:
      tags:
      - ExternalPlayerLicenses
      operationId: GetPlayerLicenses
      parameters:
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExternalPlayerLicenseDto"
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Member-was-not-found
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
    post:
      tags:
      - ExternalPlayerLicenses
      operationId: CreatePlayerLicense
      parameters:
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ExternalCreatePlayerLicenseDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExternalPlayerLicenseDto"
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Member-was-not-found
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/export-api/v1/persons":
    get:
      tags:
      - Export
      operationId: Export_GetPersons
      parameters:
      - name: UpdatedSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPersonExportDto"
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/export-api/v1/teams":
    get:
      tags:
      - Export
      operationId: Export_GetTeams
      parameters:
      - name: UpdatedSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfTeamExportDto"
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/export-api/v1/tags":
    get:
      tags:
      - Export
      operationId: Export_GetTags
      parameters:
      - name: UpdatedSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfTagExportDto"
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/export-api/v1/person-tags":
    get:
      tags:
      - Export
      operationId: Export_GetPersonTags
      parameters:
      - name: TagId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      - name: UpdatedSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPersonTagExportDto"
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/export-api/v1/events":
    get:
      tags:
      - Export
      operationId: Export_GetEvents
      parameters:
      - name: UpdatedSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfCalendarEventExportDto"
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/export-api/v1/trainings":
    get:
      tags:
      - Export
      operationId: Export_GetTrainings
      parameters:
      - name: UpdatedSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfCalendarEventExportDto"
        '401':
          description: Unauthorized-access
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/dotcom/federations/{federationId}/clubs":
    get:
      tags:
      - DotcomClubs
      operationId: DotcomClubs_IndexClubs
      parameters:
      - name: has_finance_year_start_before
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 1
      - name: has_finance_year_start_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 2
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: updated_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedClubsDotcom"
      security:
      - JWT: []
  "/api/v1/dotcom/federations/{federationId}/members":
    get:
      tags:
      - DotcomMembers
      operationId: DotcomMembers_IndexFederationMember
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: is_player
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 2
      - name: team_name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: team_id
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 4
      - name: club_id
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 5
      - name: tag_codes
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 6
      - name: q
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: updated_at
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 8
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 9
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedClubMembersDotcom"
      security:
      - JWT: []
  "/api/v1/dotcom/federations/{federationId}/team-categories":
    post:
      tags:
      - DotcomTeamCategories
      operationId: DotcomTeamCategories_AddOrUpdateTeamCategoryPOST
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamCategoryDotcomDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamCategoryDotcomDto"
      security:
      - JWT: []
    put:
      tags:
      - DotcomTeamCategories
      operationId: DotcomTeamCategories_AddOrUpdateTeamCategoryPUT
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamCategoryDotcomDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamCategoryDotcomDto"
      security:
      - JWT: []
  "/api/v1/dotcom/federations/{federationId}/teams":
    get:
      tags:
      - DotcomTeams
      description: Sorted by 'updated_at'
      operationId: DotcomTeams_GetTeams
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: TeamId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      - name: ClubId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 4
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DotcomPagedTeamsDto"
      security:
      - JWT: []
  "/api/v1/dotcom/federations/{federationId}/training-types":
    post:
      tags:
      - DotcomTrainings
      operationId: DotcomTrainings_AddOrUpdateTrainingTypePOST
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TrainingTypeDotcomDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrainingTypeDotcomDto"
      security:
      - JWT: []
    put:
      tags:
      - DotcomTrainings
      operationId: DotcomTrainings_AddOrUpdateTrainingTypePUT
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TrainingTypeDotcomDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrainingTypeDotcomDto"
      security:
      - JWT: []
  "/api/v1/dotcom/federations/{federationId}/trainings":
    get:
      tags:
      - DotcomTrainings
      operationId: DotcomTrainings_GetTrainings
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: club_id
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 2
      - name: team_id
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      - name: start_date
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TrainingDotcomDto"
      security:
      - JWT: []
  "/api/v1/au/federations/{federationId}/clubs":
    get:
      tags:
      - AuClubs
      description: Sorted by 'updated_at'
      operationId: AuClubs_IndexClubs
      parameters:
      - name: club_type_id
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 1
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: updated_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedClubsAU"
  "/api/v1/au/federations/{federationId}/members":
    get:
      tags:
      - AuMembers
      operationId: AuMembers_IndexFederationMember
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: is_active
        in: query
        schema:
          type: boolean
        x-position: 2
      - name: return_all
        in: query
        schema:
          type: boolean
        x-position: 3
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: federation_membership_number
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: organisation_guid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 6
      - name: federation_membership_number_start
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 7
      - name: federation_membership_number_end
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 8
      - name: plans_valid_on_date
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 9
      - name: has_club_plan
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 10
      - name: has_federation_plan
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 11
      - name: has_family_plan
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 12
      - name: has_plan_with_parent_guid
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 13
      - name: has_plan_starting_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 14
      - name: has_plan_starting_before
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 15
      - name: has_plan_ending_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 16
      - name: has_plan_ending_before
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 17
      - name: has_plan_insertedat_after
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 18
      - name: has_plan_insertedat_before
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 19
      - name: has_plan_assignment_connected_to_organisation_id
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 20
      - name: q
        in: query
        schema:
          type: string
          nullable: true
        x-position: 21
      - name: updated_at
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 22
      - name: page_number
        in: query
        schema:
          type: integer
          format: int32
        x-position: 23
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedFederationMembersAU"
      security:
      - JWT: []
  "/api/v1/au/federations/{federationId}/member":
    get:
      tags:
      - AuMembers
      operationId: AuMembers_CheckForMembership
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: federation_membership_identifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: date_of_birth
        in: query
        schema:
          type: string
          format: date-time
        x-position: 3
      - name: club_code
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CheckForMembership"
      security:
      - JWT: []
  "/api/v1/au/federations/{federationId}/persons":
    get:
      tags:
      - AuMembers
      operationId: AuMembers_GetPersons
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: FederationMembershipIdentifier
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: ClubId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      - name: IsActive
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 4
      - name: HasMatchLicense
        in: query
        schema:
          type: boolean
          nullable: true
        x-position: 5
      - name: UpdatedSince
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 6
      - name: IncludePlanAssingmentsOfActiveSeason
        in: query
        schema:
          type: boolean
        x-position: 7
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 9
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfAuPersonDto"
      security:
      - JWT: []
  "/api/v1/au/organisations/{organisationId}/organisations":
    get:
      tags:
      - AuOrganisations
      operationId: AuOrganisations_IndexOrganisations
      parameters:
      - name: organisationTypeCode
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 1
      - name: lastMinutes
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 2
      - name: isActive
        in: query
        schema:
          type: boolean
        x-position: 3
      - name: name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: federationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 5
      - name: packageId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 6
      - name: clubName
        in: query
        schema:
          type: string
          nullable: true
        x-position: 7
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 8
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 9
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 10
      - name: organisationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 11
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ExternalOrganisationAuDto"
  "/api/v1/au/federations/{federationId}/persons/ntb/{federationMembershipIdentifier}":
    get:
      tags:
      - AuTriathlon
      operationId: AuTriathlon_GetMemberForNTB
      parameters:
      - name: federationId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: federationMembershipIdentifier
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: dateOfBirth
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
        x-position: 3
      - name: gender
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NtbPersonDto"
      security:
      - JWT: []
  "/api/v1/admin/clubs":
    get:
      tags:
      - AdminClubs
      operationId: AdminClubs_GetAll
      parameters:
      - name: IsActive
        in: query
        schema:
          type: boolean
        x-position: 1
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: FederationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      - name: PackageId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 4
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfClubListDto"
      security:
      - JWT: []
  "/api/v1/admin/clubs/{clubId}/packages":
    get:
      tags:
      - AdminClubs
      operationId: AdminClubs_GetClubPackages
      parameters:
      - name: clubId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/admin/clubs/{clubId}/packages/{packageId}":
    put:
      tags:
      - AdminClubs
      operationId: AdminClubs_AssignPackageToClub
      parameters:
      - name: clubId
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      - name: packageId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers":
    get:
      tags:
      - AdminContainers
      operationId: AdminContainers_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfContainerListDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminContainers
      operationId: AdminContainers_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateContainerDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContainerDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{id}":
    get:
      tags:
      - AdminContainers
      operationId: AdminContainers_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContainerDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminContainers
      operationId: AdminContainers_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateContainerDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContainerDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/system-settings":
    get:
      tags:
      - AdminContainerSystemSettings
      operationId: AdminContainerSystemSettings_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContainerSystemSettingDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminContainerSystemSettings
      operationId: AdminContainerSystemSettings_Update
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: systemSettings
        content:
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/SystemSettingValueDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/dashboard-html-blocks":
    get:
      tags:
      - AdminDashboardHtmlBlock
      operationId: AdminDashboardHtmlBlock_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfDashboardHtmlBlockDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminDashboardHtmlBlock
      operationId: AdminDashboardHtmlBlock_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DashboardHtmlBlockDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DashboardHtmlBlockDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/dashboard-html-blocks/{id}":
    get:
      tags:
      - AdminDashboardHtmlBlock
      operationId: AdminDashboardHtmlBlock_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DashboardHtmlBlockDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminDashboardHtmlBlock
      operationId: AdminDashboardHtmlBlock_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DashboardHtmlBlockDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DashboardHtmlBlockDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminDashboardHtmlBlock
      operationId: AdminDashboardHtmlBlock_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/disciplines":
    get:
      tags:
      - AdminDisciplines
      operationId: AdminDisciplines_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfDisciplineDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminDisciplines
      operationId: AdminDisciplines_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DisciplineDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DisciplineDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/disciplines/{id}":
    get:
      tags:
      - AdminDisciplines
      operationId: AdminDisciplines_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DisciplineDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminDisciplines
      operationId: AdminDisciplines_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DisciplineDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DisciplineDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminDisciplines
      operationId: AdminDisciplines_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/export-definitions":
    post:
      tags:
      - AdminExportDefinitions
      operationId: AdminExportDefinitions_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ExportDefinitionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExportDefinitionDto"
      security:
      - JWT: []
    get:
      tags:
      - AdminExportDefinitions
      operationId: AdminExportDefinitions_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfExportDefinitionDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/export-definitions/{id}":
    put:
      tags:
      - AdminExportDefinitions
      operationId: AdminExportDefinitions_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ExportDefinitionDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExportDefinitionDto"
      security:
      - JWT: []
    get:
      tags:
      - AdminExportDefinitions
      operationId: AdminExportDefinitions_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExportDefinitionDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminExportDefinitions
      operationId: AdminExportDefinitions_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/facility-types":
    get:
      tags:
      - AdminFacilityTypes
      operationId: AdminFacilityTypes_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfFacilityTypeDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminFacilityTypes
      operationId: AdminFacilityTypes_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FacilityTypeDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FacilityTypeDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/facility-types/{id}":
    get:
      tags:
      - AdminFacilityTypes
      operationId: AdminFacilityTypes_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FacilityTypeDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminFacilityTypes
      operationId: AdminFacilityTypes_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FacilityTypeDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FacilityTypeDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminFacilityTypes
      operationId: AdminFacilityTypes_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/federations":
    get:
      tags:
      - AdminFederations
      operationId: AdminFederations_GetAll
      parameters:
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: IsActive
        in: query
        schema:
          type: boolean
        x-position: 2
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 3
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfFederationListDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminFederations
      operationId: AdminFederations_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateFederationDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FederationListDto"
      security:
      - JWT: []
  "/api/v1/admin/federations/{id}":
    get:
      tags:
      - AdminFederations
      operationId: AdminFederations_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FederationListDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminFederations
      operationId: AdminFederations_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: guid
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateFederationDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FederationListDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/field-materials":
    get:
      tags:
      - AdminFieldMaterials
      operationId: AdminFieldMaterials_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfFieldMaterialDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminFieldMaterials
      operationId: AdminFieldMaterials_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FieldMaterialDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldMaterialDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/field-materials/{id}":
    get:
      tags:
      - AdminFieldMaterials
      operationId: AdminFieldMaterials_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldMaterialDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminFieldMaterials
      operationId: AdminFieldMaterials_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FieldMaterialDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldMaterialDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminFieldMaterials
      operationId: AdminFieldMaterials_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/field-types":
    get:
      tags:
      - AdminFieldTypes
      operationId: AdminFieldTypes_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfFieldTypeDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminFieldTypes
      operationId: AdminFieldTypes_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FieldTypeDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldTypeDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/field-types/{id}":
    get:
      tags:
      - AdminFieldTypes
      operationId: AdminFieldTypes_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldTypeDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminFieldTypes
      operationId: AdminFieldTypes_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FieldTypeDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldTypeDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminFieldTypes
      operationId: AdminFieldTypes_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/import-definitions":
    post:
      tags:
      - AdminImportDefinitions
      operationId: AdminImportDefinitions_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ImportDefinitionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ImportDefinitionDto"
      security:
      - JWT: []
    get:
      tags:
      - AdminImportDefinitions
      operationId: AdminImportDefinitions_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfImportDefinitionDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/import-definitions/{id}":
    put:
      tags:
      - AdminImportDefinitions
      operationId: AdminImportDefinitions_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ImportDefinitionDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ImportDefinitionDto"
      security:
      - JWT: []
    get:
      tags:
      - AdminImportDefinitions
      operationId: AdminImportDefinitions_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ImportDefinitionDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminImportDefinitions
      operationId: AdminImportDefinitions_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/administration/clear-redis-cache":
    post:
      tags:
      - Administration
      operationId: Administration_ClearRedisCache
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/administration/refresh-spa-locales":
    post:
      tags:
      - Administration
      operationId: Administration_RefreshSpaLocales
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/administration/refresh-backend-locales":
    post:
      tags:
      - Administration
      operationId: Administration_RefreshBackendLocales
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/knowledge-base-articles/position/{id}":
    put:
      tags:
      - AdminKnowledgeBaseArticles
      operationId: AdminKnowledgeBaseArticles_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpdateItemPositionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/knowledge-base-articles/groups":
    get:
      tags:
      - AdminKnowledgeBaseArticles
      operationId: AdminKnowledgeBaseArticles_GetAllUniqueArticleGroups
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - JWT: []
  "/api/v1/admin/knowledge-base-articles":
    get:
      tags:
      - AdminKnowledgeBaseArticles
      operationId: AdminKnowledgeBaseArticles_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfKnowledgeBaseArticleDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminKnowledgeBaseArticles
      operationId: AdminKnowledgeBaseArticles_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/KnowledgeBaseArticleDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/KnowledgeBaseArticleDto"
      security:
      - JWT: []
  "/api/v1/admin/knowledge-base-articles/{id}":
    get:
      tags:
      - AdminKnowledgeBaseArticles
      operationId: AdminKnowledgeBaseArticles_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/KnowledgeBaseArticleDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminKnowledgeBaseArticles
      operationId: AdminKnowledgeBaseArticles_Put2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/KnowledgeBaseArticleDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/KnowledgeBaseArticleDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminKnowledgeBaseArticles
      operationId: AdminKnowledgeBaseArticles_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/knowledge-base-categories":
    get:
      tags:
      - AdminKnowledgeBaseCategories
      operationId: AdminKnowledgeBaseCategories_GetAll
      parameters:
      - name: SystemRoleId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfKnowledgeBaseCategoryDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminKnowledgeBaseCategories
      operationId: AdminKnowledgeBaseCategories_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/KnowledgeBaseCategoryDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/KnowledgeBaseCategoryDto"
      security:
      - JWT: []
  "/api/v1/admin/knowledge-base-categories/{id}":
    get:
      tags:
      - AdminKnowledgeBaseCategories
      operationId: AdminKnowledgeBaseCategories_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/KnowledgeBaseCategoryDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminKnowledgeBaseCategories
      operationId: AdminKnowledgeBaseCategories_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/KnowledgeBaseCategoryDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/KnowledgeBaseCategoryDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminKnowledgeBaseCategories
      operationId: AdminKnowledgeBaseCategories_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/location-types":
    get:
      tags:
      - AdminLocationTypes
      operationId: AdminLocationTypes_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfLocationTypeDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminLocationTypes
      operationId: AdminLocationTypes_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LocationTypeDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LocationTypeDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/location-types/{id}":
    get:
      tags:
      - AdminLocationTypes
      operationId: AdminLocationTypes_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LocationTypeDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminLocationTypes
      operationId: AdminLocationTypes_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LocationTypeDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LocationTypeDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminLocationTypes
      operationId: AdminLocationTypes_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/lookups/federations":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetFederations
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      security:
      - JWT: []
  "/api/v1/admin/lookups/packages":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetPackages
      parameters:
      - name: containerId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/admin/lookups/disciplines":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetDisciplines
      parameters:
      - name: containerId
        in: query
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/admin/lookups/modules":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetModules
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/admin/lookups/languages":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetLanguages
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/admin/lookups/time-zones":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetTimeZones
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/admin/lookups/external-services":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetExternalServices
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ExternalApplicationModuleDto"
      security:
      - JWT: []
  "/api/v1/admin/lookups/system-settings":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetSystemSettings
      parameters:
      - name: level
        in: query
        schema:
          nullable: true
          "$ref": "#/components/schemas/SystemSettingLevel"
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SystemSettingLookupDto"
      security:
      - JWT: []
  "/api/v1/admin/lookups/metabase-reports":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetMetabaseReports
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MetabaseReportDto"
      security:
      - JWT: []
  "/api/v1/admin/lookups/metabase-dashboards":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetMetabaseDashboards
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/admin/lookups/fields-for-export-csv":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetFieldsForExportCsv
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  "$ref": "#/components/schemas/ExportPersonCsvFieldProperties"
      security:
      - JWT: []
  "/api/v1/admin/lookups/fields-for-import-csv":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetFieldsForImportCsv
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  "$ref": "#/components/schemas/ImportPersonCsvFieldProperties"
      security:
      - JWT: []
  "/api/v1/admin/lookups/system-roles":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetAllSystemRoles
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SystemRoleDto"
      security:
      - JWT: []
  "/api/v1/admin/lookups/system-roles/container/{containerId}":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetSystemRolesPerContainer
      parameters:
      - name: containerId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SystemRoleDto"
      security:
      - JWT: []
  "/api/v1/admin/lookups/permissions/container/{containerId}":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetPermissionsForContainer
      parameters:
      - name: containerId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PermissionDto"
      security:
      - JWT: []
  "/api/v1/admin/lookups/themes":
    get:
      tags:
      - AdminLookup
      operationId: AdminLookup_GetThemes
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NamedEntityDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/match-categories":
    get:
      tags:
      - AdminMatchCategories
      operationId: AdminMatchCategories_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfMatchCategoryDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminMatchCategories
      operationId: AdminMatchCategories_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MatchCategoryDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MatchCategoryDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/match-categories/{id}":
    get:
      tags:
      - AdminMatchCategories
      operationId: AdminMatchCategories_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MatchCategoryDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminMatchCategories
      operationId: AdminMatchCategories_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MatchCategoryDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MatchCategoryDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminMatchCategories
      operationId: AdminMatchCategories_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/metabase-reports":
    get:
      tags:
      - AdminMetabaseReports
      operationId: AdminMetabaseReports_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfMetabaseReportDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminMetabaseReports
      operationId: AdminMetabaseReports_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MetabaseReportDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MetabaseReportDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/metabase-reports/{id}":
    get:
      tags:
      - AdminMetabaseReports
      operationId: AdminMetabaseReports_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MetabaseReportDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminMetabaseReports
      operationId: AdminMetabaseReports_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MetabaseReportDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MetabaseReportDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminMetabaseReports
      operationId: AdminMetabaseReports_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/organisation-types":
    get:
      tags:
      - AdminOrganisationTypes
      operationId: AdminOrganisationTypes_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfOrganisationTypeDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminOrganisationTypes
      operationId: AdminOrganisationTypes_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationTypeDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationTypeDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/organisation-types/{id}":
    get:
      tags:
      - AdminOrganisationTypes
      operationId: AdminOrganisationTypes_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationTypeDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminOrganisationTypes
      operationId: AdminOrganisationTypes_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrganisationTypeDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrganisationTypeDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminOrganisationTypes
      operationId: AdminOrganisationTypes_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/packages/{id}/system-roles":
    put:
      tags:
      - AdminPackages
      operationId: AdminPackages_UpdatePackageSystemRoles
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: roleIds
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/packages":
    get:
      tags:
      - AdminPackages
      operationId: AdminPackages_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPackageDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminPackages
      operationId: AdminPackages_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PackageDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PackageDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/packages/{id}":
    get:
      tags:
      - AdminPackages
      operationId: AdminPackages_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PackageDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminPackages
      operationId: AdminPackages_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PackageDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PackageDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminPackages
      operationId: AdminPackages_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/person-relation-types":
    get:
      tags:
      - AdminPersonRelationTypes
      operationId: AdminPersonRelationTypes_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfPersonRelationTypeDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminPersonRelationTypes
      operationId: AdminPersonRelationTypes_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonRelationTypeDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonRelationTypeDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/person-relation-types/{id}":
    get:
      tags:
      - AdminPersonRelationTypes
      operationId: AdminPersonRelationTypes_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonRelationTypeDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminPersonRelationTypes
      operationId: AdminPersonRelationTypes_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PersonRelationTypeDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PersonRelationTypeDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminPersonRelationTypes
      operationId: AdminPersonRelationTypes_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/regions":
    get:
      tags:
      - AdminRegions
      operationId: AdminRegions_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfRegionDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminRegions
      operationId: AdminRegions_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegionDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RegionDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/regions/{id}":
    get:
      tags:
      - AdminRegions
      operationId: AdminRegions_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RegionDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminRegions
      operationId: AdminRegions_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegionDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RegionDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminRegions
      operationId: AdminRegions_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/system-notifications":
    get:
      tags:
      - AdminSystemNotifications
      operationId: AdminSystemNotifications_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfSystemNotificationDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminSystemNotifications
      operationId: AdminSystemNotifications_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SystemNotificationDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SystemNotificationDto"
      security:
      - JWT: []
  "/api/v1/admin/system-notifications/{id}":
    get:
      tags:
      - AdminSystemNotifications
      operationId: AdminSystemNotifications_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SystemNotificationDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminSystemNotifications
      operationId: AdminSystemNotifications_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SystemNotificationDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SystemNotificationDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminSystemNotifications
      operationId: AdminSystemNotifications_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/system-roles":
    get:
      tags:
      - AdminSystemRoles
      operationId: AdminSystemRoles_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: SystemRoleIds
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        x-position: 2
      - name: OrganisationId
        in: query
        schema:
          type: string
          format: guid
          nullable: true
        x-position: 3
      - name: AspNetRoleId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 7
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfSystemRoleDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminSystemRoles
      operationId: AdminSystemRoles_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SystemRoleUpdateDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SystemRoleDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/system-roles/{id}":
    get:
      tags:
      - AdminSystemRoles
      operationId: AdminSystemRoles_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SystemRoleDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminSystemRoles
      operationId: AdminSystemRoles_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SystemRoleUpdateDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SystemRoleDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminSystemRoles
      operationId: AdminSystemRoles_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/themes/{id}/image":
    put:
      tags:
      - AdminTheme
      operationId: AdminTheme_UpdateThemeImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                File:
                  type: string
                  format: binary
                  nullable: true
                ThemeId:
                  type: integer
                  format: int32
                AttachmentType:
                  "$ref": "#/components/schemas/AttachmentType"
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ThemeDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminTheme
      operationId: AdminTheme_CreateThemeImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                File:
                  type: string
                  format: binary
                  nullable: true
                ThemeId:
                  type: integer
                  format: int32
                AttachmentType:
                  "$ref": "#/components/schemas/AttachmentType"
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ThemeDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminTheme
      operationId: AdminTheme_DeleteThemeImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ThemeImageDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ThemeDto"
      security:
      - JWT: []
  "/api/v1/admin/themes":
    get:
      tags:
      - AdminTheme
      operationId: AdminTheme_GetAll
      parameters:
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfThemeDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminTheme
      operationId: AdminTheme_Post
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ThemeDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ThemeDto"
      security:
      - JWT: []
  "/api/v1/admin/themes/{id}":
    get:
      tags:
      - AdminTheme
      operationId: AdminTheme_Get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ThemeDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminTheme
      operationId: AdminTheme_Put
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ThemeDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ThemeDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminTheme
      operationId: AdminTheme_Delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/transponder-types":
    get:
      tags:
      - AdminTransponderTypes
      operationId: AdminTransponderTypes_GetAll
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: Sorting
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      - name: SkipCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 3
      - name: MaxResultCount
        in: query
        schema:
          type: integer
          format: int32
        x-position: 4
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PagedResultDtoOfTransponderTypeDto"
      security:
      - JWT: []
    post:
      tags:
      - AdminTransponderTypes
      operationId: AdminTransponderTypes_Post
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransponderTypeDto"
        required: true
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransponderTypeDto"
      security:
      - JWT: []
  "/api/v1/admin/containers/{resourceId}/transponder-types/{id}":
    get:
      tags:
      - AdminTransponderTypes
      operationId: AdminTransponderTypes_Get
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransponderTypeDto"
      security:
      - JWT: []
    put:
      tags:
      - AdminTransponderTypes
      operationId: AdminTransponderTypes_Put
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      requestBody:
        x-name: model
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TransponderTypeDto"
        required: true
        x-position: 3
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TransponderTypeDto"
      security:
      - JWT: []
    delete:
      tags:
      - AdminTransponderTypes
      operationId: AdminTransponderTypes_Delete
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 2
      responses:
        '200':
          description: ''
      security:
      - JWT: []
  "/api/v1/account/change-password":
    put:
      tags:
      - Account
      operationId: Account_ChangePassword
      requestBody:
        x-name: input
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ChangePasswordDto"
        required: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/account/reset-two-factor-auth":
    post:
      tags:
      - Account
      operationId: Account_ResetTwoFactorAuth
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/account/set-language":
    put:
      tags:
      - Account
      operationId: Account_SetLanguage
      parameters:
      - name: languageCode
        in: query
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      security:
      - JWT: []
  "/api/v1/account/impersonate/{id}":
    put:
      tags:
      - Account
      operationId: Account_ImpersonateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          nullable: true
        x-position: 1
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
  "/api/v1/account/first-name":
    get:
      tags:
      - Account
      operationId: Account_GetUserFirstName
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
      security:
      - JWT: []
components:
  schemas:
    PagedResultDtoOfExternalOrganisationDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfExternalOrganisationDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfExternalOrganisationDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ExternalOrganisationDto"
    ExternalOrganisationDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          parentOrganisationClub:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
          parentOrganisationFederation:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
          hasOmnibusAgreement:
            type: boolean
          package:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDto"
    NamedEntityDtoOfGuid:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        name:
          type: string
          nullable: true
    NamedEntityDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
    AuthTokenResponse:
      type: object
      additionalProperties: false
      properties:
        success:
          type: boolean
        message:
          type: string
          nullable: true
        access_token:
          type: string
          nullable: true
        refresh_token:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        role:
          type: string
          nullable: true
        systemRoleCodes:
          type: array
          nullable: true
          items:
            type: string
        realName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        memberId:
          type: string
          nullable: true
        federationMembershipIdentifier:
          type: string
          nullable: true
        clubId:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        federationId:
          type: string
          nullable: true
        organisationId:
          type: string
          nullable: true
        organisationType:
          type: string
          nullable: true
        organisationName:
          type: string
          nullable: true
    JwtAuthTokenLogin:
      type: object
      additionalProperties: false
      required:
      - username
      - password
      properties:
        username:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
        clubId:
          type: string
          format: guid
          nullable: true
        federationId:
          type: string
          format: guid
          nullable: true
        organisationId:
          type: string
          format: guid
          nullable: true
        externalOrganisationId:
          type: string
          format: guid
          nullable: true
    RefreshTokenRequest:
      type: object
      additionalProperties: false
      properties:
        token:
          type: string
          nullable: true
    SBNPersonDto:
      type: object
      additionalProperties: false
      properties:
        guid:
          type: string
          format: guid
        federation_membership_identifier:
          type: string
          nullable: true
        name_infix:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        birthdate:
          type: string
          format: date-time
        gender:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        nationality:
          type: string
          nullable: true
        IBAN:
          type: string
          nullable: true
        BIC:
          type: string
          nullable: true
        address:
          nullable: true
          "$ref": "#/components/schemas/SBNAddressDto"
        player_licenses:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SBNPlayerLicenseDto"
        memberships:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SBNMembershipDto"
        ice_information:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SBNParentInfoDto"
        shirt_size:
          type: string
          nullable: true
        censored:
          type: string
          nullable: true
    SBNAddressDto:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberExtension:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
    SBNPlayerLicenseDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        startdate:
          type: string
          format: date-time
        enddate:
          type: string
          format: date-time
          nullable: true
        cancellationDate:
          type: string
          format: date-time
          nullable: true
    SBNMembershipDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        is_match_license:
          type: boolean
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
          nullable: true
        cancellation_date:
          type: string
          format: date-time
          nullable: true
        cancellation_received_date:
          type: string
          format: date-time
          nullable: true
        organisation_name:
          type: string
          nullable: true
        organisation_code:
          type: string
          nullable: true
        organisation_short_name:
          type: string
          nullable: true
    SBNParentInfoDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        relation:
          type: string
          nullable: true
        phone_number:
          type: string
          nullable: true
    PagedClubsPUB:
      type: object
      additionalProperties: false
      properties:
        page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo"
        clubs:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedClubPUB"
    PageInfo:
      type: object
      additionalProperties: false
      properties:
        total_pages:
          type: integer
          format: int32
        total_entries:
          type: integer
          format: int32
        page_size:
          type: integer
          format: int32
        page_number:
          type: integer
          format: int32
    WrappedClubPUB:
      type: object
      additionalProperties: false
      properties:
        club:
          nullable: true
          "$ref": "#/components/schemas/ClubPUB"
    ClubPUB:
      allOf:
      - "$ref": "#/components/schemas/Club"
      - type: object
        additionalProperties: false
        properties:
          ClubType:
            type: string
            nullable: true
          ClubCode:
            type: string
            nullable: true
          AddressLine1:
            type: string
            nullable: true
          HouseNumber:
            type: string
            nullable: true
          HouseNumberAddition:
            type: string
            nullable: true
          ZipCode:
            type: string
            nullable: true
          Country:
            type: string
            nullable: true
          Latitude:
            type: number
            format: double
            nullable: true
          Longitude:
            type: number
            format: double
            nullable: true
          RegionName:
            type: string
            nullable: true
          WebsiteAddress:
            type: string
            nullable: true
          DateOfCreation:
            type: string
            format: date-time
          ClubOutfit:
            type: string
            nullable: true
    Club:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        logo_url:
          type: string
          nullable: true
        id:
          type: string
          format: guid
        city:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
    WrappedClubInfo:
      type: object
      additionalProperties: false
      properties:
        club:
          nullable: true
          "$ref": "#/components/schemas/ClubInfo"
    ClubInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        trial_expired:
          type: boolean
        active:
          type: boolean
        has_premium_package:
          type: boolean
        show_members_list_in_app:
          type: boolean
        federation_club_code:
          type: string
          nullable: true
        federation_name:
          type: string
          nullable: true
        time_zone:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
        allow_members_to_edit_personal_details:
          type: boolean
        federation_news:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedNews"
        federation_events:
          type: array
          nullable: true
          items: {}
        club_news:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedNews"
        club_events:
          type: array
          nullable: true
          items: {}
        assets:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedAssets"
        currency:
          type: string
          nullable: true
        inserted_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        splashscreen:
          nullable: true
          "$ref": "#/components/schemas/Asset"
        locations:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedLocation"
    WrappedNews:
      type: object
      additionalProperties: false
      properties:
        news_item:
          nullable: true
          "$ref": "#/components/schemas/News"
    News:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        short_description:
          type: string
          nullable: true
        tags:
          type: array
          nullable: true
          items:
            type: string
        language:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        assets:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedAssets"
        published_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
        comments_count:
          type: integer
          format: int32
    WrappedAssets:
      type: object
      additionalProperties: false
      properties:
        asset:
          nullable: true
          "$ref": "#/components/schemas/Asset"
    Asset:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        url:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        thumbnail_url:
          type: string
          nullable: true
        caption:
          type: string
          nullable: true
        size:
          type: integer
          format: int32
          nullable: true
        mimetype:
          type: string
          nullable: true
        approved:
          type: boolean
        sortorder:
          type: integer
          format: int32
          nullable: true
        inserted_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
    WrappedLocation:
      type: object
      additionalProperties: false
      properties:
        location:
          nullable: true
          "$ref": "#/components/schemas/Location"
    Location:
      allOf:
      - "$ref": "#/components/schemas/LocationLite"
      - type: object
        additionalProperties: false
        properties:
          subname:
            type: string
            nullable: true
          contact_info:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/WrappedContactInfo"
          assets:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/WrappedAssets"
          address:
            nullable: true
            "$ref": "#/components/schemas/Address"
    WrappedContactInfo:
      type: object
      additionalProperties: false
      properties:
        contact_info:
          nullable: true
          "$ref": "#/components/schemas/ContactInfo"
    ContactInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        type:
          "$ref": "#/components/schemas/ContactInfoType"
        value:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        sortorder:
          type: integer
        secret:
          type: boolean
        verified:
          type: boolean
        emergency:
          type: boolean
        country:
          type: string
          nullable: true
        country_code:
          type: string
          nullable: true
        updated_at:
          type: string
          format: date-time
    ContactInfoType:
      type: string
      description: ''
      x-enumNames:
      - Phone
      - Email
      - Link
      enum:
      - Phone
      - Email
      - Link
    Address:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        address3:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        suffix:
          type: string
          nullable: true
        house_number:
          type: string
          nullable: true
        house_number_extension:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        country_code:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        location_name:
          type: string
          nullable: true
    LocationLite:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
    WrappedClubDashboard:
      type: object
      additionalProperties: false
      properties:
        club:
          nullable: true
          "$ref": "#/components/schemas/ClubDashboard"
    ClubDashboard:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        federation_name:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
        federation_news:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedNews"
        club_news:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedNews"
        locations:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedLocation"
    PagedSponsors:
      type: object
      additionalProperties: false
      properties:
        page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo"
        sponsors:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedSponsor"
    WrappedSponsor:
      type: object
      additionalProperties: false
      properties:
        sponsor:
          nullable: true
          "$ref": "#/components/schemas/Sponsor"
    Sponsor:
      type: object
      additionalProperties: false
      properties:
        url:
          type: string
          nullable: true
        inserted_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        sortorder:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        contact_person:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        assets:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedAssets"
        show_in_app:
          type: boolean
    OrganisationSignUpInput:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        coc_number:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        website:
          type: string
          nullable: true
        contact_person_name:
          type: string
          nullable: true
        contact_person_email:
          type: string
          nullable: true
        address:
          nullable: true
          "$ref": "#/components/schemas/Address2"
        logo:
          nullable: true
          "$ref": "#/components/schemas/Base64FileDto"
    Address2:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        house_number:
          type: string
          nullable: true
        house_number_extension:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country_code:
          type: string
          nullable: true
    Base64FileDto:
      type: object
      additionalProperties: false
      properties:
        fileName:
          type: string
          nullable: true
        extension:
          type: string
          nullable: true
        base64:
          type: string
          nullable: true
        contentType:
          type: string
          nullable: true
    WrappedMessagesList:
      type: object
      additionalProperties: false
      properties:
        messages:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedMessage"
    WrappedMessage:
      type: object
      additionalProperties: false
      properties:
        message:
          nullable: true
          "$ref": "#/components/schemas/Message"
    Message:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        start_at:
          type: string
          format: date-time
        updated_at:
          type: integer
          format: int64
        assets:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedAssets"
        is_read:
          type: boolean
    MessagePUB:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        sendPushNotification:
          type: boolean
        sendAsEmail:
          type: boolean
        personGuids:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        teamGuids:
          type: array
          nullable: true
          items:
            type: string
            format: guid
    MyEnvironmentConfigOutput:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          Name:
            type: string
            nullable: true
          PlanCode:
            type: string
            nullable: true
          Locale:
            "$ref": "#/components/schemas/Locale"
          ExtraConfig:
            type: string
            nullable: true
          CanSignUpForPlan:
            type: boolean
          SignUpFields:
            type: string
            nullable: true
          ConfirmationEmailTemplate:
            type: string
            nullable: true
          FederationId:
            type: string
            format: guid
            nullable: true
          OrganisationId:
            type: string
            format: guid
          SignupForOrganisationId:
            type: string
            format: guid
            nullable: true
          AutomaticallyAcceptNewMemberships:
            type: boolean
          PayDirectlyForNewMembership:
            type: boolean
    Locale:
      type: string
      description: ''
      x-enumNames:
      - NL
      - EN
      enum:
      - NL
      - EN
    EntityDtoOfGuid:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
    PagedNews:
      type: object
      additionalProperties: false
      properties:
        page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo"
        news:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedNews"
    WrappedNewsDetails:
      type: object
      additionalProperties: false
      properties:
        news_item:
          nullable: true
          "$ref": "#/components/schemas/News"
    PagedPersonTags:
      type: object
      additionalProperties: false
      properties:
        Page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo"
        person_tags:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedPersonTag"
    WrappedPersonTag:
      type: object
      additionalProperties: false
      properties:
        person_tag:
          nullable: true
          "$ref": "#/components/schemas/PersonTag"
    PersonTag:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        start:
          type: string
          format: date-time
        cancellation:
          type: string
          format: date-time
          nullable: true
        external_id:
          type: string
          nullable: true
        external_type:
          type: string
          nullable: true
        tag:
          nullable: true
          "$ref": "#/components/schemas/Tag"
    Tag:
      allOf:
      - "$ref": "#/components/schemas/TagBase"
      - type: object
        additionalProperties: false
        properties:
          id:
            type: integer
            format: int32
    TagBase:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        group:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        type:
          "$ref": "#/components/schemas/TagType"
        is_visible_for_club:
          type: boolean
        is_assignable_by_club:
          type: boolean
        is_historic:
          type: boolean
        is_visible_for_persons:
          type: boolean
        hide_from_app:
          type: boolean
    TagType:
      type: integer
      description: ''
      x-enumNames:
      - Label
      - Qualification
      - Action
      - MarketingInterest
      - Newsletter
      - LicenceTag
      enum:
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
    PersonTagAdd:
      allOf:
      - "$ref": "#/components/schemas/PersonTagBase"
      - type: object
        additionalProperties: false
        properties:
          tag_id:
            type: integer
            format: int32
    PersonTagBase:
      type: object
      additionalProperties: false
      properties:
        start:
          type: string
          format: date-time
        cancellation:
          type: string
          format: date-time
          nullable: true
        external_id:
          type: string
          nullable: true
        external_type:
          type: string
          nullable: true
    PersonTagUpdate:
      allOf:
      - "$ref": "#/components/schemas/PersonTagBase"
      - type: object
        additionalProperties: false
    WrappedPushRegistration:
      type: object
      additionalProperties: false
      properties:
        pushregistration:
          nullable: true
          "$ref": "#/components/schemas/PushRegistration"
    PushRegistration:
      type: object
      additionalProperties: false
      properties:
        registration_token:
          type: string
          nullable: true
        device_type:
          "$ref": "#/components/schemas/DeviceType"
        topics:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
    DeviceType:
      type: integer
      description: ''
      x-enumNames:
      - iOS
      - Android
      - Web
      enum:
      - 1
      - 2
      - 3
    PagedResultDtoOfPubCalendarEventOccurrenceDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPubCalendarEventOccurrenceDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPubCalendarEventOccurrenceDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubCalendarEventOccurrenceDto"
    PubCalendarEventOccurrenceDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        start:
          type: string
          format: date-time
        startDate:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        hideTime:
          type: boolean
        attendees:
          type: integer
          format: int32
        attending:
          "$ref": "#/components/schemas/EventAttendanceType"
        maxAmountOfAttendances:
          type: integer
          format: int32
        countGoing:
          type: integer
          format: int32
          nullable: true
        price:
          type: number
          format: decimal
          nullable: true
        calendarItemType:
          type: string
          nullable: true
        locations:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
        customAddress:
          nullable: true
          "$ref": "#/components/schemas/AddressInfoPubDto"
        tags:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagBasicDto"
        assets:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubAttachmentDto"
        coverImageUrl:
          type: string
          nullable: true
    EventAttendanceType:
      type: integer
      description: ''
      x-enumNames:
      - Unspecified
      - Going
      - Interested
      - NotGoing
      - Incomplete
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
    AddressInfoPubDto:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        address3:
          type: string
          nullable: true
        suffix:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberExtension:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        countryName:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        city:
          type: string
          nullable: true
    TagBasicDto:
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        group:
          type: string
          nullable: true
        groupPosition:
          type: integer
          format: int32
          nullable: true
    PubAttachmentDto:
      type: object
      additionalProperties: false
      properties:
        url:
          type: string
          nullable: true
        caption:
          type: string
          nullable: true
        fileType:
          "$ref": "#/components/schemas/FileType"
        size:
          type: integer
          format: int64
          nullable: true
        documentTypeId:
          type: integer
          format: int32
          nullable: true
    FileType:
      type: string
      description: ''
      x-enumNames:
      - Image
      - Video
      - Pdf
      - Excel
      - Word
      enum:
      - Image
      - Video
      - Pdf
      - Excel
      - Word
    PubCalendarEventDetailsBaseDto:
      type: object
      discriminator:
        propertyName: discriminator
        mapping:
          PubDutyDetailsDto: "#/components/schemas/PubDutyDetailsDto"
          PubEventDetailsDto: "#/components/schemas/PubEventDetailsDto"
          PubMatchDetailsDto: "#/components/schemas/PubMatchDetailsDto"
          PubTrainingDetailsDto: "#/components/schemas/PubTrainingDetailsDto"
      x-abstract: true
      additionalProperties: false
      required:
      - discriminator
      properties:
        guid:
          type: string
          format: guid
        calendarItemType:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
        endAt:
          type: string
          format: date-time
        hideTime:
          type: boolean
        showAttendees:
          type: boolean
        attending:
          type: integer
          format: int32
        wasCancelled:
          type: boolean
        timesOutAt:
          type: string
          format: date-time
          nullable: true
        countGoing:
          type: integer
          format: int32
          nullable: true
        countIncomplete:
          type: integer
          format: int32
          nullable: true
        countInterested:
          type: integer
          format: int32
          nullable: true
        countNotGoing:
          type: integer
          format: int32
          nullable: true
        countInvited:
          type: integer
          format: int32
          nullable: true
        locations:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubLocationDto"
        signUpEnabled:
          type: boolean
        limitRegistrationPeriod:
          type: boolean
        registrationStartDate:
          type: string
          format: date-time
          nullable: true
        registrationEndDate:
          type: string
          format: date-time
          nullable: true
        limitAmountOfAttendances:
          type: boolean
        maxAmountOfAttendances:
          type: integer
          format: int32
          nullable: true
        isFree:
          type: boolean
        allowPaymentWithCredits:
          type: boolean
        allowUsingVouchers:
          type: boolean
        price:
          type: number
          format: decimal
          nullable: true
        invoiceTypeCode:
          type: string
          nullable: true
        participantCannotEditGoingStatus:
          type: boolean
          nullable: true
        enableCustomQuestions:
          type: boolean
        customQuestions:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubCustomQuestionBaseDto"
        tags:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagBasicDto"
        paymentStatus:
          nullable: true
          "$ref": "#/components/schemas/InvoicePaymentStatus"
        paymentLink:
          type: string
          nullable: true
        discriminator:
          type: string
    PubLocationDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          type:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          updatedAt:
            type: string
            format: date-time
          contactInfos:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PubContactInfoDto"
          address:
            nullable: true
            "$ref": "#/components/schemas/AddressInfoPubDto"
          sublocations:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PubLocationDto"
          assets:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PubAttachmentDto"
    PubContactInfoDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          type:
            "$ref": "#/components/schemas/ContactInfoType"
          description:
            type: string
            nullable: true
          sortorder:
            type: integer
          secret:
            type: boolean
          verified:
            type: boolean
          emergency:
            type: boolean
          country:
            type: string
            nullable: true
          countryCode:
            type: string
            nullable: true
          updatedAt:
            type: string
            format: date-time
    PubCustomQuestionBaseDto:
      type: object
      additionalProperties: false
      properties:
        calendarEventId:
          type: integer
          format: int32
        calendarEventQuestionId:
          type: integer
          format: int32
        questionType:
          "$ref": "#/components/schemas/CalendarEventQuestionType"
        questionOptions:
          type: array
          nullable: true
          items:
            type: string
        name:
          type: string
          nullable: true
        isRequired:
          type: boolean
        order:
          type: integer
          format: int32
        personGuid:
          type: string
          format: guid
        occurrenceGuid:
          type: string
          format: guid
        calendarEventGuid:
          type: string
          format: guid
        answer:
          nullable: true
          "$ref": "#/components/schemas/PubCalendarEventAttendanceAnswerDto"
    CalendarEventQuestionType:
      type: integer
      description: ''
      x-enumNames:
      - Bool
      - Text
      - Multiselect
      enum:
      - 0
      - 1
      - 2
    PubCalendarEventAttendanceAnswerDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        value:
          type: string
          nullable: true
        calendarEventQuestionId:
          type: integer
          format: int32
        calendarEventAttendanceId:
          type: integer
          format: int32
    InvoicePaymentStatus:
      type: string
      description: ''
      x-enumNames:
      - DoesNotApply
      - NotStarted
      - NotPaid
      - Paid
      enum:
      - DoesNotApply
      - NotStarted
      - NotPaid
      - Paid
    PubDutyDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/PubCalendarEventDetailsBaseDto"
      - type: object
        additionalProperties: false
        properties:
          notes:
            type: string
            nullable: true
          dutyRoles:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PubDutyRoleDto"
    PubDutyRoleDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          dutyRolePoints:
            type: integer
            format: int32
          extraPoints:
            type: integer
            format: int32
          numberOfPersonsNeededForRole:
            type: integer
            format: int32
          numberOfPersonsAlreadyAssigned:
            type: integer
            format: int32
          tagIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    PubEventDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/PubCalendarEventDetailsBaseDto"
      - type: object
        additionalProperties: false
        properties:
          assets:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PubAttachmentDto"
          organisers:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PersonPubDto"
          coverImageUrl:
            type: string
            nullable: true
    PersonPubDto:
      allOf:
      - "$ref": "#/components/schemas/PersonBasePubDto"
      - type: object
        additionalProperties: false
        properties:
          clubName:
            type: string
            nullable: true
          teams:
            type: array
            nullable: true
            items:
              type: string
    PersonBasePubDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          id:
            type: string
            format: guid
          namePrefix:
            type: string
            nullable: true
          firstName:
            type: string
            nullable: true
          nameInfix:
            type: string
            nullable: true
          lastName:
            type: string
            nullable: true
          initials:
            type: string
            nullable: true
          gender:
            nullable: true
            "$ref": "#/components/schemas/Gender"
          birthDate:
            type: string
            format: date-time
            nullable: true
          email:
            type: string
            nullable: true
          phone:
            type: string
            nullable: true
          mobilePhone:
            type: string
            nullable: true
          assetUrl:
            type: string
            nullable: true
          fullName:
            type: string
            nullable: true
          federationMembershipIdentifier:
            type: string
            nullable: true
          clubMembershipIdentifier:
            type: string
            nullable: true
          insertedAt:
            type: string
            format: date-time
          isEmailSecret:
            type: boolean
          isPhoneSecret:
            type: boolean
          isMobileSecret:
            type: boolean
    Gender:
      type: integer
      description: ''
      x-enumNames:
      - Male
      - Female
      - Unspecified
      enum:
      - 0
      - 1
      - 2
    EntityDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfInteger"
      - type: object
        additionalProperties: false
    EntityDtoOfInteger:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
    PubMatchDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/PubCalendarEventDetailsBaseDto"
      - type: object
        additionalProperties: false
        properties:
          homeClubLogo:
            type: string
            nullable: true
          homeTeamName:
            type: string
            nullable: true
          awayClubLogo:
            type: string
            nullable: true
          awayTeamName:
            type: string
            nullable: true
    PubTrainingDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/PubCalendarEventDetailsBaseDto"
      - type: object
        additionalProperties: false
        properties:
          trainers:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PersonPubDto"
          assets:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PubAttachmentDto"
    PubPersonAttendanceInfoDto:
      allOf:
      - "$ref": "#/components/schemas/PersonPubDto"
      - type: object
        additionalProperties: false
        properties:
          attending:
            "$ref": "#/components/schemas/EventAttendanceType"
          reason:
            type: string
            nullable: true
          dutyRoleId:
            type: integer
            format: int32
            nullable: true
    PagedResultDtoOfPubPersonAttendanceInfoDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPubPersonAttendanceInfoDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPubPersonAttendanceInfoDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubPersonAttendanceInfoDto"
    PubAttendeesCountPerStatusDto:
      type: object
      additionalProperties: false
      properties:
        attendanceType:
          "$ref": "#/components/schemas/EventAttendanceType"
        count:
          type: integer
          format: int32
    PubSetAttendanceDto:
      type: object
      additionalProperties: false
      properties:
        reason:
          type: string
          nullable: true
        questions:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubCustomQuestionAnswerDto"
        dutyRoleId:
          type: integer
          format: int32
          nullable: true
        attendanceType:
          "$ref": "#/components/schemas/EventAttendanceType"
        calendarEventOccurrenceId:
          type: string
          format: guid
        successUrl:
          type: string
          nullable: true
        paymentMethod:
          nullable: true
          "$ref": "#/components/schemas/PaymentMethod"
        voucherCode:
          type: string
          nullable: true
    PubCustomQuestionAnswerDto:
      type: object
      additionalProperties: false
      properties:
        questionType:
          "$ref": "#/components/schemas/CalendarEventQuestionType"
        calendarEventQuestionId:
          type: integer
          format: int32
        answers:
          type: array
          nullable: true
          items:
            type: string
    PaymentMethod:
      type: string
      description: ''
      x-enumNames:
      - Invoice
      - Credit
      - PartialCreditAndInvoice
      enum:
      - Invoice
      - Credit
      - PartialCreditAndInvoice
    PubOverwriteAttendanceDto:
      type: object
      additionalProperties: false
      properties:
        personId:
          type: string
          format: guid
        occurrenceId:
          type: string
          format: guid
        teamId:
          type: string
          format: guid
        attendanceType:
          "$ref": "#/components/schemas/EventAttendanceType"
    PagedResultDtoOfCommitteePubDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfCommitteePubDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfCommitteePubDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CommitteePubDto"
    CommitteePubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          code:
            type: string
            nullable: true
          isBoard:
            type: boolean
          persons:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/CommitteePersonPubDto"
    CommitteePersonPubDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        personId:
          type: string
          format: guid
        role:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        mobilePhone:
          type: string
          nullable: true
    CustomFieldResponsePubDto:
      type: object
      additionalProperties: false
      properties:
        customFieldId:
          type: integer
          format: int32
        customFieldName:
          type: string
          nullable: true
        customFieldDescription:
          type: string
          nullable: true
        customFieldType:
          "$ref": "#/components/schemas/CustomFieldType"
        disciplineId:
          type: integer
          format: int32
          nullable: true
        disciplineName:
          type: string
          nullable: true
        groupName:
          type: string
          nullable: true
        response:
          type: string
          nullable: true
        options:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CustomFieldOptionDto"
    CustomFieldType:
      type: string
      description: ''
      x-enumNames:
      - Int
      - Float
      - Bool
      - Text
      - DateTime
      - Select
      - MultiSelect
      enum:
      - Int
      - Float
      - Bool
      - Text
      - DateTime
      - Select
      - MultiSelect
    CustomFieldOptionDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
    CustomFieldResponseDto:
      type: object
      additionalProperties: false
      properties:
        customFieldId:
          type: integer
          format: int32
        value:
          type: string
          nullable: true
    CustomFieldGroupPubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          disciplineId:
            type: integer
            format: int32
            nullable: true
          fields:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/DisciplineFieldDto"
    DisciplineFieldDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          customFieldType:
            "$ref": "#/components/schemas/CustomFieldType"
          isEditableByPerson:
            type: boolean
          options:
            nullable: true
    CustomFieldPubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          customFieldType:
            "$ref": "#/components/schemas/CustomFieldType"
          isEditableByPerson:
            type: boolean
          options:
            nullable: true
    DataIntegritySettingsDto:
      type: object
      additionalProperties: false
      properties:
        description:
          type: string
          nullable: true
        personFieldsConfig:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/DataIntegritySettingsFieldDto"
    DataIntegritySettingsFieldDto:
      type: object
      additionalProperties: false
      properties:
        key:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        customFieldId:
          type: integer
          format: int32
          nullable: true
        enabled:
          type: boolean
        required:
          type: boolean
    DataIntegrityInputDto:
      type: object
      additionalProperties: false
      properties:
        firstName:
          type: string
          nullable: true
        nameInfix:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        birthDate:
          type: string
          format: date-time
          nullable: true
        gender:
          nullable: true
          "$ref": "#/components/schemas/Gender"
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobilePhone:
          type: string
          nullable: true
        customFieldResponses:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CustomFieldResponseDto"
    DisciplinePubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
    DocumentTypePubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          isRequired:
            type: boolean
          files:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PubAttachmentDto"
    PubDutyDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        occurrenceId:
          type: string
          format: guid
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        dutyAssignments:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubDutyAssignmentDto"
        dutyRoles:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubDutyRoleDto"
    PubDutyAssignmentDto:
      type: object
      additionalProperties: false
      properties:
        personFullName:
          type: string
          nullable: true
        dutyRoleName:
          type: string
          nullable: true
    PagedResultDtoOfFavouritePersonDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfFavouritePersonDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfFavouritePersonDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FavouritePersonDto"
    FavouritePersonDto:
      type: object
      additionalProperties: false
      properties:
        PersonGuid:
          type: string
          format: guid
        Gender:
          type: string
          nullable: true
        FullName:
          type: string
          nullable: true
        FirstName:
          type: string
          nullable: true
        NameInfix:
          type: string
          nullable: true
        LastName:
          type: string
          nullable: true
        BirthDate:
          type: string
          format: date-time
        Phone:
          type: string
          nullable: true
        MobilePhone:
          type: string
          nullable: true
        Email:
          type: string
          nullable: true
        AvatarUrl:
          type: string
          nullable: true
        FederationMembershipNumber:
          type: string
          nullable: true
        ClubMembershipNumber:
          type: string
          nullable: true
        ClubName:
          type: string
          nullable: true
        TeamName:
          type: string
          nullable: true
        Id:
          type: integer
          format: int32
    PagedResultDtoOfPubPersonFederationRoleDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPubPersonFederationRoleDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPubPersonFederationRoleDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubPersonFederationRoleDto"
    PubPersonFederationRoleDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          persons:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PersonBasePubDto"
    GeocodeAddressDto:
      type: object
      additionalProperties: false
      properties:
        streetName:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    LanguageDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          displayName:
            type: string
            nullable: true
          flag:
            type: string
            nullable: true
          cultureInfoName:
            type: string
            nullable: true
          isDefault:
            type: boolean
    LinkPubDto:
      type: object
      additionalProperties: false
      properties:
        type:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
    LocationPubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          id:
            type: string
            format: guid
          assetUrl:
            type: string
            nullable: true
          locationType:
            type: string
            nullable: true
          marketingInterestName:
            type: string
            nullable: true
          marketingInterestId:
            type: integer
            format: int32
            nullable: true
          isMainLocation:
            type: boolean
          address:
            nullable: true
            "$ref": "#/components/schemas/AddressInfoPubDto"
          description:
            type: string
            nullable: true
    MediaFolderPubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          parentMediaFolderId:
            type: string
            format: guid
            nullable: true
          children:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/MediaFolderPubDto"
    PagedResultDtoOfPubAttachmentDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPubAttachmentDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPubAttachmentDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubAttachmentDto"
    PagedResultDtoOfPersonListPubDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPersonListPubDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPersonListPubDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PersonListPubDto"
    PersonListPubDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        namePrefix:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        nameInfix:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        gender:
          nullable: true
          "$ref": "#/components/schemas/Gender"
        birthDate:
          type: string
          format: date-time
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobilePhone:
          type: string
          nullable: true
        assetUrl:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        federationMembershipIdentifier:
          type: string
          nullable: true
        clubMembershipIdentifier:
          type: string
          nullable: true
        insertedAt:
          type: string
          format: date-time
        isEmailSecret:
          type: boolean
        isPhoneSecret:
          type: boolean
        isMobileSecret:
          type: boolean
        clubName:
          type: string
          nullable: true
        teams:
          type: array
          nullable: true
          items:
            type: string
    PagedResultDtoOfPersonSearchPubDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPersonSearchPubDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPersonSearchPubDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PersonSearchPubDto"
    PersonSearchPubDto:
      type: object
      additionalProperties: false
      properties:
        guid:
          type: string
          format: guid
        firstName:
          type: string
          nullable: true
        nameInfix:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        federationMembershipIdentifier:
          type: string
          nullable: true
    PersonPrivateDetailsPubDto:
      allOf:
      - "$ref": "#/components/schemas/PersonBasePubDto"
      - type: object
        additionalProperties: false
        properties:
          foysMemberLogin:
            type: string
            nullable: true
          nationalityCountryCode:
            type: string
            nullable: true
          memberSince:
            type: string
            format: date-time
            nullable: true
          memberTill:
            type: string
            format: date-time
            nullable: true
          bankAccountName:
            type: string
            nullable: true
          IBAN:
            type: string
            nullable: true
          address:
            nullable: true
            "$ref": "#/components/schemas/PersonAddressPubDto"
          isClubManagedByExternalSystem:
            type: boolean
            nullable: true
          allowMembersToEditPersonalDetails:
            type: boolean
            nullable: true
          isParentMember:
            type: boolean
            nullable: true
          wantsToReceiveEmail:
            type: boolean
            nullable: true
          wantsToReceivePromotions:
            type: boolean
            nullable: true
          doesNotWantToReceiveMagazine:
            type: boolean
            nullable: true
          placeOfBirth:
            type: string
            nullable: true
          organisationName:
            type: string
            nullable: true
          parentInfos:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/ParentInfoPubDto"
          languageCode:
            type: string
            nullable: true
          isBlocked:
            type: boolean
          tags:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PersonTagPubDto"
          activeTeams:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
          planAssignments:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PersonPlanAssignmentPubDto"
    PersonAddressPubDto:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        address3:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        suffix:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberExtension:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        locationName:
          type: string
          nullable: true
    ParentInfoPubDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          parentName:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
          relationship:
            type: string
            nullable: true
          phone:
            type: string
            nullable: true
          receiveEmails:
            type: boolean
    PersonTagPubDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        groupName:
          type: string
          nullable: true
        groupPosition:
          type: integer
          format: int32
          nullable: true
        groupCode:
          type: string
          nullable: true
        color:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        hideFromApp:
          type: boolean
    PersonPlanAssignmentPubDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        originalStartDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        cancellationDate:
          type: string
          format: date-time
          nullable: true
        cancellationReasonId:
          type: integer
          format: int32
          nullable: true
        cancellationReason:
          type: string
          nullable: true
        planName:
          type: string
          nullable: true
        planCode:
          type: string
          nullable: true
        categoryTypeCode:
          type: string
          nullable: true
        isMatchLicense:
          type: boolean
        isFederationPlan:
          type: boolean
        isClubPlan:
          type: boolean
        organisationId:
          type: string
          format: guid
        organisationName:
          type: string
          nullable: true
        changeReasonCode:
          type: string
          nullable: true
        latestCancellationDate:
          type: string
          format: date-time
          nullable: true
    PersonCommitteePubDto:
      type: object
      additionalProperties: false
      properties:
        committeeName:
          type: string
          nullable: true
        committeeId:
          type: integer
          format: int32
        role:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
    PersonPrivacySettingsDto:
      type: object
      additionalProperties: false
      properties:
        isEmailSecret:
          type: boolean
          nullable: true
        isPhoneSecret:
          type: boolean
          nullable: true
        isMobileSecret:
          type: boolean
          nullable: true
        isAddressSecret:
          type: boolean
          nullable: true
    BillingInfoPubDto:
      type: object
      additionalProperties: false
      properties:
        debtCollection:
          type: boolean
        dontInvoiceMemberships:
          type: boolean
        iban:
          type: string
          nullable: true
        mandateId:
          type: string
          nullable: true
        debtCollectionTerms:
          type: integer
          format: int32
          nullable: true
        bankAccountName:
          type: string
          nullable: true
        bic:
          type: string
          nullable: true
        mandateDate:
          type: string
          format: date-time
          nullable: true
        mandateEndDate:
          type: string
          format: date-time
          nullable: true
        invoiceDeliveryMethod:
          "$ref": "#/components/schemas/InvoiceDeliveryMethod"
        contributionTermId:
          type: integer
          format: int32
          nullable: true
        contributionTermName:
          type: string
          nullable: true
    InvoiceDeliveryMethod:
      type: string
      description: ''
      x-enumNames:
      - ByEmail
      - ByLetter
      enum:
      - ByEmail
      - ByLetter
    PersonActiveMembershipPubDto:
      type: object
      additionalProperties: false
      properties:
        isClubMembership:
          type: boolean
        isPremiumClub:
          type: boolean
        guid:
          type: string
          format: guid
        name:
          type: string
          nullable: true
        logo:
          type: string
          nullable: true
        isActive:
          type: boolean
    PasswordChangeRequestDto:
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
          nullable: true
        clubId:
          type: string
          format: guid
          nullable: true
    RestoreAccountRequestDto:
      type: object
      additionalProperties: false
      properties:
        lastName:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date-time
        email:
          type: string
          nullable: true
        clubId:
          type: string
          format: guid
          nullable: true
    MemberChangePasswordRequestDto:
      type: object
      additionalProperties: false
      properties:
        currentPassword:
          type: string
          nullable: true
        newPassword:
          type: string
          nullable: true
    ResetPasswordPubRequestDto:
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
    SignUpMemberWithMyEnvironmentConfigOutputDto:
      type: object
      additionalProperties: false
      properties:
        paymentUrl:
          type: string
          nullable: true
        federationMembershipIdentifier:
          type: string
          nullable: true
    SignUpMemberWithMyEnvironmentConfigInputDto:
      type: object
      additionalProperties: false
      properties:
        person:
          nullable: true
          "$ref": "#/components/schemas/PersonSignUpWithMyEnvironmentConfigPubDto"
        planCode:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        wantToReceiveNewsletter:
          type: boolean
        wantToReceiveEmail:
          type: boolean
        communication_tags:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        languageCode:
          type: string
          nullable: true
    PersonSignUpWithMyEnvironmentConfigPubDto:
      type: object
      additionalProperties: false
      properties:
        firstName:
          type: string
          nullable: true
        nameInfix:
          type: string
          nullable: true
        namePrefix:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        gender:
          "$ref": "#/components/schemas/Gender"
        phone:
          type: string
          nullable: true
        mobilePhone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        address:
          nullable: true
          "$ref": "#/components/schemas/PersonAddressPubDto"
        nationalityCountryCode:
          type: string
          nullable: true
        memberSince:
          type: string
          format: date-time
          nullable: true
        memberTill:
          type: string
          format: date-time
          nullable: true
        notes:
          type: string
          nullable: true
        federationMembershipIdentifier:
          type: string
          nullable: true
        clubMembershipIdentifier:
          type: string
          nullable: true
        foysMemberLogin:
          type: string
          nullable: true
        birthDate:
          type: string
          format: date-time
          nullable: true
    PersonValidateUsernamePubDto:
      type: object
      additionalProperties: false
      properties:
        username:
          type: string
          nullable: true
        excludeUserId:
          type: string
          format: guid
          nullable: true
    UpdatePersonLanguageDto:
      type: object
      additionalProperties: false
      properties:
        languageCode:
          type: string
          nullable: true
    MemberFederationRolePubDto:
      type: object
      additionalProperties: false
      properties:
        federationRoleName:
          type: string
          nullable: true
        organisationName:
          type: string
          nullable: true
    FamilyMemberCalculationOutput:
      type: object
      additionalProperties: false
      properties:
        totalPrice:
          type: number
          format: decimal
          nullable: true
        plan:
          nullable: true
          "$ref": "#/components/schemas/NamePriceDto"
        services:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/NamePriceDto"
    NamePriceDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          price:
            type: number
            format: decimal
    FamilyMemberCalculationInput:
      type: object
      additionalProperties: false
      properties:
        planId:
          type: integer
          format: int32
          nullable: true
        serviceIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
    CreateFamilyMemberForParentPersonOutput:
      type: object
      additionalProperties: false
      properties:
        paymentLink:
          type: string
          nullable: true
    CreateFamilyMemberForParentPersonInput:
      allOf:
      - "$ref": "#/components/schemas/PersonCreateDto"
      - type: object
        additionalProperties: false
        properties:
          PlanAssignment:
            nullable: true
            "$ref": "#/components/schemas/PlanAssignmentCreateDto"
          ServiceIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    PlanAssignmentCreateDto:
      allOf:
      - "$ref": "#/components/schemas/PlanAssignmentActionBaseDto"
      - type: object
        additionalProperties: false
    PlanAssignmentActionBaseDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          planId:
            type: integer
            format: int32
            nullable: true
          PlanCode:
            type: string
            nullable: true
          personId:
            type: string
            format: guid
            nullable: true
          startDate:
            type: string
            format: date-time
            nullable: true
          MemberSince:
            type: string
            format: date-time
            nullable: true
          endDate:
            type: string
            format: date-time
            nullable: true
          parentPersonId:
            type: string
            format: guid
            nullable: true
          RegistrationFee:
            type: boolean
            nullable: true
          TransferFee:
            type: boolean
            nullable: true
          organisationId:
            type: string
            format: guid
            nullable: true
          IsFromImport:
            type: boolean
          ChangeReasonCode:
            type: string
            nullable: true
          NotInvoicedReason:
            type: string
            nullable: true
    PersonCreateDto:
      allOf:
      - "$ref": "#/components/schemas/PersonBaseActionBaseDto"
      - type: object
        additionalProperties: false
        properties:
          Password:
            type: string
            nullable: true
          FederationPlan:
            nullable: true
            "$ref": "#/components/schemas/PlanAssignmentCreateDto"
          ClubPlan:
            nullable: true
            "$ref": "#/components/schemas/PlanAssignmentCreateDto"
          DisciplineIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    PersonBaseActionBaseDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          OrganisationId:
            type: string
            format: guid
          Email:
            nullable: true
            "$ref": "#/components/schemas/EmailDto"
          NamePrefix:
            type: string
            nullable: true
          FirstName:
            type: string
            nullable: true
          NameInfix:
            type: string
            nullable: true
          LastName:
            type: string
            nullable: true
          Initials:
            type: string
            nullable: true
          FederationMembershipIdentifier:
            type: string
            nullable: true
          ImportedFederationMembershipIdentifier:
            type: string
            nullable: true
          ClubMembershipIdentifier:
            type: string
            nullable: true
          FoysMemberLogin:
            type: string
            nullable: true
          NationalityCountryId:
            type: integer
            nullable: true
          NationalityCountryCode:
            type: string
            nullable: true
          PlaceOfBirth:
            type: string
            nullable: true
          CountryOfBirthId:
            type: integer
            nullable: true
          MobilePhone:
            nullable: true
            "$ref": "#/components/schemas/PhoneDto"
          OtherPhone:
            nullable: true
            "$ref": "#/components/schemas/PhoneDto"
          Gender:
            nullable: true
            "$ref": "#/components/schemas/Gender"
          GenderForMatches:
            nullable: true
            "$ref": "#/components/schemas/GenderForMatches"
          BirthDate:
            type: string
            format: date-time
            nullable: true
          MemberSince:
            type: string
            format: date-time
            nullable: true
          PlanCode:
            type: string
            nullable: true
          AddressInfo:
            nullable: true
            "$ref": "#/components/schemas/AddressInfoDto"
          ParentInfos:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/ParentInfoDto"
          BillingInfoDto:
            nullable: true
            "$ref": "#/components/schemas/BillingInfoDto"
          WantsToReceiveMagazine:
            type: boolean
            nullable: true
          WantsToReceiveEmail:
            type: boolean
            nullable: true
          WantsToReceivePromotions:
            type: boolean
            nullable: true
          Injuries:
            type: string
            nullable: true
          AutomatedExternalDefibrilator:
            type: boolean
            nullable: true
          GdprConsent:
            type: boolean
            nullable: true
          GdprConsentDate:
            type: string
            format: date-time
            nullable: true
          CertificateOfConduct:
            type: boolean
            nullable: true
          CertificateOfConductDate:
            type: string
            format: date-time
            nullable: true
          CertificateOfConductEndDate:
            type: string
            format: date-time
            nullable: true
          PhotoCheck:
            type: boolean
            nullable: true
          PhotoUploadedAt:
            type: string
            format: date-time
            nullable: true
          PhotoValidUntil:
            type: string
            format: date-time
            nullable: true
          ExternalClubAdministrationSystemId:
            type: string
            nullable: true
          NationalityVerified:
            type: boolean
            nullable: true
          NationalityVerifiedDate:
            type: string
            format: date-time
            nullable: true
          IsBlocked:
            type: boolean
            nullable: true
          RegistrationStatus:
            nullable: true
            "$ref": "#/components/schemas/RegistrationStatus"
          Notes:
            type: string
            nullable: true
          IsFromImport:
            type: boolean
    EmailDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          email:
            type: string
            nullable: true
          type:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          isPrivate:
            type: boolean
    PhoneDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          countryId:
            type: integer
            nullable: true
          countryCode:
            type: string
            nullable: true
          number:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          isPrivate:
            type: boolean
          type:
            "$ref": "#/components/schemas/PhoneType"
    PhoneType:
      type: integer
      description: ''
      x-enumNames:
      - Other
      - Mobile
      enum:
      - 0
      - 1
    GenderForMatches:
      type: integer
      description: ''
      x-enumNames:
      - Male
      - Female
      enum:
      - 0
      - 1
    AddressInfoDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          address1:
            type: string
            nullable: true
          address2:
            type: string
            nullable: true
          address3:
            type: string
            nullable: true
          houseNumber:
            type: string
            nullable: true
          houseNumberExtension:
            type: string
            nullable: true
          zipcode:
            type: string
            nullable: true
          city:
            type: string
            nullable: true
          countryCode:
            type: string
            nullable: true
          countryName:
            type: string
            nullable: true
          suffix:
            type: string
            nullable: true
          countryId:
            type: integer
          latitude:
            type: number
            format: double
            nullable: true
          longitude:
            type: number
            format: double
            nullable: true
    ParentInfoDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          parentName:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
          relationship:
            type: string
            nullable: true
          phone:
            type: string
            nullable: true
          receiveEmails:
            type: boolean
          isDeleted:
            type: boolean
    BillingInfoDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          debtCollection:
            type: boolean
          dontInvoiceMemberships:
            type: boolean
          iban:
            type: string
            nullable: true
          ip:
            type: string
            nullable: true
          userAgent:
            type: string
            nullable: true
          mandateId:
            type: string
            nullable: true
          debtCollectionTerms:
            type: integer
            format: int32
            nullable: true
          bankAccountName:
            type: string
            nullable: true
          bic:
            type: string
            nullable: true
          mandateDate:
            type: string
            format: date-time
            nullable: true
          mandateEndDate:
            type: string
            format: date-time
            nullable: true
          invoiceDeliveryMethod:
            "$ref": "#/components/schemas/InvoiceDeliveryMethod"
          discountTypeId:
            type: integer
            format: int32
            nullable: true
          discountTypeName:
            type: string
            nullable: true
          contributionTermId:
            type: integer
            format: int32
            nullable: true
          contributionTermName:
            type: string
            nullable: true
          isMembershipPaidByExternalOrganisation:
            type: boolean
          membershipPaidByExternalOrganisation:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDtoOfNullableGuid"
          membershipPaidByExternalOrganisationId:
            type: string
            format: guid
            nullable: true
          membershipPaidByExternalOrganisationName:
            type: string
            nullable: true
          membershipPaidByExternalOrganisationDescription:
            type: string
            nullable: true
    NamedEntityDtoOfNullableGuid:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
          nullable: true
        name:
          type: string
          nullable: true
    RegistrationStatus:
      type: integer
      description: ''
      x-enumNames:
      - Accepted
      - Pending
      enum:
      - 0
      - 1
    PagedResultDtoOfMessagePubDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfMessagePubDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfMessagePubDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/MessagePubDto"
    MessagePubDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        title:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
        assets:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubAttachmentDto"
        isRead:
          type: boolean
    CreateMessagePubDto:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        sendPushNotification:
          type: boolean
        sendAsEmail:
          type: boolean
        personGuids:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        teamGuids:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        attachments:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/Base64FileDto"
    MyEnvironmentConfigOutputPubDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            nullable: true
          planCode:
            type: string
            nullable: true
          locale:
            "$ref": "#/components/schemas/Locale"
          extraConfig:
            type: string
            nullable: true
          canSignUpForPlan:
            type: boolean
          signUpFields:
            type: string
            nullable: true
          confirmationEmailTemplate:
            type: string
            nullable: true
          federationId:
            type: string
            format: guid
            nullable: true
          organisationId:
            type: string
            format: guid
          signupForOrganisationId:
            type: string
            format: guid
            nullable: true
          defaultCountryCode:
            type: string
            nullable: true
          timeZone:
            type: string
            nullable: true
          planCodesForNewMemberships:
            type: string
            nullable: true
          payDirectlyForNewMembership:
            type: boolean
          automaticallyAcceptNewMemberships:
            type: boolean
          enablePlanCancellation:
            type: boolean
          enableChangingPlan:
            type: boolean
          setDateWhenChangingPlan:
            type: boolean
          changePlanForNextSeason:
            type: boolean
          allowVouchersOnPlansAndServicesPage:
            type: boolean
          canCreateOrganisation:
            type: boolean
          organisationSignUpLoginRequired:
            type: boolean
    PubNewsItemDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
            nullable: true
          published:
            type: boolean
          translations:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/NewsItemTranslationDto"
          attachments:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PubAttachmentDto"
          tags:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/TagBasicDto"
          newsItemOfficialMedia:
            nullable: true
            "$ref": "#/components/schemas/PubAttachmentDto"
    NewsItemTranslationDto:
      type: object
      additionalProperties: false
      properties:
        languageId:
          type: integer
          format: int32
        languageCode:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        shortDescription:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
    PagedResultDtoOfClubListPubDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfClubListPubDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfClubListPubDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ClubListPubDto"
    ClubListPubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          type:
            type: string
            nullable: true
          code:
            type: string
            nullable: true
          regionName:
            type: string
            nullable: true
          websiteAddress:
            type: string
            nullable: true
          dateOfIncorporation:
            type: string
            format: date-time
            nullable: true
          logoUrl:
            type: string
            nullable: true
          clubOutfitUrl:
            type: string
            nullable: true
          address:
            nullable: true
            "$ref": "#/components/schemas/AddressInfoPubDto"
          customFieldResponses:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/CustomFieldResponseClubFeedDto"
    CustomFieldResponseClubFeedDto:
      type: object
      additionalProperties: false
      properties:
        customFieldName:
          type: string
          nullable: true
        customFieldCode:
          type: string
          nullable: true
        customFieldValue:
          type: string
          nullable: true
    PagedResultDtoOfOrganisationLookupPubDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOrganisationLookupPubDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOrganisationLookupPubDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OrganisationLookupPubDto"
    OrganisationLookupPubDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        organisationTypeId:
          type: integer
          format: int32
          nullable: true
        logoUrl:
          type: string
          nullable: true
    OrganisationDetailsPubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          hasPremiumPackage:
            type: boolean
          showMembersListInApp:
            type: boolean
          allowMembersToEditPersonalDetails:
            type: boolean
          dateOfIncorporation:
            type: string
            format: date-time
            nullable: true
          federationName:
            type: string
            nullable: true
          timeZone:
            type: string
            nullable: true
          logoUrl:
            type: string
            nullable: true
          phones:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PhonePubDto"
          emails:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/EmailPubDto"
          links:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/LinkPubDto"
          locations:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/LocationPubDto"
          accommodations:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/AccommodationDto"
          disciplines:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/DisciplinePubDto"
    PhonePubDto:
      type: object
      additionalProperties: false
      properties:
        type:
          "$ref": "#/components/schemas/PhoneType2"
        number:
          type: string
          nullable: true
    PhoneType2:
      type: string
      description: ''
      x-enumNames:
      - Other
      - Mobile
      enum:
      - Other
      - Mobile
    EmailPubDto:
      type: object
      additionalProperties: false
      properties:
        type:
          "$ref": "#/components/schemas/EmailType"
        address:
          type: string
          nullable: true
    EmailType:
      type: string
      description: ''
      x-enumNames:
      - General
      - Invoice
      enum:
      - General
      - Invoice
    AccommodationDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          isMainAccommodation:
            type: boolean
    PagedResultDtoOfExternalOrganisationsListPubDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfExternalOrganisationsListPubDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfExternalOrganisationsListPubDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ExternalOrganisationsListPubDto"
    ExternalOrganisationsListPubDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        name:
          type: string
          nullable: true
        organisationTypeName:
          type: string
          nullable: true
        logoUrl:
          type: string
          nullable: true
        address:
          nullable: true
          "$ref": "#/components/schemas/AddressInfoPubDto"
        customFieldResponses:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CustomFieldResponseClubFeedDto"
    OrganisationSignUpInputPubDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        cocNumber:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        website:
          type: string
          nullable: true
        contactPersonName:
          type: string
          nullable: true
        contactPersonEmail:
          type: string
          nullable: true
        address:
          nullable: true
          "$ref": "#/components/schemas/OrganisationAddressPubDto"
        logo:
          nullable: true
          "$ref": "#/components/schemas/Base64FileDto"
    OrganisationAddressPubDto:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberExtension:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
    PagedResultDtoOfPersonDisciplineDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPersonDisciplineDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPersonDisciplineDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PersonDisciplineDto"
    PersonDisciplineDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          personId:
            type: string
            format: guid
          disciplineId:
            type: integer
            format: int32
          disciplineName:
            type: string
            nullable: true
          matchCategoryCode:
            type: string
            nullable: true
          matchCategoryName:
            type: string
            nullable: true
          gradeDetails:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/GradeDetailDto"
          organisationId:
            type: string
            format: guid
            nullable: true
          organisationName:
            type: string
            nullable: true
          organisationCode:
            type: string
            nullable: true
    GradeDetailDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          personId:
            type: string
            format: guid
          gradeTypeId:
            type: integer
            format: int32
          disciplineId:
            type: integer
            format: int32
          gradeName:
            type: string
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
            nullable: true
          organisationId:
            type: string
            format: guid
            nullable: true
          organisationName:
            type: string
            nullable: true
    PubPersonDutyStatsDto:
      type: object
      additionalProperties: false
      properties:
        achievedPoints:
          type: integer
          format: int32
        remainingPoints:
          type: integer
          format: int32
    PersonRelationDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          personRelationTypeId:
            type: integer
            format: int32
          parentPerson:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
          parentFederationMembershipIdentifier:
            type: string
            nullable: true
          childPerson:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
          childFederationMembershipIdentifier:
            type: string
            nullable: true
    PersonRelationTypePubDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
    PagedResultDtoOfPubPersonTagDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPubPersonTagDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPubPersonTagDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubPersonTagDto"
    PubPersonTagDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        tagId:
          type: integer
          format: int32
        tagName:
          type: string
          nullable: true
        tagCode:
          type: string
          nullable: true
        tagColor:
          type: string
          nullable: true
        tagGroupName:
          type: string
          nullable: true
        start:
          type: string
          format: date-time
        cancellation:
          type: string
          format: date-time
          nullable: true
        tagType:
          "$ref": "#/components/schemas/TagType"
    PubPersonTagAddDto:
      allOf:
      - "$ref": "#/components/schemas/PubPersonTagBaseDto"
      - type: object
        additionalProperties: false
        properties:
          tagId:
            type: integer
            format: int32
    PubPersonTagBaseDto:
      type: object
      additionalProperties: false
      properties:
        start:
          type: string
          format: date-time
          nullable: true
        cancellation:
          type: string
          format: date-time
          nullable: true
    PubPersonTagUpdateDto:
      allOf:
      - "$ref": "#/components/schemas/PubPersonTagBaseDto"
      - type: object
        additionalProperties: false
    PagedResultDtoOfPhotoAlbumPubDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPhotoAlbumPubDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPhotoAlbumPubDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PhotoAlbumPubDto"
    PhotoAlbumPubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          url:
            type: string
            nullable: true
    PlanAssignmentCancelPubDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        cancellationReasonId:
          type: integer
          format: int32
        cancellationDate:
          type: string
          format: date-time
        myEnvironmentConfigId:
          type: string
          format: guid
    PlanAssignmentChangePubDto:
      type: object
      additionalProperties: false
      properties:
        myEnvironmentConfigId:
          type: string
          format: guid
        newPlanId:
          type: integer
          format: int32
        newPlanStartDate:
          type: string
          format: date-time
          nullable: true
    PlanAssignmentCreatePubDto:
      type: object
      additionalProperties: false
      properties:
        planId:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        organisationId:
          type: string
          format: guid
          nullable: true
        myEnvironmentConfigId:
          type: string
          format: guid
    PlanPubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          price:
            type: number
            format: decimal
          registrationFee:
            type: number
            format: decimal
          organisationTypeIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    PlanCancellationReasonPubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
    PlansAndServicesOutputPubDto:
      type: object
      additionalProperties: false
      properties:
        paymentLink:
          type: string
          nullable: true
    PlansAndServicesInputPubDto:
      type: object
      additionalProperties: false
      properties:
        myEnvironmentConfigId:
          type: string
          format: guid
        plansToAdd:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PlanAssignmentCreatePubDto"
        plansToRemove:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PlanAssignmentCancelPubDto"
        servicesToAdd:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ServicePubDto"
        servicesToRemove:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SubscriptionPubDto"
        successUrl:
          type: string
          nullable: true
        voucherCode:
          type: string
          nullable: true
    ServicePubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          groupName:
            type: string
            nullable: true
          groupCode:
            type: string
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          mustBeMember:
            type: boolean
          limitToPlanCodes:
            type: array
            nullable: true
            items:
              type: string
          mustHaveOtherService:
            type: boolean
          mustHaveServiceGroupCode:
            type: string
            nullable: true
          isCancellationInsurance:
            type: boolean
          price:
            type: number
            format: decimal
    SubscriptionPubDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          serviceId:
            type: integer
            format: int32
          serviceName:
            type: string
            nullable: true
          serviceGroupCode:
            type: string
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          cancellationDate:
            type: string
            format: date-time
            nullable: true
          mustBeMember:
            type: boolean
          limitToPlanCodes:
            type: array
            nullable: true
            items:
              type: string
          documentLink:
            type: string
            nullable: true
          documentFileName:
            type: string
            nullable: true
    FamilyPlansAndServicesInputPubDto:
      type: object
      additionalProperties: false
      properties:
        myEnvironmentConfigId:
          type: string
          format: guid
        changes:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PlansAndServicesPerPersonPubDto"
        successUrl:
          type: string
          nullable: true
        voucherCode:
          type: string
          nullable: true
    PlansAndServicesPerPersonPubDto:
      type: object
      additionalProperties: false
      properties:
        personId:
          type: string
          format: guid
          nullable: true
        plansToAdd:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PlanAssignmentCreatePubDto"
        plansToRemove:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PlanAssignmentCancelPubDto"
        servicesToAdd:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ServicePubDto"
        servicesToRemove:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SubscriptionPubDto"
    PersonActivePlayerLicenseDto:
      type: object
      additionalProperties: false
      properties:
        federationMembershipIdentifier:
          type: string
          nullable: true
        hasActivePlayerLicense:
          type: boolean
    InvoicePaymentLinkDto:
      type: object
      additionalProperties: false
      properties:
        paymentLink:
          type: string
          nullable: true
        invoiceId:
          type: string
          format: guid
        totalAmount:
          type: number
          format: decimal
        totalAmountWithVat:
          type: number
          format: decimal
    PubCreatePlayerLicenseDto:
      type: object
      additionalProperties: false
      properties:
        playerLicenseTypeId:
          type: integer
          format: int32
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        note:
          type: string
          nullable: true
        termsAndConditionsAccepted:
          type: boolean
          nullable: true
    PubCancelPlayerLicenseDto:
      type: object
      additionalProperties: false
      properties:
        playerLicenseId:
          type: string
          format: guid
        endDate:
          type: string
          format: date-time
          nullable: true
    PubPlayerLicenseDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        playerLicenseTypeId:
          type: integer
          format: int32
          nullable: true
        playerLicenseTypeName:
          type: string
          nullable: true
        canBeCancelledByPerson:
          type: boolean
        setEndDatePer:
          "$ref": "#/components/schemas/PlayerLicenseEndDatePer"
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        cancellationDate:
          type: string
          format: date-time
          nullable: true
        status:
          "$ref": "#/components/schemas/PlayerLicenseStatus"
    PlayerLicenseEndDatePer:
      type: string
      description: ''
      x-enumNames:
      - RuntimePeriod
      - CustomDate
      - EndOfSeason
      enum:
      - RuntimePeriod
      - CustomDate
      - EndOfSeason
    PlayerLicenseStatus:
      type: string
      description: ''
      x-enumNames:
      - Requested
      - Accepted
      - Rejected
      - Expired
      - Cancelled
      enum:
      - Requested
      - Accepted
      - Rejected
      - Expired
      - Cancelled
    PubPlayerLicenseTypeDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          fromAge:
            type: integer
            format: int32
            nullable: true
          toAge:
            type: integer
            format: int32
            nullable: true
          price:
            type: number
            format: decimal
          termsAndConditionsUrl:
            type: string
            nullable: true
          allowPersonToSetStartDate:
            type: boolean
          allowPersonToSetEndDate:
            type: boolean
    PushRegistrationDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          registrationToken:
            type: string
            nullable: true
          deviceType:
            "$ref": "#/components/schemas/DeviceType"
          topics:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    RegistrationFormConfigPubDto:
      allOf:
      - "$ref": "#/components/schemas/RegistrationFormConfigDto"
      - type: object
        additionalProperties: false
        properties:
          locale:
            type: string
            nullable: true
          defaultCountryCode:
            type: string
            nullable: true
    RegistrationFormConfigDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          fieldsConfiguration:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/RegistrationFormModuleDto"
          planCodes:
            type: string
            nullable: true
          defaultPlanOrganisationId:
            type: string
            format: guid
            nullable: true
          defaultPlanOrganisationName:
            type: string
            nullable: true
          serviceCodes:
            type: string
            nullable: true
          title:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          privacyPolicyUrl:
            type: string
            nullable: true
          termsAndConditionsUrl:
            type: string
            nullable: true
          termsAndConditionsText:
            type: string
            nullable: true
          successRedirectUrl:
            type: string
            nullable: true
          invoiceTypeCode:
            type: string
            nullable: true
          allowDirectPayment:
            type: boolean
          hidePrices:
            type: boolean
          notificationEmailTemplateId:
            type: integer
            format: int32
            nullable: true
          notificationRecipients:
            type: string
            nullable: true
          confirmationEmailTemplateId:
            type: integer
            format: int32
            nullable: true
          tenantId:
            type: string
            format: guid
          tagIdsToAssign:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          languageId:
            type: integer
            format: int32
          automaticallyAcceptRegistrations:
            type: boolean
          textToShowWhenPersonExists:
            type: string
            nullable: true
    RegistrationFormModuleDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        isCustom:
          type: boolean
        enabled:
          type: boolean
        fields:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/RegistrationFormFieldDto"
    RegistrationFormFieldDto:
      type: object
      additionalProperties: false
      properties:
        key:
          type: string
          nullable: true
        label:
          type: string
          nullable: true
        customLabel:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        type:
          "$ref": "#/components/schemas/RegistrationFormFieldType"
        required:
          type: boolean
        enabled:
          type: boolean
        options:
          nullable: true
        customFieldId:
          type: integer
          format: int32
          nullable: true
        condition:
          nullable: true
    RegistrationFormFieldType:
      type: string
      description: ''
      x-enumNames:
      - String
      - Number
      - Boolean
      - Date
      - Dropdown
      - Country
      - Plan
      - Email
      - Image
      - Password
      - ContributionTerms
      - Organisation
      - MultiSelect
      - Discipline
      - Language
      - Newsletters
      - MarketingInterests
      - Services
      enum:
      - String
      - Number
      - Boolean
      - Date
      - Dropdown
      - Country
      - Plan
      - Email
      - Image
      - Password
      - ContributionTerms
      - Organisation
      - MultiSelect
      - Discipline
      - Language
      - Newsletters
      - MarketingInterests
      - Services
    RegistrationFormPlanDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          price:
            type: number
            format: decimal
          planCode:
            type: string
            nullable: true
          registrationFee:
            type: number
            format: decimal
            nullable: true
          remittanceFee:
            type: number
            format: decimal
            nullable: true
          transferFee:
            type: number
            format: decimal
            nullable: true
          discountFee:
            type: number
            format: decimal
            nullable: true
          administrationFee:
            type: number
            format: decimal
            nullable: true
          remittanceDescription:
            type: string
            nullable: true
          fromAge:
            type: integer
            format: byte
            nullable: true
          toAge:
            type: integer
            format: byte
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          referenceDate:
            type: string
            format: date-time
            nullable: true
          organisationTypeIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    PublicVoucherInfoDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid2"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          amount:
            type: number
            format: decimal
          amountType:
            "$ref": "#/components/schemas/VoucherAmountType"
          validFrom:
            type: string
            format: date-time
          validTo:
            type: string
            format: date-time
          minimumAmountSpent:
            type: number
            format: decimal
            nullable: true
          oncePerPerson:
            type: boolean
          registerLeftoverAmountAsCredits:
            type: boolean
    VoucherAmountType:
      type: string
      description: ''
      x-enumNames:
      - Percent
      - Amount
      enum:
      - Percent
      - Amount
    EntityDtoOfGuid2:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
    RegistrationFormResultPubDto:
      type: object
      additionalProperties: false
      properties:
        federationMembershipIdentifier:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
        paymentLink:
          type: string
          nullable: true
    RegistrationFormEntryDto:
      allOf:
      - "$ref": "#/components/schemas/PersonCreateDto"
      - type: object
        additionalProperties: false
        properties:
          PlanAssignment:
            nullable: true
            "$ref": "#/components/schemas/PlanAssignmentCreateDto"
          CustomFieldValues:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/KeyValuePairOfIntegerAndObject"
          Avatar:
            nullable: true
            "$ref": "#/components/schemas/Base64FileDto"
          Files:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/Base64FileDto"
          MarketingInterests:
            type: array
            nullable: true
            items:
              type: string
          Newsletters:
            type: array
            nullable: true
            items:
              type: string
          VoucherCode:
            type: string
            nullable: true
          ConfirmPassword:
            type: string
            nullable: true
          LanguageCode:
            type: string
            nullable: true
          ServiceIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    KeyValuePairOfIntegerAndObject:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: integer
          format: int32
        Value: {}
    SeasonDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          points:
            type: integer
            format: int32
          isActive:
            type: boolean
    PagedResultDtoOfSponsorPubDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfSponsorPubDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfSponsorPubDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SponsorPubDto"
    SponsorPubDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        assets:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubAttachmentDto"
    FamilyMemberSubscriptionWrapperDto:
      type: object
      additionalProperties: false
      properties:
        personId:
          type: string
          format: guid
        activeSubscriptions:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SubscriptionPubDto"
    PagedResultDtoOfPubSurveyDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPubSurveyDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPubSurveyDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubSurveyDto"
    PubSurveyDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          confirmationText:
            type: string
            nullable: true
          thankYouText:
            type: string
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          isAlreadySubmitted:
            type: boolean
    PubSurveyDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/PubSurveyDto"
      - type: object
        additionalProperties: false
        properties:
          questions:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PubSurveyQuestionDto"
    PubSurveyQuestionDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          text:
            type: string
            nullable: true
          showOptionsInRandomOrder:
            type: boolean
          categoryId:
            type: string
            format: guid
            nullable: true
          categoryName:
            type: string
            nullable: true
          type:
            "$ref": "#/components/schemas/SurveyQuestionType"
          options:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PubSurveyQuestionOptionDto"
          position:
            type: integer
            format: int32
    SurveyQuestionType:
      type: string
      description: ''
      x-enumNames:
      - Select
      - Open
      enum:
      - Select
      - Open
    PubSurveyQuestionOptionDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        text:
          type: string
          nullable: true
    PubSurveySubmissionDto:
      type: object
      additionalProperties: false
      properties:
        answers:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PubSurveyQuestionAnswerDto"
    PubSurveyQuestionAnswerDto:
      type: object
      additionalProperties: false
      properties:
        surveyQuestionId:
          type: string
          format: guid
        selectedOptionId:
          type: integer
          format: int32
          nullable: true
        openTextAnswer:
          type: string
          nullable: true
    PagedResultDtoOfTagPubDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfTagPubDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfTagPubDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagPubDto"
    TagPubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          group:
            type: string
            nullable: true
          groupPosition:
            type: integer
            format: int32
            nullable: true
          color:
            type: string
            nullable: true
          type:
            "$ref": "#/components/schemas/TagType"
          isVisibleForPersons:
            type: boolean
          isAssignableByPerson:
            type: boolean
    PagedResultDtoOfTeamListPubDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfTeamListPubDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfTeamListPubDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TeamListPubDto"
    TeamListPubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          shortName:
            type: string
            nullable: true
    TeamPubDto:
      allOf:
      - "$ref": "#/components/schemas/TeamListPubDto"
      - type: object
        additionalProperties: false
        properties:
          persons:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/TeamMemberDetailsPubDto"
    TeamMemberDetailsPubDto:
      type: object
      additionalProperties: false
      properties:
        role:
          nullable: true
          "$ref": "#/components/schemas/TeamRoleDetailsPubDto"
        person:
          nullable: true
          "$ref": "#/components/schemas/PersonBasePubDto"
        hasActivePlayerLicense:
          type: boolean
        qualifications:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PersonTagPubDto"
    TeamRoleDetailsPubDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        isPlayer:
          type: boolean
        canSendMessages:
          type: boolean
        canOverwriteAttendance:
          type: boolean
        hasAccessToMatchForm:
          type: boolean
    TeamRolePubDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        isPlayer:
          type: boolean
    TeamMemberPubDto:
      type: object
      additionalProperties: false
      properties:
        fullName:
          type: string
          nullable: true
        avatarUrl:
          type: string
          nullable: true
        teamRole:
          nullable: true
          "$ref": "#/components/schemas/TeamRolePubDto"
    PagedResultDtoOfTransponderDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfTransponderDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfTransponderDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TransponderDto"
    TransponderDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          number:
            type: string
            nullable: true
          transponderTypeId:
            type: integer
            format: int32
          transponderTypeName:
            type: string
            nullable: true
          personId:
            type: string
            format: guid
    TransponderTypeDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          containerId:
            type: integer
            format: int32
          description:
            type: string
            nullable: true
          position:
            type: integer
            format: int32
          isVisible:
            type: boolean
          useMyLapsChipsValidation:
            type: boolean
    PagedResultDtoOfWebPageSearchResultDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfWebPageSearchResultDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfWebPageSearchResultDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WebPageSearchResultDto"
    WebPageSearchResultDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          url:
            type: string
            nullable: true
          highlightText:
            type: string
            nullable: true
    BillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        discriminator:
          propertyName: discriminator
          mapping:
            PlanAssignmentBillingItemDto: "#/components/schemas/PlanAssignmentBillingItemDto"
            TransferFeeBillingItemDto: "#/components/schemas/TransferFeeBillingItemDto"
            AdministrationCostBillingItemDto: "#/components/schemas/AdministrationCostBillingItemDto"
            DiscountBillingItemDto: "#/components/schemas/DiscountBillingItemDto"
            MatchLicenseBillingItemDto: "#/components/schemas/MatchLicenseBillingItemDto"
            MembershipBillingItemDto: "#/components/schemas/MembershipBillingItemDto"
            PlayerLicenseBillingItemDto: "#/components/schemas/PlayerLicenseBillingItemDto"
            RegistrationFeeBillingItemDto: "#/components/schemas/RegistrationFeeBillingItemDto"
            RemittanceFeeBillingItemDto: "#/components/schemas/RemittanceFeeBillingItemDto"
            RentalBillingItemDto: "#/components/schemas/RentalBillingItemDto"
            SubscriptionBillingItemDto: "#/components/schemas/SubscriptionBillingItemDto"
            OrganisationBillingItemDto: "#/components/schemas/OrganisationBillingItemDto"
            AdministrationCostOrganisationBillingItemDto: "#/components/schemas/AdministrationCostOrganisationBillingItemDto"
            DiscountOrganisationBillingItemDto: "#/components/schemas/DiscountOrganisationBillingItemDto"
            MembershipOrganisationBillingItemDto: "#/components/schemas/MembershipOrganisationBillingItemDto"
            RegistrationFeeOrganisationBillingItemDto: "#/components/schemas/RegistrationFeeOrganisationBillingItemDto"
            RemittanceFeeOrganisationBillingItemDto: "#/components/schemas/RemittanceFeeOrganisationBillingItemDto"
        x-abstract: true
        additionalProperties: false
        required:
        - discriminator
        properties:
          discriminator:
            type: string
            nullable: true
          Amount:
            type: number
            format: decimal
          GeneralLedgerCode:
            type: string
            nullable: true
          CostCenterCode:
            type: string
            nullable: true
          ProjectCode:
            type: string
            nullable: true
          VatCode:
            type: string
            nullable: true
          StartDate:
            type: string
            format: date-time
          InsertedAt:
            type: string
            format: date-time
          IsPaid:
            type: boolean
          InvoiceId:
            type: string
            format: guid
            nullable: true
          OrganisationId:
            type: string
            format: guid
            nullable: true
          Organisation:
            nullable: true
            "$ref": "#/components/schemas/BillingItemOrganisationDto"
    BillingItemOrganisationDto:
      type: object
      additionalProperties: false
      properties:
        Id:
          type: string
          format: guid
        Name:
          type: string
          nullable: true
        Code:
          type: string
          nullable: true
        DontInvoiceClub:
          type: boolean
    TransferFeeBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/PlanAssignmentBillingItemDto"
      - type: object
        additionalProperties: false
    PlanAssignmentBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/BillingItemDto"
      - type: object
        additionalProperties: false
        properties:
          Person:
            nullable: true
            "$ref": "#/components/schemas/BillingItemPersonDto"
          PlanId:
            type: integer
            format: int32
          PlanName:
            type: string
            nullable: true
          PlanCode:
            type: string
            nullable: true
          PlanCategoryTypeCode:
            type: string
            nullable: true
          PlanAssignmentId:
            type: integer
            format: int32
          PlanAssignmentStartDate:
            type: string
            format: date-time
          PlanAssignmentEndDate:
            type: string
            format: date-time
          BillingItemId:
            type: string
            format: guid
    BillingItemPersonDto:
      type: object
      additionalProperties: false
      properties:
        Id:
          type: string
          format: guid
        FullName:
          type: string
          nullable: true
        LastName:
          type: string
          nullable: true
        FederationMembershipIdentifier:
          type: string
          nullable: true
        ClubMembershipIdentifier:
          type: string
          nullable: true
        InvoiceSplitCode:
          type: string
          nullable: true
        IsMembershipPaidByExternalOrganisation:
          type: boolean
        MembershipPaidByExternalOrganisationId:
          type: string
          format: guid
          nullable: true
        MembershipPaidByExternalOrganisationDescription:
          type: string
          nullable: true
    AdministrationCostBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/PlanAssignmentBillingItemDto"
      - type: object
        additionalProperties: false
    DiscountBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/PlanAssignmentBillingItemDto"
      - type: object
        additionalProperties: false
    MatchLicenseBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/PlanAssignmentBillingItemDto"
      - type: object
        additionalProperties: false
    MembershipBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/PlanAssignmentBillingItemDto"
      - type: object
        additionalProperties: false
    PlayerLicenseBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/BillingItemDto"
      - type: object
        additionalProperties: false
        properties:
          Person:
            nullable: true
            "$ref": "#/components/schemas/BillingItemPersonDto"
          BillingItemId:
            type: string
            format: guid
          PlayerLicenseId:
            type: integer
            format: int32
          PlayerLicenseTypeId:
            type: integer
            format: int32
          PlayerLicenseTypeName:
            type: string
            nullable: true
          PlayerLicenseStartDate:
            type: string
            format: date-time
          PlayerLicenseEndDate:
            type: string
            format: date-time
            nullable: true
    RegistrationFeeBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/PlanAssignmentBillingItemDto"
      - type: object
        additionalProperties: false
    RemittanceFeeBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/PlanAssignmentBillingItemDto"
      - type: object
        additionalProperties: false
    RentalBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/BillingItemDto"
      - type: object
        additionalProperties: false
        properties:
          Person:
            nullable: true
            "$ref": "#/components/schemas/BillingItemPersonDto"
          BillingItemId:
            type: string
            format: guid
          RentalId:
            type: integer
            format: int32
          InventoryItemId:
            type: integer
            format: int32
          InventoryItemName:
            type: string
            nullable: true
          RentalStartDate:
            type: string
            format: date-time
          RentalEndDate:
            type: string
            format: date-time
    SubscriptionBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/BillingItemDto"
      - type: object
        additionalProperties: false
        properties:
          ServiceId:
            type: integer
            format: int32
          ServiceName:
            type: string
            nullable: true
          ServiceCode:
            type: string
            nullable: true
          SubscriptionId:
            type: integer
            format: int32
          SubscriptionStartDate:
            type: string
            format: date-time
          SubscriptionEndDate:
            type: string
            format: date-time
          Person:
            nullable: true
            "$ref": "#/components/schemas/BillingItemPersonDto"
          BillingItemId:
            type: string
            format: guid
    AdministrationCostOrganisationBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/OrganisationBillingItemDto"
      - type: object
        additionalProperties: false
    OrganisationBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/BillingItemDto"
      - type: object
        additionalProperties: false
        properties:
          OrganisationPlanAssignment:
            nullable: true
            "$ref": "#/components/schemas/OrganisationPlanAssignmentDto"
          OrganisationPlanAssignmentId:
            type: integer
            format: int32
    OrganisationPlanAssignmentDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          cancellationDate:
            type: string
            format: date-time
            nullable: true
          cancellationReceivedDate:
            type: string
            format: date-time
            nullable: true
          registrationFee:
            type: boolean
          notInvoicedReason:
            type: string
            nullable: true
          organisationId:
            type: string
            format: guid
          organisationPlanId:
            type: integer
            format: int32
          organisationPlanName:
            type: string
            nullable: true
    DiscountOrganisationBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/OrganisationBillingItemDto"
      - type: object
        additionalProperties: false
    MembershipOrganisationBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/OrganisationBillingItemDto"
      - type: object
        additionalProperties: false
    RegistrationFeeOrganisationBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/OrganisationBillingItemDto"
      - type: object
        additionalProperties: false
    RemittanceFeeOrganisationBillingItemDto:
      allOf:
      - "$ref": "#/components/schemas/OrganisationBillingItemDto"
      - type: object
        additionalProperties: false
    RegisterInvoiceForBillingItemInput:
      type: object
      additionalProperties: false
      properties:
        InvoiceId:
          type: string
          format: guid
        BillingItemIds:
          type: array
          nullable: true
          items:
            type: string
            format: guid
    UnregisterInvoiceForBillingItemInput:
      type: object
      additionalProperties: false
      properties:
        InvoiceId:
          type: string
          format: guid
    PagedClubsOPS:
      type: object
      additionalProperties: false
      properties:
        page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo"
        clubs:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedClubOPS"
    WrappedClubOPS:
      type: object
      additionalProperties: false
      properties:
        club:
          nullable: true
          "$ref": "#/components/schemas/ClubOPS"
    ClubOPS:
      allOf:
      - "$ref": "#/components/schemas/Club"
      - type: object
        additionalProperties: false
        properties:
          federation_club_code:
            type: string
            nullable: true
    WrappedEmailTemplatesOPS:
      type: object
      additionalProperties: false
      properties:
        email_templates:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/EmailTemplateOPS"
    EmailTemplateOPS:
      type: object
      additionalProperties: false
      properties:
        guid:
          type: string
          format: guid
        federation_id:
          type: integer
          format: int32
          nullable: true
        club_id:
          type: integer
          format: int32
          nullable: true
        system_action_id:
          type: integer
          format: int32
          nullable: true
        is_master:
          type: boolean
        name:
          type: string
          nullable: true
        master_id:
          type: integer
          format: int32
          nullable: true
        group_code:
          type: string
          nullable: true
        mail_code:
          type: string
          nullable: true
        translations:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/EmailTemplateTranslationOPS"
    EmailTemplateTranslationOPS:
      type: object
      additionalProperties: false
      properties:
        subject:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        language_id:
          type: integer
          format: int32
          nullable: true
    EmailTemplateAdd:
      allOf:
      - "$ref": "#/components/schemas/EmailTemplate"
      - type: object
        additionalProperties: false
        properties:
          system_action:
            type: string
            nullable: true
    EmailTemplate:
      allOf:
      - "$ref": "#/components/schemas/BaseRequest"
      - type: object
        additionalProperties: false
        properties:
          is_master:
            type: boolean
          name:
            type: string
            nullable: true
          translations:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/Translation"
    Translation:
      type: object
      additionalProperties: false
      properties:
        language:
          type: string
          nullable: true
        subject:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
    BaseRequest:
      type: object
      additionalProperties: false
    EmailTemplateUpdate:
      allOf:
      - "$ref": "#/components/schemas/EmailTemplate"
      - type: object
        additionalProperties: false
        properties:
          id:
            type: integer
            format: int32
    EmailSendRequest:
      type: object
      additionalProperties: false
      properties:
        system_action:
          type: string
          nullable: true
        guid:
          type: string
          format: guid
          nullable: true
        mail_code:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        recipients:
          type: array
          nullable: true
          items:
            type: string
        recipients_guid:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        federation_membership_identifiers:
          type: array
          nullable: true
          items:
            type: string
        bcc:
          type: array
          nullable: true
          items:
            type: string
        cc:
          type: array
          nullable: true
          items:
            type: string
        macros:
          type: object
          nullable: true
          additionalProperties:
            type: string
        liquid_body:
          type: string
          nullable: true
        attachments:
          type: object
          nullable: true
          additionalProperties:
            type: string
        sender_email:
          type: string
          nullable: true
        sender_name:
          type: string
          nullable: true
        reply_to:
          type: string
          nullable: true
        subject:
          type: string
          nullable: true
    OpsMailNotificationDto:
      type: object
      additionalProperties: false
      properties:
        subject:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        replyTo:
          type: string
          nullable: true
        sender:
          nullable: true
          "$ref": "#/components/schemas/EmailAddressDetails"
        recipientEmails:
          type: array
          nullable: true
          items:
            type: string
        personIds:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        cc:
          type: array
          nullable: true
          items:
            type: string
        bcc:
          type: array
          nullable: true
          items:
            type: string
        attachments:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/MailNotificationAttachmentDto"
    EmailAddressDetails:
      type: object
      additionalProperties: false
      properties:
        address:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    MailNotificationAttachmentDto:
      type: object
      additionalProperties: false
      properties:
        fileName:
          type: string
          nullable: true
        fileData:
          type: string
          nullable: true
    PagedClubMembersOPS:
      type: object
      additionalProperties: false
      properties:
        page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo"
        club_members:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/MemberDetailsOPS"
    MemberDetailsOPS:
      allOf:
      - "$ref": "#/components/schemas/BasicMemberDetailsOPS"
      - type: object
        additionalProperties: false
        properties:
          member_id:
            type: string
            nullable: true
          organisation_id:
            type: string
            format: guid
          plan_assignments:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PlanAssignment"
          tags:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/Tag2"
          organisation:
            nullable: true
            "$ref": "#/components/schemas/BasicOrganisationDto"
          external_system_links:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/ExternalSystemLinkOpsDto"
    PlanAssignment:
      allOf:
      - "$ref": "#/components/schemas/PlanAssignmentBase"
      - type: object
        additionalProperties: false
        properties:
          assignment_id:
            type: integer
            format: int32
    PlanAssignmentBase:
      type: object
      additionalProperties: false
      properties:
        plan:
          nullable: true
          "$ref": "#/components/schemas/Plan"
        start_date:
          type: string
          format: date-time
        original_start_date:
          type: string
          format: date-time
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
        inserted_at:
          type: string
          format: date-time
        parent_person_id:
          type: string
          format: guid
          nullable: true
        registration_fee:
          type: boolean
        transfer_fee:
          type: boolean
        change_reason_code:
          type: string
          nullable: true
        cancellation_reason_id:
          type: integer
          format: int32
          nullable: true
        cancellation_date:
          type: string
          format: date-time
          nullable: true
        cancellation_received_date:
          type: string
          format: date-time
          nullable: true
        organisation_name:
          type: string
          nullable: true
    Plan:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        club_member:
          type: boolean
        federation_member:
          type: boolean
        is_active:
          type: boolean
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        reference_date:
          type: string
          format: date-time
          nullable: true
        price:
          type: number
          format: decimal
        registration_fee:
          type: number
          format: decimal
        is_visible_for_club:
          type: boolean
        is_family_member_plan:
          type: boolean
        plan_code:
          type: string
          nullable: true
        category_type_code:
          type: string
          nullable: true
        from_age:
          type: integer
          format: byte
          nullable: true
        to_age:
          type: integer
          format: byte
          nullable: true
        cost_center_code:
          type: string
          nullable: true
        general_ledger_code:
          type: string
          nullable: true
        gender:
          nullable: true
          "$ref": "#/components/schemas/Gender"
        is_match_license:
          type: boolean
        match_license_amount:
          type: number
          format: decimal
        match_license_general_ledger_code:
          type: string
          nullable: true
        registration_fee_general_ledger_code:
          type: string
          nullable: true
        transfer_fee_general_ledger_code:
          type: string
          nullable: true
        discount_fee_general_ledger_code:
          type: string
          nullable: true
        remittance_fee_general_ledger_code:
          type: string
          nullable: true
        transfer_fee:
          type: number
          format: decimal
        discount_fee:
          type: number
          format: decimal
        project_code:
          type: string
          nullable: true
        federation_id:
          type: string
          format: guid
          nullable: true
    Tag2:
      allOf:
      - "$ref": "#/components/schemas/BaseRequest"
      - type: object
        additionalProperties: false
        properties:
          id:
            type: integer
            format: int32
          name:
            type: string
            nullable: true
          code:
            type: string
            nullable: true
          group:
            type: string
            nullable: true
          groupCode:
            type: string
            nullable: true
          color:
            type: string
            nullable: true
          type:
            type: string
            nullable: true
          hideFromApp:
            type: boolean
    BasicOrganisationDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        type:
          deprecated: true
          x-deprecatedMessage: Temporary field to support finance module
          "$ref": "#/components/schemas/OrganisationSubType"
        parent_organisation_id:
          type: string
          format: guid
          nullable: true
    OrganisationSubType:
      type: string
      description: ''
      x-enumNames:
      - Federation
      - Club
      - ExternalOrganisation
      enum:
      - Federation
      - Club
      - ExternalOrganisation
    ExternalSystemLinkOpsDto:
      type: object
      additionalProperties: false
      properties:
        external_system_id:
          type: integer
          format: int32
        identifier:
          type: string
          nullable: true
        extra_information:
          type: string
          nullable: true
    BasicMemberDetailsOPS:
      allOf:
      - "$ref": "#/components/schemas/MemberDetails"
      - type: object
        additionalProperties: false
        properties:
          is_club_member:
            type: boolean
          is_federation_member:
            type: boolean
          family_number:
            type: integer
            format: int32
            nullable: true
          email:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/EmailOPS"
          phone:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PhoneOPS"
          address:
            nullable: true
            "$ref": "#/components/schemas/Address"
          foys_member_login:
            type: string
            nullable: true
          deceased_date:
            type: string
            format: date-time
            nullable: true
          debt_collection:
            type: boolean
          bank_account_name:
            type: string
            nullable: true
          IBAN:
            type: string
            nullable: true
          BIC:
            type: string
            nullable: true
          mandate_id:
            type: string
            nullable: true
          mandate_date:
            type: string
            format: date-time
            nullable: true
          debt_collection_terms:
            type: integer
            format: int32
            nullable: true
          invoice_delivery_method:
            "$ref": "#/components/schemas/InvoiceDeliveryMethod2"
          AED:
            type: boolean
          GDPR_consent:
            type: boolean
          GDPR_consent_date:
            type: string
            format: date-time
            nullable: true
          certificate_of_conduct:
            type: boolean
          certificate_of_conduct_date:
            type: string
            format: date-time
            nullable: true
          photo_check:
            type: boolean
          photo_uploaded_at:
            type: string
            format: date-time
            nullable: true
          photo_valid_until:
            type: string
            format: date-time
            nullable: true
          place_of_birth:
            type: string
            nullable: true
          asset_url:
            type: string
            nullable: true
    EmailOPS:
      allOf:
      - "$ref": "#/components/schemas/Email"
      - type: object
        additionalProperties: false
        properties:
          is_secret:
            type: boolean
          is_confirmed:
            type: boolean
          type:
            "$ref": "#/components/schemas/EmailType2"
    EmailType2:
      type: integer
      description: ''
      x-enumNames:
      - General
      - Invoice
      enum:
      - 0
      - 1
    Email:
      type: object
      additionalProperties: false
      properties:
        address:
          type: string
          nullable: true
    PhoneOPS:
      allOf:
      - "$ref": "#/components/schemas/Phone"
      - type: object
        additionalProperties: false
        properties:
          is_secret:
            type: boolean
          type:
            "$ref": "#/components/schemas/PhoneType"
    Phone:
      type: object
      additionalProperties: false
      properties:
        number:
          type: string
          nullable: true
        country_name:
          type: string
          nullable: true
        country_code:
          type: string
          nullable: true
    InvoiceDeliveryMethod2:
      type: integer
      description: ''
      x-enumNames:
      - ByEmail
      - ByLetter
      enum:
      - 0
      - 1
    MemberDetails:
      allOf:
      - "$ref": "#/components/schemas/BasicMemberDetails"
      - type: object
        additionalProperties: false
        properties:
          nationality_country_code:
            type: string
            nullable: true
          email:
            nullable: true
            "$ref": "#/components/schemas/Email"
          member_since:
            type: string
            format: date-time
            nullable: true
          member_till:
            type: string
            format: date-time
            nullable: true
    BasicMemberDetails:
      type: object
      additionalProperties: false
      properties:
        name_prefix:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
        name_infix:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        gender:
          nullable: true
          "$ref": "#/components/schemas/Gender"
        date_of_birth:
          type: string
          format: date-time
          nullable: true
        club_membership_identifier:
          type: string
          nullable: true
        federation_membership_identifier:
          type: string
          nullable: true
        foys_member_login:
          type: string
          nullable: true
    PersonDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          firstName:
            type: string
            nullable: true
          lastName:
            type: string
            nullable: true
          prefix:
            type: string
            nullable: true
          infix:
            type: string
            nullable: true
          initials:
            type: string
            nullable: true
          gender:
            nullable: true
            "$ref": "#/components/schemas/Gender"
          genderForMatches:
            nullable: true
            "$ref": "#/components/schemas/GenderForMatches"
          birthdate:
            type: string
            format: date-time
            nullable: true
          deceasedDate:
            type: string
            format: date-time
            nullable: true
          phoneNumber:
            type: string
            nullable: true
          mobileNumber:
            type: string
            nullable: true
          emailAddress:
            type: string
            nullable: true
          parentPersonId:
            type: integer
            format: int32
            nullable: true
          nationality_country_code:
            type: string
            nullable: true
          guid:
            type: string
            format: guid
          federationMembershipIdentifier:
            type: string
            nullable: true
          federationMembershipIdentifierHash:
            type: string
            nullable: true
          clubMembershipIdentifier:
            type: string
            nullable: true
          isClubMember:
            type: boolean
          isFederationMember:
            type: boolean
          isBlocked:
            type: boolean
          certificateOfConductDate:
            type: string
            format: date-time
            nullable: true
          certificateOfConductEndDate:
            type: string
            format: date-time
            nullable: true
          injuries:
            type: string
            nullable: true
          notes:
            type: string
            nullable: true
          nationalityName:
            type: string
            nullable: true
          nationalityCountryId:
            type: integer
            format: int32
            nullable: true
          nationalityVerified:
            type: boolean
            nullable: true
          nationalityVerifiedDate:
            type: string
            format: date-time
            nullable: true
          familyNumber:
            type: integer
            format: int32
            nullable: true
          countryOfBirth:
            type: string
            nullable: true
          countryOfBirthId:
            type: integer
            nullable: true
          placeOfBirth:
            type: string
            nullable: true
          certificateOfConduct:
            type: boolean
            nullable: true
          automatedExternalDefibrilator:
            type: boolean
            nullable: true
          gdprConsent:
            type: boolean
            nullable: true
          externalSystemId:
            type: string
            nullable: true
          gdprConsentDate:
            type: string
            format: date-time
            nullable: true
          photoCheck:
            type: boolean
            nullable: true
          photoCheckedOn:
            type: string
            format: date-time
            nullable: true
          photoValidUntil:
            type: string
            format: date-time
            nullable: true
          tenantId:
            type: string
            format: guid
            nullable: true
          organisationId:
            type: string
            format: guid
            nullable: true
          fullName:
            type: string
            nullable: true
          address:
            nullable: true
            "$ref": "#/components/schemas/AddressInfoDto"
          organisation:
            nullable: true
            "$ref": "#/components/schemas/BasicOrganisationDto"
          plans:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PlanAssignmentDto"
          tags:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PersonTagDto"
          marketingInfo:
            nullable: true
            "$ref": "#/components/schemas/MarketingInfoDto"
          excludedFromDutyPerSeason:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/DutyExcludedMemberDto"
          dutyPoints:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/DutyPointDto"
          userId:
            type: string
            nullable: true
          memberSince:
            type: string
            format: date-time
            nullable: true
          registrationStatus:
            "$ref": "#/components/schemas/RegistrationStatus2"
          committees:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/CommitteeDto"
          languageCode:
            type: string
            nullable: true
    PlanAssignmentDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          planId:
            type: integer
            format: int32
          planName:
            type: string
            nullable: true
          parentPersonId:
            type: integer
            format: int32
            nullable: true
          parentPersonName:
            type: string
            nullable: true
          parentPersonGuid:
            type: string
            format: guid
            nullable: true
          plan:
            nullable: true
            "$ref": "#/components/schemas/PlanDto"
          personId:
            type: integer
            format: int32
          personGuid:
            type: string
            format: guid
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
            nullable: true
          cancellationDate:
            type: string
            format: date-time
            nullable: true
          cancellationReceivedDate:
            type: string
            format: date-time
            nullable: true
          cancellationReasonId:
            type: integer
            format: int32
            nullable: true
          cancellationReasonName:
            type: string
            nullable: true
          registrationFee:
            type: boolean
          transferFee:
            type: boolean
          notInvoicedReason:
            nullable: true
            "$ref": "#/components/schemas/NotInvoicedReasons"
          changeReasonCode:
            type: string
            nullable: true
          linkedPlanAssignmentId:
            type: integer
            format: int32
            nullable: true
          tenantType:
            nullable: true
            "$ref": "#/components/schemas/TenantType"
          organisationName:
            type: string
            nullable: true
          planOrganisationId:
            type: string
            format: guid
          organisationId:
            type: string
            format: guid
          insertedAt:
            type: string
            format: date-time
          updatedAt:
            type: string
            format: date-time
          createdByUserId:
            type: string
            nullable: true
          updatedByUserId:
            type: string
            nullable: true
          originalStartDate:
            type: string
            format: date-time
            nullable: true
    PlanDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          federationGuid:
            type: string
            format: guid
            nullable: true
          clubGuid:
            type: string
            format: guid
            nullable: true
          clubMember:
            type: boolean
          federationMember:
            type: boolean
          previousPlanId:
            type: integer
            format: int32
            nullable: true
          administrationFeeGeneralLedgerCode:
            type: string
            nullable: true
          fromAge:
            type: integer
            format: byte
            nullable: true
          toAge:
            type: integer
            format: byte
            nullable: true
          continuing:
            type: boolean
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          referenceDate:
            type: string
            format: date-time
            nullable: true
          planCode:
            type: string
            nullable: true
          prolongToOtherPlanCode:
            type: string
            nullable: true
          proportionalPayment:
            "$ref": "#/components/schemas/ProportionalPayment"
          priceTableId:
            type: string
            format: guid
            nullable: true
          price:
            type: number
            format: decimal
          registrationFee:
            type: number
            format: decimal
          registrationFeeDescription:
            type: string
            nullable: true
          isVisibleForClub:
            type: boolean
          isFamilyMemberPlan:
            type: boolean
          categoryTypeCode:
            type: string
            nullable: true
          costCenterCode:
            type: string
            nullable: true
          generalLedgerCode:
            type: string
            nullable: true
          extraInvoiceLineDescription:
            type: string
            nullable: true
          gender:
            nullable: true
            "$ref": "#/components/schemas/Gender"
          isMatchLicense:
            type: boolean
          matchLicenseOnlyForOneClub:
            type: boolean
          matchLicenseAmount:
            type: number
            format: decimal
          matchLicenseGeneralLedgerCode:
            type: string
            nullable: true
          transferFee:
            type: number
            format: decimal
          discountFee:
            type: number
            format: decimal
          discountFeeDescription:
            type: string
            nullable: true
          setEndDatePlanAssignmentManually:
            type: boolean
          payForFullPeriod:
            type: boolean
          payOnlyOneOfCategoryType:
            type: boolean
            nullable: true
          payOnlyOneMembership:
            type: boolean
            nullable: true
          projectCode:
            type: string
            nullable: true
          seasonId:
            type: integer
            format: int32
            nullable: true
          season:
            nullable: true
            "$ref": "#/components/schemas/SeasonDto"
          runtimePeriodType:
            "$ref": "#/components/schemas/RuntimePeriodType"
          runtimePeriodAmount:
            type: integer
            format: int32
            nullable: true
          runtimeDefinedPeriodType:
            nullable: true
            "$ref": "#/components/schemas/PeriodType"
          latestCancellationPeriodType:
            nullable: true
            "$ref": "#/components/schemas/PeriodType"
          latestCancellationPeriodAmount:
            type: integer
            format: int32
            nullable: true
          administrationFee:
            type: number
            format: decimal
            nullable: true
          registrationFeeGeneralLedgerCode:
            type: string
            nullable: true
          transferFeeGeneralLedgerCode:
            type: string
            nullable: true
          discountFeeGeneralLedgerCode:
            type: string
            nullable: true
          tenantType:
            nullable: true
            "$ref": "#/components/schemas/TenantType"
          organisationTypeIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          remittanceFees:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PlanRemittanceFeeDto"
          isActive:
            type: boolean
          trialPeriodType:
            nullable: true
            "$ref": "#/components/schemas/PeriodType"
          trialPeriodAmount:
            type: integer
            format: int32
            nullable: true
          tagId:
            type: integer
            format: int32
            nullable: true
          disableAutomaticProlongation:
            type: boolean
          startPlanAssignmentsPer:
            "$ref": "#/components/schemas/StartPlanAssignmentsPerType"
          externalId:
            type: string
            nullable: true
          emailTemplateId:
            type: integer
            format: int32
            nullable: true
    ProportionalPayment:
      type: string
      description: ''
      x-enumNames:
      - AlwaysFullAmount
      - PerMonth
      - UseTable
      enum:
      - AlwaysFullAmount
      - PerMonth
      - UseTable
    RuntimePeriodType:
      type: string
      description: ''
      x-enumNames:
      - CalendarYearly
      - DefinedPeriod
      enum:
      - CalendarYearly
      - DefinedPeriod
    PeriodType:
      type: string
      description: ''
      x-enumNames:
      - Days
      - Weeks
      - Months
      enum:
      - Days
      - Weeks
      - Months
    TenantType:
      type: string
      description: ''
      x-enumNames:
      - Federation
      - Club
      - ExternalOrganisation
      enum:
      - Federation
      - Club
      - ExternalOrganisation
    PlanRemittanceFeeDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          planId:
            type: integer
            format: int32
          description:
            type: string
            nullable: true
          generalLedgerCode:
            type: string
            nullable: true
          costCenterCode:
            type: string
            nullable: true
          vatCode:
            type: string
            nullable: true
          amount:
            type: number
            format: decimal
          payInTerms:
            type: boolean
          applyPriceTable:
            type: boolean
          priceTableId:
            type: string
            format: guid
            nullable: true
    StartPlanAssignmentsPerType:
      type: string
      description: ''
      x-enumNames:
      - GivenStartDate
      - StartOfMonth
      enum:
      - GivenStartDate
      - StartOfMonth
    NotInvoicedReasons:
      type: string
      description: ''
      x-enumNames:
      - IsPaid
      - NotLongest
      - DoubleMembership
      - NoInvoiceNeeded
      enum:
      - IsPaid
      - NotLongest
      - DoubleMembership
      - NoInvoiceNeeded
    PersonTagDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          tagId:
            type: integer
            format: int32
          tagName:
            type: string
            nullable: true
          tagCode:
            type: string
            nullable: true
          tagColor:
            type: string
            nullable: true
          isAssignableByClub:
            type: boolean
          personId:
            type: string
            format: guid
          start:
            type: string
            format: date-time
          cancellation:
            type: string
            format: date-time
            nullable: true
          externalId:
            type: string
            nullable: true
          externalType:
            type: string
            nullable: true
          tagType:
            "$ref": "#/components/schemas/TagType"
          tenantType:
            nullable: true
            "$ref": "#/components/schemas/TenantType"
          tagTenantType:
            nullable: true
            "$ref": "#/components/schemas/TenantType"
    MarketingInfoDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          wantsToReceiveEmails:
            type: boolean
          wantsToReceivePromotions:
            type: boolean
          wantsToReceiveMagazine:
            type: boolean
    DutyExcludedMemberDto:
      type: object
      additionalProperties: false
      properties:
        personId:
          type: integer
          format: int32
        personGuid:
          type: string
          format: guid
        fullName:
          type: string
          nullable: true
        federationMembershipIdentifier:
          type: string
          nullable: true
        seasonName:
          type: string
          nullable: true
        seasonId:
          type: integer
          format: int32
        excludedFromDuty:
          type: boolean
    DutyPointDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        personId:
          type: integer
          format: int32
        calendarEventAttendanceId:
          type: integer
          format: int32
          nullable: true
        dutyTitle:
          type: string
          nullable: true
        occurrenceId:
          type: string
          format: guid
        dutyPoints:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        remark:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
        fromDuty:
          type: boolean
    RegistrationStatus2:
      type: string
      description: ''
      x-enumNames:
      - Accepted
      - Pending
      enum:
      - Accepted
      - Pending
    CommitteeDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          code:
            type: string
            nullable: true
          isBoard:
            type: boolean
          organisationId:
            type: string
            format: guid
          isPubliclyVisible:
            type: boolean
          isActive:
            type: boolean
    WrappedMembersShortInfosOPS:
      type: object
      additionalProperties: false
      properties:
        members:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/MemberShortInfoOPS"
    MemberShortInfoOPS:
      type: object
      additionalProperties: false
      properties:
        member_id:
          type: string
          format: guid
        federation_membership_identifier:
          type: string
          nullable: true
        club_membership_identifier:
          type: string
          nullable: true
        full_name:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        name_infix:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile_phone:
          type: string
          nullable: true
        club_name:
          type: string
          nullable: true
        club_code:
          type: string
          nullable: true
        address:
          nullable: true
          "$ref": "#/components/schemas/Address"
        birthdate:
          type: string
          format: date-time
        asset_url:
          type: string
          nullable: true
        external_system_links:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ExternalSystemLinkOps"
    ExternalSystemLinkOps:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
    WrappedMemberDetailsOPS:
      allOf:
      - "$ref": "#/components/schemas/WrappedMemberDetails"
      - type: object
        additionalProperties: false
        properties:
          member:
            nullable: true
            "$ref": "#/components/schemas/MemberDetailsOPS"
    WrappedMemberDetails:
      type: object
      additionalProperties: false
    PagedResultDtoOfOpsPersonLookupDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOpsPersonLookupDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOpsPersonLookupDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsPersonLookupDto"
    OpsPersonLookupDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        fullName:
          type: string
          nullable: true
        federationMembershipIdentifier:
          type: string
          nullable: true
    WrappedMemberWithPlanAssignmentOps:
      allOf:
      - "$ref": "#/components/schemas/WrappedMemberDetails"
      - type: object
        additionalProperties: false
        properties:
          member:
            nullable: true
            "$ref": "#/components/schemas/MemberDetailsWithPlanAssignmentOPS"
    MemberDetailsWithPlanAssignmentOPS:
      allOf:
      - "$ref": "#/components/schemas/BasicMemberDetailsOPS"
      - type: object
        additionalProperties: false
        properties:
          member_id:
            type: string
            nullable: true
          club_id:
            type: string
            nullable: true
          password:
            type: string
            nullable: true
          plan_assignment:
            nullable: true
            "$ref": "#/components/schemas/PlanAssignment2"
          tag_codes:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/TagCodeOPS"
          external_system_links:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/ExternalSystemLinkOpsDto"
    PlanAssignment2:
      type: object
      additionalProperties: false
      properties:
        plan_id:
          type: integer
          format: int32
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
          nullable: true
        inserted_at:
          type: string
          format: date-time
          nullable: true
        parent_person_id:
          type: string
          format: guid
          nullable: true
        registration_fee:
          type: boolean
        transfer_fee:
          type: boolean
    TagCodeOPS:
      type: object
      additionalProperties: false
      properties:
        tag_code:
          type: string
          nullable: true
    WrappedFamily:
      allOf:
      - "$ref": "#/components/schemas/FamilyMemberOPS"
      - type: object
        additionalProperties: false
        properties:
          address:
            nullable: true
            "$ref": "#/components/schemas/FamilyAddress"
          family:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FamilyMemberOPS"
          plans:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FamilyPlanAssignment"
          tags:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/TagAssignment"
          signedUpByFederationMembershipIdentifier:
            type: string
            nullable: true
    FamilyAddress:
      type: object
      additionalProperties: false
      properties:
        streetname:
          type: string
          nullable: true
        housenumber:
          type: string
          nullable: true
        housenumberAddition:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
    FamilyMemberOPS:
      allOf:
      - "$ref": "#/components/schemas/BasicMemberDetails"
      - type: object
        additionalProperties: false
        properties:
          customerID:
            type: integer
            format: int32
          firstname:
            type: string
            nullable: true
          lastname:
            type: string
            nullable: true
          prefix:
            type: string
            nullable: true
          birthdate:
            type: string
            format: date-time
            nullable: true
          phoneNumber:
            type: string
            nullable: true
          mobileNumber:
            type: string
            nullable: true
          emailAddress:
            type: string
            nullable: true
          marketing_emails_enabled:
            type: boolean
          marketing_promotions_enabled:
            type: boolean
    FamilyPlanAssignment:
      type: object
      additionalProperties: false
      properties:
        customerID:
          type: integer
          format: int32
        planCode:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
    TagAssignment:
      allOf:
      - "$ref": "#/components/schemas/TagCodeOPS"
      - type: object
        additionalProperties: false
        properties:
          customerID:
            type: integer
            format: int32
    WrappedBasicMemberDetailsOPS:
      type: object
      additionalProperties: false
      properties:
        member:
          nullable: true
          "$ref": "#/components/schemas/BasicMemberDetailsOPS"
    PagedOrganisationsOPS:
      type: object
      additionalProperties: false
      properties:
        Page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo"
        organisations:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OrganisationOpsDto"
    OrganisationOpsDto:
      type: object
      discriminator:
        propertyName: discriminator
        mapping:
          ExternalOrganisationOpsDto: "#/components/schemas/ExternalOrganisationOpsDto"
          FederationOpsDto: "#/components/schemas/FederationOpsDto"
          ClubOpsDto: "#/components/schemas/ClubOpsDto"
      x-abstract: true
      additionalProperties: false
      required:
      - discriminator
      properties:
        id:
          type: string
          format: guid
        parentOrganisationId:
          type: string
          format: guid
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        billing_info:
          nullable: true
          "$ref": "#/components/schemas/BillingInfo"
        address:
          nullable: true
          "$ref": "#/components/schemas/Address"
        emails:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/EmailOPS"
        phones:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PhoneOPS"
        links:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/LinkOPS"
        organisation_type_name:
          type: string
          nullable: true
        discriminator:
          type: string
    BillingInfo:
      type: object
      additionalProperties: false
      properties:
        debt_collection:
          type: boolean
        bank_account_name:
          type: string
          nullable: true
        IBAN:
          type: string
          nullable: true
        BIC:
          type: string
          nullable: true
        mandate_id:
          type: string
          nullable: true
        mandate_date:
          type: string
          format: date-time
          nullable: true
        mandate_end_date:
          type: string
          format: date-time
          nullable: true
        debt_collection_terms:
          type: integer
          format: int32
          nullable: true
        dont_invoice_memberships:
          type: boolean
        start_financial_year:
          type: string
          format: date-time
          nullable: true
        invoice_delivery_method:
          "$ref": "#/components/schemas/InvoiceDeliveryMethod2"
    LinkOPS:
      allOf:
      - "$ref": "#/components/schemas/Link"
      - type: object
        additionalProperties: false
    Link:
      type: object
      additionalProperties: false
      properties:
        address:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        is_secret:
          type: boolean
        service_type:
          type: string
          nullable: true
    ExternalOrganisationOpsDto:
      allOf:
      - "$ref": "#/components/schemas/OrganisationOpsDto"
      - type: object
        additionalProperties: false
    FederationOpsDto:
      allOf:
      - "$ref": "#/components/schemas/OrganisationOpsDto"
      - type: object
        additionalProperties: false
    ClubOpsDto:
      allOf:
      - "$ref": "#/components/schemas/OrganisationOpsDto"
      - type: object
        additionalProperties: false
    TenantType2:
      type: integer
      description: ''
      x-enumNames:
      - Federation
      - Club
      - ExternalOrganisation
      enum:
      - 0
      - 1
      - 2
    PagedResultDtoOfOrganisationDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOrganisationDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOrganisationDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OrganisationDto"
    OrganisationDto:
      allOf:
      - "$ref": "#/components/schemas/ContainerResourceDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          parentOrganisationId:
            type: string
            format: guid
            nullable: true
    ContainerResourceDtoOfGuid:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          containerId:
            type: integer
            format: int32
    LocationDtoExtended:
      allOf:
      - "$ref": "#/components/schemas/LocationDto"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          emails:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/EmailDto"
          phones:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PhoneDto"
          links:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/LinkDto"
    LinkDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          typeId:
            type: integer
          type:
            type: string
            nullable: true
          address:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
    LocationDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          locationTypeId:
            type: integer
            format: int32
          marketingInterestId:
            type: integer
            format: int32
            nullable: true
          isMainLocationType:
            type: boolean
          locationTypeName:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          addressInfo:
            nullable: true
            "$ref": "#/components/schemas/AddressInfoDto"
          organisationId:
            type: string
            format: guid
          overrideLatLng:
            type: boolean
          facilityIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    WrappedAutocompleteResponse:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/BaseAutocompleteResponse"
    BaseAutocompleteResponse:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
    OrganisationStatus:
      type: string
      description: ''
      x-enumNames:
      - Pending
      - Active
      - Inactive
      enum:
      - Pending
      - Active
      - Inactive
    FbPermissionCreateDto:
      type: object
      additionalProperties: false
      properties:
        module_name:
          type: string
          nullable: true
        permissions:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FbPermissionDetailDto"
    FbPermissionDetailDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        group:
          type: string
          nullable: true
    OpsApplicationModuleDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        guid:
          type: string
          format: guid
        moduleName:
          type: string
          nullable: true
        permissions:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsPermissionDto"
        insertedAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
    OpsPermissionDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        groupName:
          type: string
          nullable: true
    WrappedSystemRolesOPS:
      type: object
      additionalProperties: false
      properties:
        system_roles:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsSystemRoleDto"
    OpsSystemRoleDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        system_role_name:
          type: string
          nullable: true
        system_role_code:
          type: string
          nullable: true
        federation_id:
          type: string
          nullable: true
        service_permissions:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsPermissionDto2"
        permissions:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsPermissionDto2"
    OpsPermissionDto2:
      type: object
      additionalProperties: false
      properties:
        permission_key:
          type: string
          nullable: true
        level:
          type: string
          nullable: true
    WrappedPlanAssignments:
      type: object
      additionalProperties: false
      properties:
        assignments:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PlanAssignment"
    WrappedPlanAssignment:
      type: object
      additionalProperties: false
      properties:
        plan_assignment:
          nullable: true
          "$ref": "#/components/schemas/PlanAssignment3"
    PlanAssignment3:
      type: object
      additionalProperties: false
      properties:
        plan_id:
          type: integer
          format: int32
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
          nullable: true
        parent_person_id:
          type: string
          format: guid
          nullable: true
        registration_fee:
          type: boolean
        transfer_fee:
          type: boolean
        change_reason_code:
          type: string
          nullable: true
    PlanAssignmentUpdate:
      type: object
      additionalProperties: false
      properties:
        cancellation_date:
          type: string
          format: date-time
          nullable: true
        cancellation_received_date:
          type: string
          format: date-time
          nullable: true
        cancellation_reason_id:
          type: integer
          format: int32
          nullable: true
        start_date:
          type: string
          format: date-time
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
        parent_person_id:
          type: string
          format: guid
          nullable: true
        registration_fee:
          type: boolean
        transfer_fee:
          type: boolean
        change_reason_code:
          type: string
          nullable: true
    WrappedPlanCancellationReasons:
      type: object
      additionalProperties: false
      properties:
        cancellation_reasons:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PlanCancellationReason"
    PlanCancellationReason:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
    WrappedPlans:
      type: object
      additionalProperties: false
      properties:
        plans:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/Plan"
    OpsPlanPriceDto:
      type: object
      additionalProperties: false
      properties:
        price:
          type: number
          format: decimal
    PushNotificationRequest:
      type: object
      additionalProperties: false
      properties:
        text:
          type: string
          nullable: true
        targetId:
          type: string
          nullable: true
        person_ids:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        macros:
          type: object
          nullable: true
          additionalProperties:
            type: string
    OpsCreateSystemSettingDto:
      type: object
      additionalProperties: false
      properties:
        key:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        system:
          type: string
          nullable: true
        module:
          type: string
          nullable: true
        default_value:
          type: string
          nullable: true
        is_visible_for_ui:
          type: boolean
          nullable: true
        type:
          type: string
          nullable: true
    TagAdd:
      allOf:
      - "$ref": "#/components/schemas/TagBase"
      - type: object
        additionalProperties: false
    PagedTags:
      type: object
      additionalProperties: false
      properties:
        Page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo"
        tags:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedTag"
    WrappedTag:
      type: object
      additionalProperties: false
      properties:
        tag:
          nullable: true
          "$ref": "#/components/schemas/Tag"
    TagUpdate:
      allOf:
      - "$ref": "#/components/schemas/TagBase"
      - type: object
        additionalProperties: false
    TeamMembersList:
      type: object
      additionalProperties: false
      properties:
        members:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TeamMember"
    TeamMember:
      type: object
      additionalProperties: false
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
          nullable: true
        team_id:
          type: string
          format: guid
        team_name:
          type: string
          nullable: true
        club_id:
          type: string
          format: guid
        club_name:
          type: string
          nullable: true
        team_role:
          type: string
          nullable: true
        is_player:
          type: boolean
        has_access_to_match_form:
          type: boolean
        has_player_license:
          type: boolean
        person:
          nullable: true
          "$ref": "#/components/schemas/MemberShortInfoOPS"
    PagedTeamsOPS:
      type: object
      additionalProperties: false
      properties:
        page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo"
        teams:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TeamDetailsOPS"
    TeamDetailsOPS:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        name:
          type: string
          nullable: true
        abbr_name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        organisation_id:
          type: string
          format: guid
        organisation_name:
          type: string
          nullable: true
        external_id:
          type: string
          nullable: true
        official_name:
          type: string
          nullable: true
        season_name:
          type: string
          nullable: true
        is_locked:
          type: boolean
    OpsSetTeamLockDto:
      type: object
      additionalProperties: false
      properties:
        teamGuids:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        isLocked:
          type: boolean
    UserOpsDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        nameInfix:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        organisationId:
          type: string
          format: guid
          nullable: true
    PagedResultDtoOfUserOpsDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfUserOpsDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfUserOpsDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/UserOpsDto"
    PagedResultDtoOfOpsCalendarEventDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOpsCalendarEventDetailsDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOpsCalendarEventDetailsDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsCalendarEventDetailsDto"
    OpsCalendarEventDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/OpsCalendarEventDto"
      - type: object
        additionalProperties: false
        properties:
          occurrences:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/OpsCalendarEventOccurrenceDto"
    OpsCalendarEventOccurrenceDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
    OpsCalendarEventDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          title:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          linkUrl:
            type: string
            nullable: true
          externalEventReferenceId:
            type: string
            nullable: true
          calendarItemType:
            "$ref": "#/components/schemas/CalendarItemType"
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          locationIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          tagCodes:
            type: array
            nullable: true
            items:
              type: string
          teamIds:
            type: array
            nullable: true
            items:
              type: string
              format: guid
          clubIds:
            type: array
            nullable: true
            items:
              type: string
              format: guid
          recurrenceSettings:
            nullable: true
            "$ref": "#/components/schemas/OpsRecurrenceSettingsDto"
    CalendarItemType:
      type: string
      description: ''
      x-enumNames:
      - Event
      - Training
      - Duty
      - Match
      enum:
      - Event
      - Training
      - Duty
      - Match
    OpsRecurrenceSettingsDto:
      type: object
      additionalProperties: false
      properties:
        repeatUntil:
          type: string
          format: date-time
        recurrrenceType:
          "$ref": "#/components/schemas/RecurrenceType"
        selectedDays:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/DayOfWeek"
    RecurrenceType:
      type: string
      description: ''
      x-enumNames:
      - Weekly
      - Monthly
      - SpecifiedDays
      enum:
      - Weekly
      - Monthly
      - SpecifiedDays
    DayOfWeek:
      type: integer
      description: ''
      x-enumNames:
      - Sunday
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
      - Saturday
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
    OpsSetAttendanceDto:
      type: object
      additionalProperties: false
      properties:
        personId:
          type: string
          format: guid
        calendarOccurrenceId:
          type: string
          format: guid
        attendanceType:
          "$ref": "#/components/schemas/EventAttendanceType2"
        reason:
          type: string
          nullable: true
        dutyRoleId:
          type: integer
          format: int32
          nullable: true
    EventAttendanceType2:
      type: string
      description: ''
      x-enumNames:
      - Unspecified
      - Going
      - Interested
      - NotGoing
      - Incomplete
      enum:
      - Unspecified
      - Going
      - Interested
      - NotGoing
      - Incomplete
    ExternalSystemLinkDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        externalSystem:
          nullable: true
          "$ref": "#/components/schemas/ExternalSystemDto"
        externalSystemId:
          type: integer
          format: int32
        personGuid:
          type: string
          format: guid
        identifier:
          type: string
          nullable: true
        extraInformation:
          type: string
          nullable: true
        additionalQuestionAnswers:
          type: object
          nullable: true
          additionalProperties:
            type: string
    ExternalSystemDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          extraConfiguration:
            type: string
            nullable: true
    OpsExternalSystemLinkDto:
      type: object
      additionalProperties: false
      properties:
        external_system_id:
          type: integer
          format: int32
        identifier:
          type: string
          nullable: true
        extra_information:
          type: string
          nullable: true
        additionalQuestionAnswers:
          type: object
          nullable: true
          additionalProperties:
            type: string
    EsnOpsDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        endpoint:
          type: string
          nullable: true
        apiKey:
          type: string
          nullable: true
        notificationEntities:
          type: string
          nullable: true
        processorType:
          "$ref": "#/components/schemas/EsnProcessorType"
        tenantId:
          type: string
          format: guid
        additionalConfiguration:
          type: string
          nullable: true
    EsnProcessorType:
      type: integer
      description: ''
      x-enumNames:
      - Webhook
      - ToernooiNL
      - ActiveCampaign
      - WaterSport
      enum:
      - 0
      - 1
      - 2
      - 3
    EsnProcessorType2:
      type: string
      description: ''
      x-enumNames:
      - Webhook
      - ToernooiNL
      - ActiveCampaign
      - WaterSport
      enum:
      - Webhook
      - ToernooiNL
      - ActiveCampaign
      - WaterSport
    EsnPersonDto:
      type: object
      additionalProperties: false
      properties:
        guid:
          type: string
          format: guid
        federationMembershipIdentifier:
          type: string
          nullable: true
    EsnPersonDetailsDto:
      type: object
      additionalProperties: false
      properties:
        guid:
          type: string
          nullable: true
        federationMembershipIdentifier:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        nameInfix:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        birthDate:
          type: string
          format: date-time
        gender:
          "$ref": "#/components/schemas/FbGender"
        updatedAt:
          type: string
          format: date-time
        nationalityCode:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        twoLetterCountryCode:
          type: string
          nullable: true
        active:
          type: boolean
        address:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberExtension:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
    FbGender:
      type: integer
      description: ''
      x-enumNames:
      - Male
      - Female
      - Unspecified
      enum:
      - 0
      - 1
      - 2
    EsnMembershipDetailsDto:
      type: object
      additionalProperties: false
      properties:
        planAssignmentId:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
        cancellationDate:
          type: string
          format: date-time
          nullable: true
        federationMembershipIdentifier:
          type: string
          nullable: true
        organizationExternalId:
          type: string
          nullable: true
        planExternalId:
          type: string
          nullable: true
    EsnPersonFederationRoleDto:
      type: object
      additionalProperties: false
      properties:
        start:
          type: string
          format: date-time
        cancellation:
          type: string
          format: date-time
          nullable: true
        code:
          type: string
          nullable: true
        organizationExternalId:
          type: string
          nullable: true
        federationMembershipIdentifier:
          type: string
          nullable: true
    EsnPersonExtendedDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/EsnPersonDetailsDto"
      - type: object
        additionalProperties: false
        properties:
          tags:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/EsnTagDetailsDto"
          organizationExternalId:
            type: string
            nullable: true
    EsnTagDetailsDto:
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        start:
          type: string
          format: date-time
        cancellation:
          type: string
          format: date-time
          nullable: true
    EsnAuditLogCreateDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          success:
            type: boolean
          details:
            type: string
            nullable: true
          processorType:
            nullable: true
            "$ref": "#/components/schemas/EsnProcessorType2"
          entityType:
            type: string
            nullable: true
          operationType:
            type: string
            nullable: true
          tenantId:
            type: string
            format: guid
          functionName:
            type: string
            nullable: true
    EsnExternalSystemLinkDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        externalSystemId:
          type: integer
          format: int32
        externalSystemName:
          type: string
          nullable: true
        externalSystemCode:
          type: string
          nullable: true
        personGuid:
          type: string
          format: guid
        identifier:
          type: string
          nullable: true
        extraInformation:
          type: string
          nullable: true
        additionalQuestionAnswers:
          type: object
          nullable: true
          additionalProperties:
            type: string
    OpsLocationDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        name:
          type: string
          nullable: true
    OpsLocationDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/OpsLocationDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          locationTypeName:
            type: string
            nullable: true
          address:
            nullable: true
            "$ref": "#/components/schemas/OpsAddressInfoDto"
    OpsAddressInfoDto:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        address3:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        suffix:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberExtension:
          type: string
          nullable: true
        countryName:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        locationName:
          type: string
          nullable: true
    OpsMatchDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          start:
            type: string
            format: date-time
          end:
            type: string
            format: date-time
          fieldId:
            type: string
            format: guid
            nullable: true
          homeTeamId:
            type: integer
            format: int32
            nullable: true
          awayTeamId:
            type: integer
            format: int32
            nullable: true
          externalEventReferenceId:
            type: string
            nullable: true
    PagedResultDtoOfOpsMatchDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOpsMatchDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOpsMatchDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsMatchDto"
    OpsParentInfoDto:
      type: object
      additionalProperties: false
      properties:
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        parentName:
          type: string
          nullable: true
        relationship:
          type: string
          nullable: true
        receiveEmails:
          type: boolean
    PagedResultDtoOfOpsPersonDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOpsPersonDetailsDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOpsPersonDetailsDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsPersonDetailsDto"
    OpsPersonDetailsDto:
      type: object
      additionalProperties: false
      properties:
        guid:
          type: string
          format: guid
        namePrefix:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        nameInfix:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        gender:
          "$ref": "#/components/schemas/Gender2"
        dateOfBirth:
          type: string
          format: date-time
        clubMembershipIdentifier:
          type: string
          nullable: true
        federationMembershipIdentifier:
          type: string
          nullable: true
        foysMemberLogin:
          type: string
          nullable: true
        nationalityCountryCode:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobilePhone:
          type: string
          nullable: true
        member_since:
          type: string
          format: date-time
          nullable: true
        address:
          nullable: true
          "$ref": "#/components/schemas/OpsAddressInfoDto"
        deceased_date:
          type: string
          format: date-time
          nullable: true
        AED:
          type: boolean
        gdprConsent:
          type: boolean
        gdprConsentDate:
          type: string
          format: date-time
          nullable: true
        certificateOfConduct:
          type: boolean
        certificateOfConductDate:
          type: string
          format: date-time
          nullable: true
        photoCheck:
          type: boolean
        photoUploadedAt:
          type: string
          format: date-time
          nullable: true
        photoValidUntil:
          type: string
          format: date-time
          nullable: true
        placeOfBirth:
          type: string
          nullable: true
        organisationId:
          type: string
          format: guid
        organisationName:
          type: string
          nullable: true
        personTags:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsPersonTagDto"
        planAssignments:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsPlanAssignmentDto"
        externalSystemLinks:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsV2ExternalSystemLinkDto"
        debtCollection:
          type: boolean
        bankAccountName:
          type: string
          nullable: true
        IBAN:
          type: string
          nullable: true
        BIC:
          type: string
          nullable: true
        mandateId:
          type: string
          nullable: true
        mandate_date:
          type: string
          format: date-time
          nullable: true
        debtCollectionTerms:
          type: integer
          format: int32
          nullable: true
        invoiceDeliveryMethod:
          "$ref": "#/components/schemas/InvoiceDeliveryMethod2"
    Gender2:
      type: string
      description: ''
      x-enumNames:
      - Male
      - Female
      - Unspecified
      enum:
      - Male
      - Female
      - Unspecified
    OpsPersonTagDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        tagId:
          type: integer
          format: int32
        start:
          type: string
          format: date-time
        cancellation:
          type: string
          format: date-time
          nullable: true
        externalId:
          type: string
          nullable: true
        externalType:
          type: string
          nullable: true
        personId:
          type: string
          format: guid
        tag:
          nullable: true
          "$ref": "#/components/schemas/OpsTagDto"
    OpsTagDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          group:
            type: string
            nullable: true
          color:
            type: string
            nullable: true
          type:
            "$ref": "#/components/schemas/TagType"
          isVisibleForClub:
            type: boolean
          isAssignableByClub:
            type: boolean
          isHistoric:
            type: boolean
          isVisibleForPersons:
            type: boolean
          hideFromApp:
            type: boolean
    OpsPlanAssignmentDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        planId:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        originalStartDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        insertedAt:
          type: string
          format: date-time
        parentPersonId:
          type: string
          format: guid
          nullable: true
        registrationFee:
          type: boolean
        transferFee:
          type: boolean
        changeReasonCode:
          type: string
          nullable: true
        cancellationReasonId:
          type: integer
          format: int32
          nullable: true
        cancellationDate:
          type: string
          format: date-time
          nullable: true
        cancellationReceivedDate:
          type: string
          format: date-time
          nullable: true
        organisationName:
          type: string
          nullable: true
    OpsV2ExternalSystemLinkDto:
      type: object
      additionalProperties: false
      properties:
        externalSystemId:
          type: integer
          format: int32
        identifier:
          type: string
          nullable: true
        extraInformation:
          type: string
          nullable: true
        additionalQuestionAnswers:
          type: object
          nullable: true
          additionalProperties:
            type: string
    ProblemDetails:
      type: object
      additionalProperties:
        nullable: true
      properties:
        Type:
          type: string
          nullable: true
        Title:
          type: string
          nullable: true
        Status:
          type: integer
          format: int32
          nullable: true
        Detail:
          type: string
          nullable: true
        Instance:
          type: string
          nullable: true
        Extensions:
          type: object
          additionalProperties: {}
    OpsCreatePersonDto:
      type: object
      additionalProperties: false
      properties:
        organisationId:
          type: string
          format: guid
          nullable: true
        namePrefix:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        nameInfix:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        gender:
          "$ref": "#/components/schemas/Gender2"
        dateOfBirth:
          type: string
          format: date-time
        foysMemberLogin:
          type: string
          nullable: true
        nationalityCountryCode:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobilePhone:
          type: string
          nullable: true
        address:
          nullable: true
          "$ref": "#/components/schemas/OpsAddressInfoDto"
        deceased_date:
          type: string
          format: date-time
          nullable: true
        AED:
          type: boolean
          nullable: true
        gdprConsent:
          type: boolean
          nullable: true
        gdprConsentDate:
          type: string
          format: date-time
          nullable: true
        certificateOfConduct:
          type: boolean
          nullable: true
        certificateOfConductDate:
          type: string
          format: date-time
          nullable: true
        photoCheck:
          type: boolean
          nullable: true
        photoUploadedAt:
          type: string
          format: date-time
          nullable: true
        photoValidUntil:
          type: string
          format: date-time
          nullable: true
        placeOfBirth:
          type: string
          nullable: true
        debtCollection:
          type: boolean
          nullable: true
        bankAccountName:
          type: string
          nullable: true
        IBAN:
          type: string
          nullable: true
        BIC:
          type: string
          nullable: true
        mandateId:
          type: string
          nullable: true
        mandate_date:
          type: string
          format: date-time
          nullable: true
        debtCollectionTerms:
          type: integer
          format: int32
          nullable: true
        invoiceDeliveryMethod:
          nullable: true
          "$ref": "#/components/schemas/InvoiceDeliveryMethod2"
        password:
          type: string
          nullable: true
        planAssignment:
          nullable: true
          "$ref": "#/components/schemas/OpsCreatePlanAssignmentDto"
        externalSystemLinks:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsV2ExternalSystemLinkDto"
    OpsCreatePlanAssignmentDto:
      type: object
      additionalProperties: false
      properties:
        planId:
          type: integer
          format: int32
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
        parentPersonId:
          type: string
          format: guid
          nullable: true
        registrationFee:
          type: boolean
        transferFee:
          type: boolean
    OpsCreateMessageDto:
      type: object
      additionalProperties: false
      properties:
        title:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        start:
          type: string
          format: date-time
          nullable: true
        end:
          type: string
          format: date-time
          nullable: true
        published:
          type: boolean
        sendAsEmail:
          type: boolean
        sendPushNotification:
          type: boolean
        emailTemplateMailCode:
          type: string
          nullable: true
        federationMembershipIdentifiers:
          type: array
          nullable: true
          items:
            type: string
        macros:
          type: object
          nullable: true
          additionalProperties:
            type: string
    OpsAccommodationDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          isMainAccommodation:
            type: boolean
          addressInfo:
            nullable: true
            "$ref": "#/components/schemas/OpsAddressInfoDto"
    PagedResultDtoOfOpsClubDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOpsClubDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOpsClubDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsClubDto"
    OpsClubDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          logoUrl:
            type: string
            nullable: true
          city:
            type: string
            nullable: true
          updatedAt:
            type: string
            format: date-time
    OpsCreatePermissionsDto:
      type: object
      additionalProperties: false
      properties:
        moduleName:
          type: string
          nullable: true
        permissions:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsPermissionDto"
    OpsSystemRoleDto2:
      type: object
      additionalProperties: false
      properties:
        federationId:
          type: string
          format: guid
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        permissions:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsPermissionDto"
    OpsPersonFederationRoleDto:
      type: object
      additionalProperties: false
      properties:
        firstName:
          type: string
          nullable: true
        nameInfix:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        federationRoleName:
          type: string
          nullable: true
        federationRoleCode:
          type: string
          nullable: true
    PagedResultDtoOfOpsPersonTagListDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOpsPersonTagListDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOpsPersonTagListDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsPersonTagListDto"
    OpsPersonTagListDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        start:
          type: string
          format: date-time
        cancellation:
          type: string
          format: date-time
          nullable: true
        externalId:
          type: string
          nullable: true
        externalType:
          type: string
          nullable: true
        tag:
          nullable: true
          "$ref": "#/components/schemas/OpsTagDto"
        personId:
          type: string
          format: guid
    PostmarkBounceNotification:
      type: object
      additionalProperties: false
      properties:
        type:
          "$ref": "#/components/schemas/PostmarkBounceType"
        bounceId:
          type: string
          nullable: true
        bounceDump:
          type: string
          nullable: true
        bouncedAt:
          type: string
          nullable: true
        details:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        tag:
          type: string
          nullable: true
        subject:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        serverId:
          type: string
          nullable: true
        messageId:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        htmlBody:
          type: string
          nullable: true
        textBody:
          type: string
          nullable: true
        rawEmail:
          type: string
          nullable: true
    PostmarkBounceType:
      type: integer
      description: ''
      x-enumNames:
      - HardBounce
      - SMTPApiError
      - SoftBounce
      - SpamNotification
      - ManuallyDeactivated
      - Unsubscribe
      - AddressChange
      - ChallengeVerification
      - AutoResponder
      - Transient
      - Subscribe
      - RelayTest
      - Unknown
      - SoftBounceInbound
      - HardBounceInbound
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
    OpsPushNotificationDto:
      type: object
      additionalProperties: false
      properties:
        text:
          type: string
          nullable: true
        targetId:
          type: string
          nullable: true
        personIds:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        macros:
          type: object
          nullable: true
          additionalProperties:
            type: string
    OpsSeasonDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          keyDate:
            type: string
            format: date-time
            nullable: true
          externalId:
            type: string
            nullable: true
          insertedAt:
            type: string
            format: date-time
          updatedAt:
            type: string
            format: date-time
    SystemSettingsUpdateDto:
      type: object
      additionalProperties: false
      properties:
        key:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        system:
          type: string
          nullable: true
        module:
          type: string
          nullable: true
        defaultValue:
          type: string
          nullable: true
        isVisibleForUi:
          type: boolean
          nullable: true
        type:
          "$ref": "#/components/schemas/SystemSettingValueType"
    SystemSettingValueType:
      type: string
      description: ''
      x-enumNames:
      - String
      - Boolean
      - Number
      - Array
      enum:
      - String
      - Boolean
      - Number
      - Array
    SystemSettingsDto:
      type: object
      additionalProperties: false
      properties:
        key:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        system:
          type: string
          nullable: true
        module:
          type: string
          nullable: true
        possibleValues:
          type: string
          nullable: true
        defaultValue:
          type: string
          nullable: true
        type:
          "$ref": "#/components/schemas/SystemSettingValueType2"
    SystemSettingValueType2:
      type: integer
      description: ''
      x-enumNames:
      - String
      - Boolean
      - Number
      - Array
      enum:
      - 0
      - 1
      - 2
      - 3
    OpsContainerSystemSettingsDto:
      type: object
      additionalProperties: false
      properties:
        systemSettingKey:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
    PagedResultDtoOfOpsTagDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOpsTagDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOpsTagDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsTagDto"
    PagedResultDtoOfOpsTeamMemberDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOpsTeamMemberDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOpsTeamMemberDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsTeamMemberDto"
    OpsTeamMemberDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
          nullable: true
        teamId:
          type: string
          format: guid
        teamName:
          type: string
          nullable: true
        clubId:
          type: string
          format: guid
        clubName:
          type: string
          nullable: true
        teamRoleId:
          type: integer
          format: int32
        teamRole:
          type: string
          nullable: true
        isPlayer:
          type: boolean
        hasAccessToMatchForm:
          type: boolean
        hasPlayerLicense:
          type: boolean
        person:
          nullable: true
          "$ref": "#/components/schemas/OpsMemberShortInfoDto"
    OpsMemberShortInfoDto:
      type: object
      additionalProperties: false
      properties:
        memberId:
          type: string
          format: guid
        federationMembershipIdentifier:
          type: string
          nullable: true
        clubMembershipIdentifier:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        nameInfix:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobilePhone:
          type: string
          nullable: true
        clubName:
          type: string
          nullable: true
        clubCode:
          type: string
          nullable: true
        address:
          nullable: true
          "$ref": "#/components/schemas/OpsAddressInfoDto"
        birthDate:
          type: string
          format: date-time
        assetUrl:
          type: string
          nullable: true
    OpsCreateTeamMemberDto:
      type: object
      additionalProperties: false
      properties:
        personGuid:
          type: string
          format: guid
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
          nullable: true
        teamRoleId:
          type: integer
          format: int32
          nullable: true
    OpsUpdateTeamMemberDto:
      type: object
      additionalProperties: false
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
          nullable: true
        teamRoleId:
          type: integer
          format: int32
          nullable: true
    PagedResultDtoOfOpsTeamDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOpsTeamDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOpsTeamDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OpsTeamDto"
    OpsTeamDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          officialName:
            type: string
            nullable: true
          shortName:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          isLocked:
            type: boolean
          isVisibleForFederation:
            type: boolean
          disciplineId:
            type: integer
            format: int32
            nullable: true
          disciplineName:
            type: string
            nullable: true
          teamCategoryId:
            type: string
            format: guid
            nullable: true
          teamCategoryName:
            type: string
            nullable: true
          teamLicenseTypeId:
            type: integer
            format: int32
            nullable: true
          teamLicenseTypeName:
            type: string
            nullable: true
          seasonId:
            type: integer
            format: int32
            nullable: true
          seasonName:
            type: string
            nullable: true
          organisationId:
            type: string
            format: guid
          matchCategoryIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    OpsCreateTeamDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        officialName:
          type: string
          nullable: true
        shortName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isLocked:
          type: boolean
        isVisibleForFederation:
          type: boolean
        teamCategoryId:
          type: string
          format: guid
          nullable: true
        teamLicenseTypeId:
          type: integer
          format: int32
          nullable: true
        disciplineId:
          type: integer
          format: int32
          nullable: true
        seasonId:
          type: integer
          format: int32
          nullable: true
        matchCategoryIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
    OpsUpdateTeamDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        officialName:
          type: string
          nullable: true
        shortName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isLocked:
          type: boolean
        isVisibleForFederation:
          type: boolean
        teamCategoryId:
          type: string
          format: guid
          nullable: true
        teamLicenseTypeId:
          type: integer
          format: int32
          nullable: true
        disciplineId:
          type: integer
          format: int32
          nullable: true
        seasonId:
          type: integer
          format: int32
          nullable: true
        matchCategoryIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
    NKBVCalculationOutput:
      type: object
      additionalProperties: false
      properties:
        totalPrice:
          type: number
          format: decimal
        membershipsPrices:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/NKBVNamePriceDto"
        servicePrices:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/NKBVNamePriceDto"
    NKBVNamePriceDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        price:
          type: number
          format: decimal
    NKBVCalculationInput:
      type: object
      additionalProperties: false
      required:
      - birthDay
      - planCode
      properties:
        birthDay:
          type: string
          format: date-time
          minLength: 1
        planCode:
          type: string
          minLength: 1
        countryCode:
          type: string
          nullable: true
        serviceGroupCodes:
          type: array
          nullable: true
          items:
            type: string
    WrappedNkbvPersonDto:
      type: object
      additionalProperties: false
      properties:
        member:
          nullable: true
          "$ref": "#/components/schemas/NkbvPersonDto"
    NkbvPersonDto:
      type: object
      additionalProperties: false
      properties:
        gender:
          type: string
          nullable: true
        date_of_birth:
          type: string
          format: date-time
        nationality_country_code:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        name_prefix:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
        name_infix:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        federation_membership_identifier:
          type: string
          nullable: true
        mobile_phone_number:
          type: string
          nullable: true
        phone_number:
          type: string
          nullable: true
        plan_code:
          type: string
          nullable: true
        address:
          nullable: true
          "$ref": "#/components/schemas/NkbvAddressDto"
    NkbvAddressDto:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        house_number:
          type: string
          nullable: true
        house_number_extension:
          type: string
          nullable: true
        country_code:
          type: string
          nullable: true
    ExternalGender:
      type: string
      description: ''
      x-enumNames:
      - M
      - V
      - O
      enum:
      - M
      - V
      - O
    AllowedSenderDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          emailAddress:
            type: string
            nullable: true
          isVerifiedOnSendgrid:
            type: boolean
          sendgridSenderId:
            type: integer
            format: int32
            nullable: true
          isVerifiedOnPostmark:
            type: boolean
          postmarkSignatureId:
            type: integer
            format: int32
            nullable: true
          isVerifiedOnAws:
            type: boolean
          isVerificationEmailSent:
            type: boolean
    PagedResultDtoOfAllowedSenderDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfAllowedSenderDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfAllowedSenderDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/AllowedSenderDto"
    PagedResultDtoOfAttachmentDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfAttachmentDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfAttachmentDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/AttachmentDto"
    AttachmentDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          caption:
            type: string
            nullable: true
          url:
            type: string
            nullable: true
          value:
            type: string
            nullable: true
          fileName:
            type: string
            nullable: true
          recordId:
            type: string
            nullable: true
          fileType:
            "$ref": "#/components/schemas/FileType2"
          attachmentType:
            "$ref": "#/components/schemas/AttachmentType"
          tenantId:
            type: string
            format: guid
          hideFromLibrary:
            type: boolean
          mediaFolderId:
            type: string
            nullable: true
          personId:
            type: string
            format: guid
            nullable: true
          organisationId:
            type: string
            format: guid
            nullable: true
          createdByUser:
            type: string
            nullable: true
          insertedAt:
            type: string
            format: date-time
          description:
            type: string
            nullable: true
          documentTypeId:
            type: integer
            format: int32
            nullable: true
          documentTypeName:
            type: string
            nullable: true
    FileType2:
      type: integer
      description: ''
      x-enumNames:
      - Image
      - Video
      - Pdf
      - Excel
      - Word
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
    AttachmentType:
      type: integer
      description: ''
      x-enumNames:
      - News
      - Team
      - Sponsor
      - Event
      - OrganisationLogo
      - Training
      - Message
      - ClubOutfit
      - DirectDebitAuthorizationFile
      - Location
      - CertificateOfConduct
      - PlayerLicense
      - MembersExport
      - MembersImport
      - ClubOar
      - Avatar
      - MediaFiles
      - EmailTemplate
      - PersonGeneralAttachment
      - OrganisationGeneralAttachment
      - ThemeHeaderLogo
      - ThemeLoginPageLogo
      - ThemeLoginPageImage
      - ThemeFavicon
      - NewsItemOfficialMedia
      - MembersSubscriptionImport
      - CalendarEventCoverImage
      enum:
      - 0
      - 2
      - 3
      - 6
      - 7
      - 9
      - 10
      - 11
      - 13
      - 14
      - 15
      - 17
      - 19
      - 22
      - 24
      - 25
      - 26
      - 27
      - 28
      - 29
      - 30
      - 31
      - 32
      - 33
      - 34
      - 35
      - 36
    MoveFilesToFolderDto:
      type: object
      additionalProperties: false
      properties:
        mediaFolderId:
          type: string
          format: guid
          nullable: true
        attachmentIdsToMove:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
    PagedResultDtoOfArchivedAuditLogDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfArchivedAuditLogDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfArchivedAuditLogDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ArchivedAuditLogDto"
    ArchivedAuditLogDto:
      allOf:
      - "$ref": "#/components/schemas/AuditLogDto"
      - type: object
        additionalProperties: false
        properties:
          filePath:
            type: string
            nullable: true
    AuditLogDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
        eventDateUTC:
          type: string
          format: date-time
        eventType:
          "$ref": "#/components/schemas/EventType"
        typeFullName:
          type: string
          nullable: true
        recordId:
          type: string
          nullable: true
        currentData:
          type: string
          nullable: true
        originalData:
          type: string
          nullable: true
        personId:
          type: integer
          format: int32
          nullable: true
        userId:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        personFullName:
          type: string
          nullable: true
        tenantId:
          type: string
          format: guid
          nullable: true
        organisationId:
          type: string
          format: guid
          nullable: true
    EventType:
      type: string
      description: ''
      x-enumNames:
      - Added
      - Deleted
      - Modified
      - SoftDeleted
      - UnDeleted
      enum:
      - Added
      - Deleted
      - Modified
      - SoftDeleted
      - UnDeleted
    PagedResultDtoOfAuditLogDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfAuditLogDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfAuditLogDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/AuditLogDto"
    AvatarDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          personId:
            type: string
            format: guid
          url:
            type: string
            nullable: true
          File:
            type: string
            format: binary
            nullable: true
    AvatarStatusUpdateDto:
      type: object
      additionalProperties: false
      properties:
        status:
          "$ref": "#/components/schemas/AvatarStatus"
    AvatarStatus:
      type: integer
      description: ''
      x-enumNames:
      - Unapproved
      - Approved
      - Rejected
      enum:
      - 1
      - 2
      - 3
    BackgroundJobDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          name:
            type: string
            nullable: true
          type:
            type: string
            nullable: true
          creatorUserName:
            type: string
            nullable: true
          state:
            type: string
            nullable: true
          startedAt:
            type: string
            format: date-time
            nullable: true
          finishedAt:
            type: string
            format: date-time
            nullable: true
          jobId:
            type: string
            nullable: true
          creationTime:
            type: string
            format: date-time
          creatorUserId:
            type: string
            nullable: true
          isManualRunningTask:
            type: boolean
          backgroundJobArgs:
            type: string
            nullable: true
          logs:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/BackgroundJobLogEntryDto"
          periodicTaskConfigName:
            type: string
            nullable: true
    BackgroundJobLogEntryDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        backgroundJobId:
          type: integer
          format: int32
        isSuccess:
          type: boolean
        message:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
    PagedResultDtoOfBackgroundJobDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfBackgroundJobDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfBackgroundJobDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/BackgroundJobDto"
    BackgroundJobState:
      type: integer
      description: ''
      x-enumNames:
      - Enqueued
      - Awaiting
      - Processing
      - Succeeded
      - Failed
      - Canceled
      - HasError
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
    CreateBackgroundJobInput:
      type: object
      additionalProperties: false
      properties:
        BackgroundJobTypeName:
          type: string
          nullable: true
        Arguments:
          nullable: true
          "$ref": "#/components/schemas/BackgroundJobArgs"
    BackgroundJobArgs:
      type: object
      discriminator:
        propertyName: _discriminator
        mapping:
          ImportGradeDetailJobArgs: "#/components/schemas/ImportGradeDetailJobArgs"
          AcceptRegistrationsBackgroundJobInput: "#/components/schemas/AcceptRegistrationsBackgroundJobInput"
          ClubInvoicingProcessInput: "#/components/schemas/ClubInvoicingProcessInput"
          DeletePeopleBackgroundJobInput: "#/components/schemas/DeletePeopleBackgroundJobInput"
          EsnSyncBackgroundJobInput: "#/components/schemas/EsnSyncBackgroundJobInput"
          ExportPeopleToFileBackgroundJobInput: "#/components/schemas/ExportPeopleToFileBackgroundJobInput"
          GenericPeriodTaskInput: "#/components/schemas/GenericPeriodTaskInput"
          ImportPeopleFromFileBackgroundJobInput: "#/components/schemas/ImportPeopleFromFileBackgroundJobInput"
          ImportSubscriptionsFromCsvBackgroundJobInput: "#/components/schemas/ImportSubscriptionsFromCsvBackgroundJobInput"
          PrintLettersBackgroundJobInput: "#/components/schemas/PrintLettersBackgroundJobInput"
          ServiceYearlyProlongationBackgroundJobInput: "#/components/schemas/ServiceYearlyProlongationBackgroundJobInput"
          SubscriptionProlongationBackgroundJobInput: "#/components/schemas/SubscriptionProlongationBackgroundJobInput"
          YearlyProlongationBackgroundJobInput: "#/components/schemas/YearlyProlongationBackgroundJobInput"
          SbnClubInvoiceInput: "#/components/schemas/SbnClubInvoiceInput"
          SbnDirectMembersInvoiceInput: "#/components/schemas/SbnDirectMembersInvoiceInput"
          KnsbMembershipBackgroundJobInput: "#/components/schemas/KnsbMembershipBackgroundJobInput"
          JbnClubInvoiceInput: "#/components/schemas/JbnClubInvoiceInput"
          JbnClubMembersInvoiceInput: "#/components/schemas/JbnClubMembersInvoiceInput"
          JbnDirectMembersInvoiceInput: "#/components/schemas/JbnDirectMembersInvoiceInput"
      additionalProperties: false
      required:
      - _discriminator
      properties:
        OrganisationId:
          type: string
          format: guid
          nullable: true
        CurrentContainerId:
          type: integer
          format: int32
        UserId:
          type: string
          nullable: true
        _discriminator:
          type: string
    ImportGradeDetailJobArgs:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          RowsFromFile:
            type: array
            nullable: true
            items:
              type: object
              additionalProperties:
                type: string
          LoggedUser:
            nullable: true
            "$ref": "#/components/schemas/LoggedUser"
    LoggedUser:
      type: object
      additionalProperties: false
      properties:
        PersonId:
          type: integer
          format: int32
          nullable: true
        PersonGuid:
          type: string
          format: guid
          nullable: true
        FederationMembershipIdentifier:
          type: string
          nullable: true
        Language:
          type: string
          nullable: true
        UserId:
          type: string
          nullable: true
        AspNetRoleId:
          type: string
          nullable: true
        AspNetRoleName:
          type: string
          nullable: true
        SystemRoleCodes:
          type: array
          nullable: true
          items:
            type: string
        ClubGuid:
          type: string
          format: guid
          nullable: true
        FederationGuid:
          type: string
          format: guid
          nullable: true
        ExternalOrganisationGuid:
          type: string
          format: guid
          nullable: true
        OrganisationId:
          type: string
          format: guid
          nullable: true
        ParentOrganisationId:
          type: string
          format: guid
          nullable: true
        IsFederationUser:
          type: boolean
        IsClubUser:
          type: boolean
        IsExternalOrganisationUser:
          type: boolean
        IsSuperAdmin:
          type: boolean
    AcceptRegistrationsBackgroundJobInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          PersonIds:
            type: array
            nullable: true
            items:
              type: string
              format: guid
    ClubInvoicingProcessInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          SeasonId:
            type: integer
            format: int32
          ClubInvoiceTypes:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/ClubInvoiceTypeDto"
          FromDate:
            type: string
            format: date-time
            nullable: true
          UntilDate:
            type: string
            format: date-time
            nullable: true
          InvoiceTypeCode:
            type: string
            nullable: true
          InvoiceDescription:
            type: string
            nullable: true
          Identifiers:
            type: string
            nullable: true
          InvoicePlanAssignments:
            type: boolean
          PlanIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          InvoiceRentals:
            type: boolean
          InventoryItemTypeIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          InvoiceSubscriptions:
            type: boolean
          ServiceIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    ClubInvoiceTypeDto:
      type: object
      additionalProperties: false
      properties:
        InvoicePeopleWithoutContributionTerm:
          type: boolean
        ContributionTermId:
          type: integer
          format: int32
          nullable: true
        ContributionTermItemId:
          type: integer
          format: int32
          nullable: true
    DeletePeopleBackgroundJobInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          PersonIds:
            type: array
            nullable: true
            items:
              type: string
              format: guid
          LoggedUser:
            nullable: true
            "$ref": "#/components/schemas/LoggedUser"
    EsnSyncBackgroundJobInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          Filter:
            nullable: true
            "$ref": "#/components/schemas/PersonTableFilter"
          IncludePlanAssignments:
            type: boolean
          SelectedPersonIds:
            type: string
            nullable: true
    PersonTableFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Visibilities:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FieldVisibility"
          Filters:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FilterBase"
          hasActiveMembership:
            type: boolean
          SkipActiveMembershipCheck:
            type: boolean
            nullable: true
          firstName:
            type: string
            nullable: true
          lastName:
            type: string
            nullable: true
          namePrefix:
            type: string
            nullable: true
          nameInfix:
            type: string
            nullable: true
          birthDate:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfDateTime"
          gender:
            nullable: true
            "$ref": "#/components/schemas/Gender"
          insertedAt:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfDateTime"
          memberSince:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfDateTime"
          zipCode:
            type: string
            nullable: true
          federationMembershipIdentifier:
            type: string
            nullable: true
          age:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfInteger"
          email:
            type: string
            nullable: true
          phone:
            type: string
            nullable: true
          mobile:
            type: string
            nullable: true
          cancellationDate:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfDateTime"
          includeDeceasedPersons:
            type: boolean
            nullable: true
          tagLabelIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          federationRoleIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          qualificationIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          federationQualificationId:
            type: integer
            format: int32
            nullable: true
          currentPlanIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          currentFederationPlanId:
            type: integer
            format: int32
            nullable: true
          planOrganisationId:
            type: string
            format: guid
            nullable: true
          serviceIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          clubIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfGuid"
          clubNumber:
            type: string
            nullable: true
          teamId:
            type: integer
            format: int32
            nullable: true
          teamIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          committeeId:
            type: integer
            format: int32
            nullable: true
          federationNumber:
            type: string
            nullable: true
          initials:
            type: string
            nullable: true
          iban:
            type: string
            nullable: true
          region:
            type: string
            nullable: true
          city:
            type: string
            nullable: true
          countryId:
            type: integer
            nullable: true
          isFederationMember:
            type: boolean
            nullable: true
          hasProfilePicture:
            type: boolean
            nullable: true
          isUpForReview:
            type: boolean
          excludedFromDuty:
            type: boolean
            nullable: true
          certificateOfConductEndDate:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfDateTime"
          hasLoginAccount:
            type: boolean
            nullable: true
          quickSearch:
            type: string
            nullable: true
          marketingInterestIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          newsletterIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          collectivePayment:
            type: boolean
            nullable: true
          languageCode:
            type: string
            nullable: true
    FieldVisibility:
      type: object
      additionalProperties: false
      properties:
        Name:
          type: string
          nullable: true
        Visibility:
          type: boolean
    FilterBase:
      type: object
      x-abstract: true
      additionalProperties: false
      properties:
        Column:
          type: string
          nullable: true
        Visibility:
          type: boolean
        Values:
          type: array
          nullable: true
          items:
            type: string
    FilterPropertyRangeOfDateTime:
      type: object
      additionalProperties: false
      properties:
        from:
          type: string
          format: date-time
          nullable: true
        to:
          type: string
          format: date-time
          nullable: true
    FilterPropertyRangeOfInteger:
      type: object
      additionalProperties: false
      properties:
        from:
          type: integer
          format: int32
          nullable: true
        to:
          type: integer
          format: int32
          nullable: true
    FullPropertyFilterOfInteger:
      type: object
      additionalProperties: false
      properties:
        value:
          type: integer
          format: int32
        isWhere:
          type: boolean
    FullPropertyFilterOfGuid:
      type: object
      additionalProperties: false
      properties:
        value:
          type: string
          format: guid
        isWhere:
          type: boolean
    PagedAndSortedResultRequestDto:
      allOf:
      - "$ref": "#/components/schemas/PagedResultRequestDto"
      - type: object
        discriminator:
          propertyName: _discriminator
          mapping:
            OrganisationPlanAssignmentsFilter: "#/components/schemas/OrganisationPlanAssignmentsFilter"
            WebSitesFilter: "#/components/schemas/WebSitesFilter"
            WebPageSearchFilterDto: "#/components/schemas/WebPageSearchFilterDto"
            WebPagesListFilterDto: "#/components/schemas/WebPagesListFilterDto"
            WebMenuFilterDto: "#/components/schemas/WebMenuFilterDto"
            WebFileFilterDto: "#/components/schemas/WebFileFilterDto"
            UserTableFilter: "#/components/schemas/UserTableFilter"
            TransponderFilterDto: "#/components/schemas/TransponderFilterDto"
            TeamTableFilter: "#/components/schemas/TeamTableFilter"
            TeamRolesListFilter: "#/components/schemas/TeamRolesListFilter"
            TeamMemberListFilter: "#/components/schemas/TeamMemberListFilter"
            TagsListFilter: "#/components/schemas/TagsListFilter"
            TagGroupFilter: "#/components/schemas/TagGroupFilter"
            SystemRoleTableFilter: "#/components/schemas/SystemRoleTableFilter"
            SubscriptionFilterDto: "#/components/schemas/SubscriptionFilterDto"
            SportAchievementFilterDto: "#/components/schemas/SportAchievementFilterDto"
            SponsorsListFilter: "#/components/schemas/SponsorsListFilter"
            ServiceFilterDto: "#/components/schemas/ServiceFilterDto"
            RentalsFilterDto: "#/components/schemas/RentalsFilterDto"
            PriceTableFilterDto: "#/components/schemas/PriceTableFilterDto"
            PlanTableFilter: "#/components/schemas/PlanTableFilter"
            PlanCancellationReasonsFilter: "#/components/schemas/PlanCancellationReasonsFilter"
            PersonTagsFilterDto: "#/components/schemas/PersonTagsFilterDto"
            PersonFederationRolesFilter: "#/components/schemas/PersonFederationRolesFilter"
            PersonDisciplineFilterDto: "#/components/schemas/PersonDisciplineFilterDto"
            ParentInfoFilterDto: "#/components/schemas/ParentInfoFilterDto"
            ChildOrganisationFilterDto: "#/components/schemas/ChildOrganisationFilterDto"
            OrganisationsFeedFilterDto: "#/components/schemas/OrganisationsFeedFilterDto"
            OrganisationsFilterDto: "#/components/schemas/OrganisationsFilterDto"
            OrganisationPlanTableFilter: "#/components/schemas/OrganisationPlanTableFilter"
            OpsCalendarEventFilter: "#/components/schemas/OpsCalendarEventFilter"
            NewsItemListFilterDto: "#/components/schemas/NewsItemListFilterDto"
            MessageFilter: "#/components/schemas/MessageFilter"
            MessageRecipientFilterDto: "#/components/schemas/MessageRecipientFilterDto"
            PersonExportFilter: "#/components/schemas/PersonExportFilter"
            ClubMembersPubPagedResultRequestDto: "#/components/schemas/ClubMembersPubPagedResultRequestDto"
            FederationMembersLookupFilterDto: "#/components/schemas/FederationMembersLookupFilterDto"
            MembersLookupFilterDto: "#/components/schemas/MembersLookupFilterDto"
            MembersSearchOpsFilterDto: "#/components/schemas/MembersSearchOpsFilterDto"
            MediaFolderListFilterDto: "#/components/schemas/MediaFolderListFilterDto"
            PhotoAlbumListFilterDto: "#/components/schemas/PhotoAlbumListFilterDto"
            KnowledgeBaseCategoryFilterDto: "#/components/schemas/KnowledgeBaseCategoryFilterDto"
            KnowledgeBaseSearchFilterDto: "#/components/schemas/KnowledgeBaseSearchFilterDto"
            FieldFilter: "#/components/schemas/FieldFilter"
            FederationTableFilter: "#/components/schemas/FederationTableFilter"
            FederationsListFilterDto: "#/components/schemas/FederationsListFilterDto"
            FederationRolesFilter: "#/components/schemas/FederationRolesFilter"
            FavouritePersonFilterDto: "#/components/schemas/FavouritePersonFilterDto"
            ExternalSystemLinkFilterDto: "#/components/schemas/ExternalSystemLinkFilterDto"
            ExternalOrganisationFilterDto: "#/components/schemas/ExternalOrganisationFilterDto"
            EsnFilter: "#/components/schemas/EsnFilter"
            EsnAuditLogFilter: "#/components/schemas/EsnAuditLogFilter"
            EmailTemplateFilter: "#/components/schemas/EmailTemplateFilter"
            EmailLogListFilter: "#/components/schemas/EmailLogListFilter"
            DutyPointsFilterDto: "#/components/schemas/DutyPointsFilterDto"
            DutyExcludedMemberFilterDto: "#/components/schemas/DutyExcludedMemberFilterDto"
            DutyExcludedMembersFilterDto: "#/components/schemas/DutyExcludedMembersFilterDto"
            CustomFieldListFilter: "#/components/schemas/CustomFieldListFilter"
            CustomFieldGroupsFilter: "#/components/schemas/CustomFieldGroupsFilter"
            ContributionTermFilter: "#/components/schemas/ContributionTermFilter"
            ContactMomentFilter: "#/components/schemas/ContactMomentFilter"
            CommitteesFilter: "#/components/schemas/CommitteesFilter"
            CommitteePersonsFilterDto: "#/components/schemas/CommitteePersonsFilterDto"
            CommitteePersonTableFilter: "#/components/schemas/CommitteePersonTableFilter"
            ClubTableFilter: "#/components/schemas/ClubTableFilter"
            CalendarEventAttendanceListFilter: "#/components/schemas/CalendarEventAttendanceListFilter"
            CalendarEventListFilter: "#/components/schemas/CalendarEventListFilter"
            DutiesOccurrencesOverviewFilter: "#/components/schemas/DutiesOccurrencesOverviewFilter"
            DutyAssignmentsFilterDto: "#/components/schemas/DutyAssignmentsFilterDto"
            BillingItemEntityFilterDto: "#/components/schemas/BillingItemEntityFilterDto"
            GetAllBackgroundJobsInput: "#/components/schemas/GetAllBackgroundJobsInput"
            AuPersonsFilterDto: "#/components/schemas/AuPersonsFilterDto"
            AuditLogListFilter: "#/components/schemas/AuditLogListFilter"
            AttachmentsListFilter: "#/components/schemas/AttachmentsListFilter"
            PersonTableFilter: "#/components/schemas/PersonTableFilter"
        additionalProperties: false
        required:
        - _discriminator
        properties:
          sorting:
            type: string
            nullable: true
          _discriminator:
            type: string
    PagedResultRequestDto:
      allOf:
      - "$ref": "#/components/schemas/LimitedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          skipCount:
            type: integer
            format: int32
    LimitedResultRequestDto:
      type: object
      additionalProperties: false
      properties:
        maxResultCount:
          type: integer
          format: int32
    OrganisationPlanAssignmentsFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          OrganisationId:
            type: string
            format: guid
    WebSitesFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Name:
            type: string
            nullable: true
    WebPageSearchFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Query:
            type: string
            nullable: true
    WebPagesListFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          WebSiteId:
            type: string
            format: guid
          IsContentBlock:
            type: boolean
          IsTemplate:
            type: boolean
          WebPageGroupId:
            type: integer
            format: int32
            nullable: true
          NoGroup:
            type: boolean
          Name:
            type: string
            nullable: true
          Url:
            type: string
            nullable: true
          Title:
            type: string
            nullable: true
          IsPublished:
            type: boolean
            nullable: true
    WebMenuFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          WebSiteId:
            type: string
            format: guid
    WebFileFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
    UserTableFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          IsActive:
            type: boolean
          FederationGuid:
            type: string
            format: guid
            nullable: true
          Email:
            type: string
            nullable: true
          Login:
            type: string
            nullable: true
          FullName:
            type: string
            nullable: true
          ClubName:
            type: string
            nullable: true
          UserTypeId:
            type: string
            nullable: true
          SystemRoleId:
            type: integer
            format: int32
            nullable: true
          SystemRoleCode:
            type: string
            nullable: true
          ExternalOrganisationName:
            type: string
            nullable: true
          HasRoleId:
            type: boolean
          HasPerson:
            type: boolean
            nullable: true
          QuickSearch:
            type: string
            nullable: true
          OrganisationId:
            type: string
            format: guid
            nullable: true
          ExcludeOrganisationId:
            type: string
            format: guid
            nullable: true
          OrganisationStatus:
            nullable: true
            "$ref": "#/components/schemas/OrganisationStatus"
          UserIds:
            type: array
            nullable: true
            items:
              type: string
          IncludeCurrentUser:
            type: boolean
    TransponderFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          PersonId:
            type: string
            format: guid
    TeamTableFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          seasonId:
            type: integer
            format: int32
            nullable: true
          noSeason:
            type: boolean
          activeSeason:
            type: boolean
          name:
            type: string
            nullable: true
          shortName:
            type: string
            nullable: true
          teamLicenseTypeId:
            type: integer
            format: int32
            nullable: true
          teamCategoryId:
            type: string
            format: guid
            nullable: true
          organisationId:
            type: string
            format: guid
            nullable: true
          updatedSince:
            type: string
            format: date-time
            nullable: true
          isCompetitionTeam:
            type: boolean
            nullable: true
          matchCategoryId:
            type: integer
            format: int32
            nullable: true
          disciplineId:
            type: integer
            format: int32
            nullable: true
    TeamRolesListFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          ContainerId:
            type: integer
            format: int32
            nullable: true
          TenantId:
            type: string
            format: guid
            nullable: true
    TeamMemberListFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          ActiveMembers:
            type: boolean
    TagsListFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          QuickSearch:
            type: string
            nullable: true
          TagType:
            nullable: true
            "$ref": "#/components/schemas/TagType"
          TagTypes:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/TagType"
          IncludeParentTags:
            type: boolean
            nullable: true
          UpdatedSince:
            type: string
            format: date-time
            nullable: true
    TagGroupFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          TagType:
            "$ref": "#/components/schemas/TagType"
    SystemRoleTableFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          SystemRoleIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          OrganisationId:
            type: string
            format: guid
            nullable: true
          AspNetRoleId:
            type: string
            nullable: true
    SubscriptionFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          PersonId:
            type: string
            format: guid
          StartedAfter:
            type: string
            format: date-time
            nullable: true
          EndsBefore:
            type: string
            format: date-time
            nullable: true
          IncludeFamilySubscriptions:
            type: boolean
    SportAchievementFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          PersonGuid:
            type: string
            format: guid
    SponsorsListFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          ShowInApp:
            type: boolean
            nullable: true
    ServiceFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Name:
            type: string
            nullable: true
          IsActive:
            type: boolean
            nullable: true
          StartDate:
            type: string
            format: date-time
            nullable: true
          ServiceCodes:
            type: array
            nullable: true
            items:
              type: string
          FilterByActiveMembership:
            type: boolean
    RentalsFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          PersonId:
            type: string
            format: guid
            nullable: true
          SeasonId:
            type: integer
            format: int32
            nullable: true
          QuickSearch:
            type: string
            nullable: true
          PersonName:
            type: string
            nullable: true
          InventoryItemType:
            type: string
            nullable: true
          StartDate:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfDateTime"
          IsHistoric:
            type: boolean
            nullable: true
          InventoryItem:
            type: string
            nullable: true
    PriceTableFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Destination:
            "$ref": "#/components/schemas/PriceTableDestination"
    PriceTableDestination:
      type: integer
      description: ''
      x-enumNames:
      - Plan
      - Service
      enum:
      - 0
      - 1
    PlanTableFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            nullable: true
          season:
            type: string
            nullable: true
          category_type_code:
            type: string
            nullable: true
          isActive:
            type: boolean
            nullable: true
          planCode:
            type: string
            nullable: true
    PlanCancellationReasonsFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          IsDisabled:
            type: boolean
            nullable: true
    PersonTagsFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          TagType:
            nullable: true
            "$ref": "#/components/schemas/TagType"
          PersonId:
            type: string
            format: guid
            nullable: true
          UpdatedSince:
            type: string
            format: date-time
            nullable: true
          TagId:
            type: integer
            format: int32
            nullable: true
    PersonFederationRolesFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          RoleId:
            type: integer
            format: int32
            nullable: true
          RoleIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          RoleCodes:
            type: array
            nullable: true
            items:
              type: string
          OrganisationTypeIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          DisciplineIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          FederationMembershipIdentifier:
            type: string
            nullable: true
          PersonName:
            type: string
            nullable: true
          OrganisationName:
            type: string
            nullable: true
          OrganisationCode:
            type: string
            nullable: true
          FacilityTypeId:
            type: integer
            format: int32
            nullable: true
    PersonDisciplineFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        required:
        - PersonId
        properties:
          PersonId:
            type: string
            format: guid
            minLength: 1
    ParentInfoFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          PersonId:
            type: integer
            format: int32
            nullable: true
          PersonGuid:
            type: string
            format: guid
            nullable: true
    ChildOrganisationFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Discriminator:
            nullable: true
            "$ref": "#/components/schemas/TenantType2"
          Discriminators:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/TenantType2"
          Status:
            nullable: true
            "$ref": "#/components/schemas/OrganisationStatus"
          QuickSearch:
            type: string
            nullable: true
          Name:
            type: string
            nullable: true
          Code:
            type: string
            nullable: true
          DisciplineId:
            type: integer
            format: int32
            nullable: true
          FacilityTypeId:
            type: integer
            format: int32
            nullable: true
          RegionId:
            type: integer
            format: int32
            nullable: true
          OrganisationTypeId:
            type: integer
            format: int32
            nullable: true
          OrganisationTypeIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          OnlyPublicOrganisationTypes:
            type: boolean
          ExternalSystemId:
            type: integer
            format: int32
            nullable: true
          HasFinanceYearStartBefore:
            type: string
            format: date-time
            nullable: true
          HasFinanceYearStartAfter:
            type: string
            format: date-time
            nullable: true
          UpdatedAfter:
            type: string
            format: date-time
            nullable: true
          Latitude:
            type: number
            format: double
            nullable: true
          Longitude:
            type: number
            format: double
            nullable: true
          Distance:
            type: integer
            format: int32
            nullable: true
    OrganisationsFeedFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          OrganisationTypeIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          Discriminator:
            nullable: true
            "$ref": "#/components/schemas/TenantType2"
          ShowDeleted:
            type: boolean
            nullable: true
          LastMinutes:
            type: integer
            format: int32
            nullable: true
          Status:
            nullable: true
            "$ref": "#/components/schemas/OrganisationStatus"
          HasActivePlanAssignment:
            type: boolean
          PlanCodes:
            type: array
            nullable: true
            items:
              type: string
          HasPublicOrganisationType:
            type: boolean
    OrganisationsFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Name:
            type: string
            nullable: true
    OrganisationPlanTableFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Name:
            type: string
            nullable: true
          Season:
            type: string
            nullable: true
          IsActive:
            type: boolean
            nullable: true
          StartDate:
            type: string
            format: date-time
            nullable: true
    OpsCalendarEventFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          PersonGuid:
            type: string
            format: guid
            nullable: true
          TeamGuid:
            type: string
            format: guid
            nullable: true
          DateFrom:
            type: string
            format: date-time
            nullable: true
          DateUntil:
            type: string
            format: date-time
            nullable: true
          CalendarItemType:
            type: string
            nullable: true
          ExternalReferenceId:
            type: string
            nullable: true
    NewsItemListFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            nullable: true
          showHistory:
            type: boolean
          tagId:
            type: integer
            format: int32
            nullable: true
    MessageFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          published:
            type: boolean
            nullable: true
          title:
            type: string
            nullable: true
          start:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfDateTime"
          status:
            "$ref": "#/components/schemas/MessageStatus"
    MessageStatus:
      type: integer
      description: ''
      x-enumNames:
      - Draft
      - Scheduled
      - Sent
      enum:
      - 0
      - 1
      - 2
    MessageRecipientFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          messageId:
            type: string
            format: guid
          quickSearch:
            type: string
            nullable: true
    PersonExportFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          updatedSince:
            type: string
            format: date-time
            nullable: true
    ClubMembersPubPagedResultRequestDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          searchString:
            type: string
            nullable: true
    FederationMembersLookupFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Search:
            type: string
            nullable: true
          OrganisationId:
            type: string
            format: guid
          FederationMembershipIdentifier:
            type: string
            nullable: true
    MembersLookupFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Search:
            type: string
            nullable: true
          HasAnyOfTagCodes:
            type: array
            nullable: true
            items:
              type: string
          ExternalOrganisationGuid:
            type: string
            format: guid
            nullable: true
          IncludeInactiveMembers:
            type: boolean
            nullable: true
          HasPlanAssignmentConnectedToOrganisationId:
            type: string
            format: guid
            nullable: true
          FederationMembershipIdentifier:
            type: string
            nullable: true
          ExternalSystemIdentifier:
            type: string
            nullable: true
    MembersSearchOpsFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          FederationMembershipIdentifier:
            type: string
            nullable: true
          FirstName:
            type: string
            nullable: true
          NameInfix:
            type: string
            nullable: true
          LastName:
            type: string
            nullable: true
          Gender:
            nullable: true
            "$ref": "#/components/schemas/Gender"
          BirthDate:
            type: string
            format: date-time
            nullable: true
          ExternalOrganisationId:
            type: string
            format: guid
            nullable: true
          HasPlanWithParentGuid:
            type: string
            format: guid
            nullable: true
          HasPlanStartingAfter:
            type: string
            format: date-time
            nullable: true
          HasPlanStartingBefore:
            type: string
            format: date-time
            nullable: true
          HasPlanEndingAfter:
            type: string
            format: date-time
            nullable: true
          HasPlanEndingBefore:
            type: string
            format: date-time
            nullable: true
          HasPlanInsertedatAfter:
            type: string
            format: date-time
            nullable: true
          HasPlanInsertedatBefore:
            type: string
            format: date-time
            nullable: true
          HasPlanAssignmentConnectedToOrganisationId:
            type: string
            format: guid
            nullable: true
    MediaFolderListFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          OrganisationId:
            type: string
            format: guid
          ParentId:
            type: string
            format: guid
            nullable: true
    PhotoAlbumListFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          IsPublished:
            type: boolean
            nullable: true
    KnowledgeBaseCategoryFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          systemRoleId:
            type: integer
            format: int32
            nullable: true
    KnowledgeBaseSearchFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Query:
            type: string
            nullable: true
    FieldFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
    FederationTableFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
    FederationsListFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Name:
            type: string
            nullable: true
          IsActive:
            type: boolean
    FederationRolesFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            nullable: true
    FavouritePersonFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          searchString:
            type: string
            nullable: true
    ExternalSystemLinkFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          PersonGuid:
            type: string
            format: guid
            nullable: true
    ExternalOrganisationFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          OrganisationTypeCodes:
            type: array
            nullable: true
            items:
              type: string
          LastMinutes:
            type: integer
            format: int32
            nullable: true
          IsActive:
            type: boolean
          Name:
            type: string
            nullable: true
          FederationId:
            type: string
            format: guid
            nullable: true
          PackageId:
            type: integer
            format: int32
            nullable: true
          ClubName:
            type: string
            nullable: true
    EsnFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          processorType:
            nullable: true
            "$ref": "#/components/schemas/EsnProcessorType2"
    EsnAuditLogFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          personQuickSearch:
            type: string
            nullable: true
          success:
            type: boolean
            nullable: true
          details:
            type: string
            nullable: true
          processorType:
            nullable: true
            "$ref": "#/components/schemas/EsnProcessorType2"
    EmailTemplateFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Filters:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FilterBase"
          OnlyCustomTemplates:
            type: boolean
          Name:
            type: string
            nullable: true
          Subject:
            type: string
            nullable: true
          MailCode:
            type: string
            nullable: true
          GroupCode:
            type: string
            nullable: true
    EmailLogListFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          PersonId:
            type: string
            format: guid
    DutyPointsFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            nullable: true
          hasActiveMembership:
            type: boolean
            nullable: true
          points:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfInteger"
          seasonId:
            type: integer
            format: int32
    DutyExcludedMemberFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          hasActiveMembership:
            type: boolean
          firstName:
            type: string
            nullable: true
          lastName:
            type: string
            nullable: true
          namePrefix:
            type: string
            nullable: true
          nameInfix:
            type: string
            nullable: true
          birthDate:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfDateTime"
          gender:
            nullable: true
            "$ref": "#/components/schemas/Gender"
          insertedAt:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfDateTime"
          memberSince:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfDateTime"
          zipCode:
            type: string
            nullable: true
          federationMembershipIdentifier:
            type: string
            nullable: true
          tagLabelIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          qualificationIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          marketingInterestIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          newsletterIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          quickSearch:
            type: string
            nullable: true
    DutyExcludedMembersFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          seasonId:
            type: integer
            format: int32
    CustomFieldListFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Destination:
            "$ref": "#/components/schemas/CustomFieldDestination"
          OrganisationTypeId:
            type: integer
            format: int32
            nullable: true
          IsEditableByPerson:
            type: boolean
            nullable: true
          IsEditableByOrganisation:
            type: boolean
            nullable: true
    CustomFieldDestination:
      type: integer
      description: ''
      x-enumNames:
      - Person
      - Organisation
      enum:
      - 0
      - 1
    CustomFieldGroupsFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Destination:
            "$ref": "#/components/schemas/CustomFieldDestination"
    ContributionTermFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
    ContactMomentFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          GeneralSearch:
            type: string
            nullable: true
          OrganisationId:
            type: string
            format: guid
            nullable: true
          PersonGuid:
            type: string
            format: guid
            nullable: true
    CommitteesFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          IsPubliclyVisible:
            type: boolean
            nullable: true
          IsActive:
            type: boolean
            nullable: true
          SearchString:
            type: string
            nullable: true
    CommitteePersonsFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          term:
            type: string
            nullable: true
    CommitteePersonTableFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          committeeId:
            type: integer
            format: int32
          active:
            type: boolean
    ClubTableFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          IsActive:
            type: boolean
          Name:
            type: string
            nullable: true
          FederationId:
            type: string
            format: guid
            nullable: true
          PackageId:
            type: integer
            format: int32
            nullable: true
    CalendarEventAttendanceListFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            nullable: true
          occurrenceId:
            type: string
            format: guid
          attendanceType:
            nullable: true
            "$ref": "#/components/schemas/EventAttendanceType"
    CalendarEventListFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        required:
        - calendarItemType
        properties:
          calendarItemType:
            type: string
            minLength: 1
          title:
            type: string
            nullable: true
          tagId:
            type: integer
            format: int32
            nullable: true
          teamId:
            type: integer
            format: int32
            nullable: true
          locationId:
            type: integer
            format: int32
            nullable: true
          organisers:
            type: string
            nullable: true
          date:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfDateTime"
          upcomingItems:
            type: boolean
            nullable: true
          dutyCategoryId:
            type: integer
            format: int32
            nullable: true
          updatedSince:
            type: string
            format: date-time
            nullable: true
    DutiesOccurrencesOverviewFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          dutyCategoryId:
            type: integer
            format: int32
            nullable: true
          name:
            type: string
            nullable: true
          start:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfDateTime"
          showHistory:
            type: boolean
    DutyAssignmentsFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            nullable: true
          points:
            nullable: true
            "$ref": "#/components/schemas/FilterPropertyRangeOfInteger"
          tagLabelIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          qualificationIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          marketingInterestIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
          newsletterIds:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FullPropertyFilterOfInteger"
    BillingItemEntityFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          Id:
            type: integer
            format: int32
    GetAllBackgroundJobsInput:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          StartDate:
            type: string
            format: date-time
            nullable: true
          EndDate:
            type: string
            format: date-time
            nullable: true
          BackgroundJobNames:
            type: array
            nullable: true
            items:
              type: string
          States:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/BackgroundJobState"
          Creator:
            type: string
            nullable: true
          OnlyManual:
            type: boolean
            nullable: true
          FederationId:
            type: string
            format: guid
          ClubId:
            type: string
            format: guid
    AuPersonsFilterDto:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          FederationMembershipIdentifier:
            type: string
            nullable: true
          ClubId:
            type: string
            format: guid
            nullable: true
          IsActive:
            type: boolean
            nullable: true
          HasMatchLicense:
            type: boolean
            nullable: true
          UpdatedSince:
            type: string
            format: date-time
            nullable: true
          IncludePlanAssingmentsOfActiveSeason:
            type: boolean
    AuditLogListFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          personId:
            type: string
            format: guid
            nullable: true
          organisationId:
            type: string
            format: guid
            nullable: true
    AttachmentsListFilter:
      allOf:
      - "$ref": "#/components/schemas/PagedAndSortedResultRequestDto"
      - type: object
        additionalProperties: false
        properties:
          recordId:
            type: string
            nullable: true
          recordIds:
            type: array
            nullable: true
            items:
              type: string
          caption:
            type: string
            nullable: true
          fileTypes:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FileType2"
          attachmentType:
            nullable: true
            "$ref": "#/components/schemas/AttachmentType"
          tenantId:
            type: string
            format: guid
            nullable: true
          mediaFolderId:
            type: string
            format: guid
            nullable: true
          organisationId:
            type: string
            format: guid
            nullable: true
          personId:
            type: string
            format: guid
            nullable: true
          hasDocumentType:
            type: boolean
    ExportPeopleToFileBackgroundJobInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          ExportArgs:
            nullable: true
            "$ref": "#/components/schemas/PersonsExportArgsDto"
          Culture:
            type: string
            nullable: true
    PersonsExportArgsDto:
      type: object
      additionalProperties: false
      properties:
        exportDefinitionId:
          type: integer
          format: int32
        exportFileType:
          "$ref": "#/components/schemas/ExportFileType"
        selectedPersonGuids:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        personTableFilter:
          nullable: true
          "$ref": "#/components/schemas/PersonTableFilter"
    ExportFileType:
      type: integer
      description: ''
      x-enumNames:
      - Csv
      - Excel
      enum:
      - 0
      - 1
    GenericPeriodTaskInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          PeriodicTaskConfigId:
            type: integer
            format: int32
          FromDate:
            type: string
            format: date-time
            nullable: true
          UntilDate:
            type: string
            format: date-time
            nullable: true
          InvoiceTypeCode:
            type: string
            nullable: true
          InvoiceFormatting:
            nullable: true
            "$ref": "#/components/schemas/InvoiceFormatting"
          Identifiers:
            type: string
            nullable: true
          PlanIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          ServiceIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          PlayerLicenseTypeIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          OrganisationIds:
            type: array
            nullable: true
            items:
              type: string
              format: guid
          OrganisationTypeIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    InvoiceFormatting:
      type: integer
      description: ''
      x-enumNames:
      - AsComment
      - AsDescription
      enum:
      - 0
      - 1
    ImportPeopleFromFileBackgroundJobInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          ImportDefinition:
            nullable: true
            "$ref": "#/components/schemas/ImportDefinitionDto"
          FileHandle:
            type: string
            nullable: true
          SendActivationEmails:
            type: boolean
    ImportDefinitionDto:
      allOf:
      - "$ref": "#/components/schemas/ContainerResourceDto"
      - type: object
        additionalProperties: false
        properties:
          fields:
            type: object
            nullable: true
            additionalProperties:
              "$ref": "#/components/schemas/ImportPersonCsvFieldProperties"
          includeCustomFields:
            type: boolean
          allowPredefinedFederationMembershipIdentifier:
            type: boolean
          systemRoleIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    ImportPersonCsvFieldProperties:
      allOf:
      - "$ref": "#/components/schemas/BasePersonCsvFieldProperties"
      - type: object
        additionalProperties: false
        properties:
          required:
            type: boolean
    BasePersonCsvFieldProperties:
      type: object
      additionalProperties: false
      properties:
        fieldname:
          type: string
          nullable: true
    ContainerResourceDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          containerId:
            type: integer
            format: int32
          containerName:
            type: string
            nullable: true
    ImportSubscriptionsFromCsvBackgroundJobInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          FileHandle:
            type: string
            nullable: true
          Language:
            type: string
            nullable: true
    PrintLettersBackgroundJobInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          MessageId:
            type: integer
            format: int32
    ServiceYearlyProlongationBackgroundJobInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          DateToProlong:
            type: string
            format: date-time
    SubscriptionProlongationBackgroundJobInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          DateToProlong:
            type: string
            format: date-time
    YearlyProlongationBackgroundJobInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          DateToProlong:
            type: string
            format: date-time
          FromDate:
            type: string
            format: date-time
          UntilDate:
            type: string
            format: date-time
          PlanIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    SbnClubInvoiceInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          UntilDate:
            type: string
            format: date-time
          InvoiceTypeCode:
            type: string
            nullable: true
    SbnDirectMembersInvoiceInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          UntilDate:
            type: string
            format: date-time
          InvoiceTypeCode:
            type: string
            nullable: true
    KnsbMembershipBackgroundJobInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          UntilDate:
            type: string
            format: date-time
          InvoiceTypeCode:
            type: string
            nullable: true
    JbnClubInvoiceInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          UntilDate:
            type: string
            format: date-time
          InvoiceTypeCode:
            type: string
            nullable: true
    JbnClubMembersInvoiceInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          UntilDate:
            type: string
            format: date-time
          InvoiceTypeCode:
            type: string
            nullable: true
    JbnDirectMembersInvoiceInput:
      allOf:
      - "$ref": "#/components/schemas/BackgroundJobArgs"
      - type: object
        additionalProperties: false
        properties:
          UntilDate:
            type: string
            format: date-time
          InvoiceTypeCode:
            type: string
            nullable: true
    PagedResultDtoOfBillingItemOverviewDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfBillingItemOverviewDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfBillingItemOverviewDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/BillingItemOverviewDto"
    BillingItemOverviewDto:
      type: object
      additionalProperties: false
      properties:
        insertedAt:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        amount:
          type: number
          format: decimal
        invoiceId:
          type: string
          nullable: true
        discriminator:
          type: string
          nullable: true
        id:
          type: string
          format: guid
    PagedResultDtoOfCalendarEventAttendanceDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfCalendarEventAttendanceDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfCalendarEventAttendanceDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CalendarEventAttendanceDto"
    CalendarEventAttendanceDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          personGuid:
            type: string
            format: guid
          personName:
            type: string
            nullable: true
          attendanceType:
            "$ref": "#/components/schemas/EventAttendanceType2"
          wasCancelled:
            type: boolean
          insertedAt:
            type: string
            format: date-time
          updatedAt:
            type: string
            format: date-time
          reason:
            type: string
            nullable: true
          occurrenceId:
            type: string
            format: guid
            nullable: true
          dutyPoints:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/DutyPointDto"
          cancelPayment:
            type: boolean
          sendCancellationEmail:
            type: boolean
    CreateCalendarEventAttendanceDto:
      type: object
      additionalProperties: false
      properties:
        occurrenceId:
          type: string
          format: guid
        attendanceType:
          "$ref": "#/components/schemas/EventAttendanceType2"
        memberIds:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        reason:
          type: string
          nullable: true
        sendEmail:
          type: boolean
    OccurrenceDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          start:
            type: string
            format: date-time
          end:
            type: string
            format: date-time
          locationIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          calendarEventId:
            type: integer
            format: int32
          description:
            type: string
            nullable: true
    CalendarEventDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          type:
            type: string
            nullable: true
          guid:
            type: string
            format: guid
          title:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          start:
            type: string
            format: date-time
          end:
            type: string
            format: date-time
          hideTime:
            type: boolean
          onlyVisibleForMembers:
            type: boolean
          locationIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          teamIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          tagIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          clubIds:
            type: array
            nullable: true
            items:
              type: string
              format: guid
          organisers:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
          addressInfo:
            nullable: true
            "$ref": "#/components/schemas/AddressInfoDto"
          repeatUntil:
            type: string
            format: date-time
            nullable: true
          recurrenceType:
            nullable: true
            "$ref": "#/components/schemas/RecurrenceType"
          selectedDays:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/DayOfWeek"
          signUpEnabled:
            type: boolean
          limitRegistrationPeriod:
            type: boolean
          registrationStartDate:
            type: string
            format: date-time
            nullable: true
          sendConfirmationMessage:
            type: boolean
          sendCancellationMessage:
            type: boolean
          registrationEndDate:
            type: string
            format: date-time
            nullable: true
          registrationStartsDaysUpfront:
            type: integer
            format: int32
            nullable: true
          registrationEndsDaysUpfront:
            type: integer
            format: int32
            nullable: true
          limitRegistrationToCertainDaysUpfront:
            type: boolean
          limitAmountOfAttendances:
            type: boolean
          maxAmountOfAttendances:
            type: integer
            format: int32
            nullable: true
          isFree:
            type: boolean
          allowPaymentWithCredits:
            type: boolean
          allowUsingVouchers:
            type: boolean
          hasQuestions:
            type: boolean
          price:
            type: number
            format: decimal
            nullable: true
          invoiceTypeCode:
            type: string
            nullable: true
          externalEventReferenceId:
            type: string
            nullable: true
          enableCustomQuestions:
            type: boolean
          fieldId:
            type: string
            format: guid
            nullable: true
          field:
            nullable: true
            "$ref": "#/components/schemas/FieldDto"
          fieldPortions:
            type: string
            nullable: true
          participantCannotEditGoingStatus:
            type: boolean
            nullable: true
          cancellationPeriodEndsMinutesUpfront:
            type: integer
            format: int32
            nullable: true
          dutyCategoryId:
            type: integer
            format: int32
          dutyCategoryName:
            type: string
            nullable: true
          dutyRoleAssignments:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/DutyRoleAssignmentDto"
          sendReminder:
            type: boolean
          sendReminderDaysBefore:
            type: integer
            format: int32
          reminderEmailTemplateId:
            type: integer
            format: int32
            nullable: true
          confirmationEmailTemplateId:
            type: integer
            format: int32
            nullable: true
          cancellationEmailTemplateId:
            type: integer
            format: int32
            nullable: true
          showAttendees:
            type: boolean
          trainingTypeId:
            type: string
            format: guid
            nullable: true
          trainingTypeName:
            type: string
            nullable: true
          homeTeamName:
            type: string
            nullable: true
          homeTeamId:
            type: integer
            format: int32
            nullable: true
          homeClubId:
            type: string
            format: guid
            nullable: true
          awayTeamName:
            type: string
            nullable: true
          awayTeamId:
            type: integer
            format: int32
            nullable: true
          awayClubId:
            type: string
            format: guid
            nullable: true
    FieldDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          tenantId:
            type: string
            format: guid
          organisationId:
            type: string
            format: guid
          organisationName:
            type: string
            nullable: true
          length:
            type: number
            format: decimal
          width:
            type: number
            format: decimal
          amountOfPortions:
            type: integer
            format: int32
          position:
            type: integer
            format: int32
          fieldType:
            nullable: true
            "$ref": "#/components/schemas/FieldTypeDto"
          fieldTypeId:
            type: integer
            format: int32
          fieldMaterialId:
            type: integer
            format: int32
          fieldMaterial:
            nullable: true
            "$ref": "#/components/schemas/FieldMaterialDto"
          isFromRelatedAccommodation:
            type: boolean
          isMainAccommodation:
            type: boolean
    FieldTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ContainerResourceDto"
      - type: object
        additionalProperties: false
    FieldMaterialDto:
      allOf:
      - "$ref": "#/components/schemas/ContainerResourceDto"
      - type: object
        additionalProperties: false
    DutyRoleAssignmentDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        numberOfPersons:
          type: integer
          format: int32
        extraPoints:
          type: integer
          format: int32
        dutyRoleId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        tagIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
    DuplicateCalendarEventDto:
      type: object
      additionalProperties: false
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    CalendarEventQuestionDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          order:
            type: integer
            format: int32
          questionType:
            "$ref": "#/components/schemas/CalendarEventQuestionType"
          questionOptions:
            type: array
            nullable: true
            items:
              type: string
          calendarEventId:
            type: integer
            format: int32
          isRequired:
            type: boolean
    CalendarEventQuestionAnswersDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          order:
            type: integer
            format: int32
          questionType:
            "$ref": "#/components/schemas/CalendarEventQuestionType"
          questionOptions:
            type: string
            nullable: true
          answer:
            nullable: true
            "$ref": "#/components/schemas/CalendarEventAttendanceAnswerDto"
    CalendarEventAttendanceAnswerDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        value:
          type: string
          nullable: true
        calendarEventQuestionId:
          type: integer
          format: int32
        calendarEventAttendanceId:
          type: integer
          format: int32
    UpdateItemPositionDto:
      allOf:
      - "$ref": "#/components/schemas/UpdateItemPositionDtoOfInteger"
      - type: object
        additionalProperties: false
    UpdateItemPositionDtoOfInteger:
      type: object
      additionalProperties: false
      properties:
        newIndex:
          type: integer
          format: int32
    UpdateFieldAndPortionDto:
      type: object
      additionalProperties: false
      properties:
        fieldId:
          type: string
          format: guid
        fieldPortions:
          type: string
          nullable: true
    EventRegistrationListDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          personName:
            type: string
            nullable: true
          roleName:
            type: string
            nullable: true
    EventRegistrationAddDto:
      type: object
      additionalProperties: false
      properties:
        memberIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        teamRoleId:
          type: integer
          format: int32
    OccurrenceAssignmentsDto:
      type: object
      additionalProperties: false
      properties:
        occurrenceId:
          type: string
          format: guid
        people:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
        teamIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
    PagedResultDtoOfDutiesOccurrenceOverviewDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfDutiesOccurrenceOverviewDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfDutiesOccurrenceOverviewDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/DutiesOccurrenceOverviewDto"
    DutiesOccurrenceOverviewDto:
      type: object
      additionalProperties: false
      properties:
        occurrenceId:
          type: integer
          format: int32
        occurrenceGuid:
          type: string
          format: guid
        name:
          type: string
          nullable: true
        calendarEventId:
          type: integer
          format: int32
        dutyCategory:
          type: string
          nullable: true
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        numberOfPersonsRequiredForDuty:
          type: integer
          format: int32
        numberOfPersonsRegisteredForDuty:
          type: integer
          format: int32
        dutyCategoryId:
          type: integer
          format: int32
    CalendarOverviewItemDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        calendarItemType:
          type: string
          nullable: true
        calendarEventId:
          type: integer
          format: int32
        locations:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/NamedEntityDto"
        fieldId:
          type: string
          format: guid
          nullable: true
        fieldPortions:
          type: string
          nullable: true
    PagedResultDtoOfCalendarEventListBaseDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfCalendarEventListBaseDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfCalendarEventListBaseDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CalendarEventListBaseDto"
    CalendarEventListBaseDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        locations:
          type: array
          nullable: true
          items:
            type: string
        locationIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        teams:
          type: array
          nullable: true
          items:
            type: string
        tags:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagDto"
        trainingOrganisers:
          type: array
          nullable: true
          items:
            type: string
        eventOrganisers:
          type: array
          nullable: true
          items:
            type: string
        lastOccurrenceDate:
          type: string
          format: date-time
          nullable: true
    TagDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          color:
            type: string
            nullable: true
          tagGroupId:
            type: integer
            format: int32
            nullable: true
          tagGroupName:
            type: string
            nullable: true
          isVisibleForClub:
            type: boolean
          isHistoric:
            type: boolean
          isVisibleForPersons:
            type: boolean
          isAssignableByPerson:
            type: boolean
          isAssignableByClub:
            type: boolean
          hideFromApp:
            type: boolean
          tagType:
            "$ref": "#/components/schemas/TagType"
          organisationId:
            type: string
            format: guid
          position:
            type: integer
            format: int32
          tenantType:
            "$ref": "#/components/schemas/TenantType"
    CommitteePersonDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          personId:
            type: string
            format: guid
          committeeId:
            type: integer
            format: int32
          role:
            type: string
            nullable: true
          personDisplayName:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
          usePrivateEmail:
            type: boolean
          isEmailVisible:
            type: boolean
          isPhoneVisible:
            type: boolean
          isVisible:
            type: boolean
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
            nullable: true
          committeeName:
            type: string
            nullable: true
    PagedResultDtoOfCommitteePersonDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfCommitteePersonDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfCommitteePersonDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CommitteePersonDto"
    PagedResultDtoOfCommitteeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfCommitteeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfCommitteeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CommitteeDto"
    PagedResultDtoOfContactFormConfigurationDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfContactFormConfigurationDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfContactFormConfigurationDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ContactFormConfigurationDto"
    ContactFormConfigurationDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          sendTo:
            type: string
            nullable: true
          thankYouMessage:
            type: string
            nullable: true
          webSiteId:
            type: string
            format: guid
    UpdateItemPositionDtoOfGuid:
      type: object
      additionalProperties: false
      properties:
        newIndex:
          type: integer
          format: int32
    PagedResultDtoOfContactFormQuestionDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfContactFormQuestionDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfContactFormQuestionDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ContactFormQuestionDto"
    ContactFormQuestionDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          title:
            type: string
            nullable: true
          placeholder:
            type: string
            nullable: true
          type:
            "$ref": "#/components/schemas/ContactFormQuestionType"
          selectOptions:
            type: array
            nullable: true
            items:
              type: string
          position:
            type: integer
            format: int32
          configurationId:
            type: string
            format: guid
          isRequired:
            type: boolean
    ContactFormQuestionType:
      type: string
      description: ''
      x-enumNames:
      - Email
      - ShortText
      - LongText
      - Select
      - MultiSelect
      enum:
      - Email
      - ShortText
      - LongText
      - Select
      - MultiSelect
    PagedResultDtoOfContactMomentDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfContactMomentDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfContactMomentDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ContactMomentDto"
    ContactMomentDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          attachmentUrl:
            type: string
            nullable: true
          tenantId:
            type: string
            format: guid
          contactType:
            type: string
            nullable: true
          subject:
            type: string
            nullable: true
          notes:
            type: string
            nullable: true
          response:
            type: string
            nullable: true
          date:
            type: string
            format: date-time
          userId:
            type: string
            nullable: true
          username:
            type: string
            nullable: true
          userDisplayName:
            type: string
            nullable: true
          firstName:
            type: string
            nullable: true
          nameInfix:
            type: string
            nullable: true
          lastName:
            type: string
            nullable: true
          organisationId:
            type: string
            format: guid
            nullable: true
          organisationName:
            type: string
            nullable: true
          personGuid:
            type: string
            format: guid
            nullable: true
          isFollowUpRequired:
            type: boolean
          followUpUserId:
            type: string
            nullable: true
          followUpDescription:
            type: string
            nullable: true
          followUpCompleted:
            type: boolean
    PagedResultDtoOfContributionTermDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfContributionTermDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfContributionTermDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ContributionTermDto"
    ContributionTermDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfInteger"
      - type: object
        additionalProperties: false
        properties:
          invoiceSplitCode:
            type: string
            nullable: true
          contributionTermItems:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/ContributionTermItemDto"
    ContributionTermItemDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfInteger"
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            nullable: true
          date:
            type: string
            format: date-time
    NamedEntityDtoOfInteger:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
    UpdateCustomFieldGroupPositionDto:
      allOf:
      - "$ref": "#/components/schemas/UpdateItemPositionDto"
      - type: object
        additionalProperties: false
        properties:
          Destination:
            "$ref": "#/components/schemas/CustomFieldDestination"
    PagedResultDtoOfCustomFieldGroupDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfCustomFieldGroupDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfCustomFieldGroupDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CustomFieldGroupDto"
    CustomFieldGroupDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          destination:
            "$ref": "#/components/schemas/CustomFieldDestination2"
          organisationTypeIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          disciplineId:
            type: integer
            format: int32
            nullable: true
          position:
            type: integer
            format: int32
    CustomFieldDestination2:
      type: string
      description: ''
      x-enumNames:
      - Person
      - Organisation
      enum:
      - Person
      - Organisation
    UpdateCustomFieldResponsesDto:
      type: object
      additionalProperties: false
      properties:
        responses:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CustomFieldResponseDto"
        entityId:
          type: string
          format: guid
        destination:
          "$ref": "#/components/schemas/CustomFieldDestination"
    PagedResultDtoOfCustomFieldDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfCustomFieldDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfCustomFieldDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CustomFieldDto"
    CustomFieldDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          clubId:
            type: integer
            format: int32
            nullable: true
          federationId:
            type: integer
            format: int32
            nullable: true
          description:
            type: string
            nullable: true
          position:
            type: integer
            format: int32
          customFieldType:
            "$ref": "#/components/schemas/CustomFieldType2"
          isEditableByPerson:
            type: boolean
          isEditableByOrganisation:
            type: boolean
          isPubliclyVisible:
            type: boolean
          code:
            type: string
            nullable: true
          type:
            "$ref": "#/components/schemas/FilterType"
          groupId:
            type: integer
            format: int32
            nullable: true
          groupName:
            type: string
            nullable: true
          groupPosition:
            type: integer
            format: int32
            nullable: true
          groupDisciplineId:
            type: integer
            format: int32
            nullable: true
          groupOrganisationTypeIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          options:
            type: string
            nullable: true
          destination:
            "$ref": "#/components/schemas/CustomFieldDestination2"
    CustomFieldType2:
      type: integer
      description: ''
      x-enumNames:
      - Int
      - Float
      - Bool
      - Text
      - DateTime
      - Select
      - MultiSelect
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
    FilterType:
      type: integer
      description: ''
      x-enumNames:
      - number
      - text
      - date
      - decimal
      - enumeration
      - boolean
      - enumerationstring
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
    UpdateCustomFieldPositionDto:
      allOf:
      - "$ref": "#/components/schemas/UpdateItemPositionDto"
      - type: object
        additionalProperties: false
        properties:
          groupId:
            type: integer
            format: int32
            nullable: true
    UpdateCustomFieldOptionsDto:
      type: object
      additionalProperties: false
      properties:
        options:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CustomFieldOptionDto"
    MembersByYear:
      type: object
      additionalProperties: false
      properties:
        year:
          type: string
          nullable: true
        men:
          type: integer
          format: int32
        women:
          type: integer
          format: int32
    MembersByAge:
      type: object
      additionalProperties: false
      properties:
        ageFrom:
          type: integer
          format: int32
          nullable: true
        ageTo:
          type: integer
          format: int32
          nullable: true
        ageRange:
          type: string
          nullable: true
        men:
          type: integer
          format: int32
        women:
          type: integer
          format: int32
    ClubsByYear:
      type: object
      additionalProperties: false
      properties:
        year:
          type: string
          nullable: true
        clubs:
          type: integer
          format: int32
    FederationRoleDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          color:
            type: string
            nullable: true
          clubId:
            type: integer
            format: int32
            nullable: true
          federationId:
            type: integer
            format: int32
            nullable: true
          showHistoric:
            type: boolean
          isRequired:
            type: boolean
          organisationTypes:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          emailTemplateId:
            type: integer
            format: int32
            nullable: true
    DisciplineDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          containerId:
            type: integer
            format: int32
          isVisible:
            type: boolean
          referenceDate:
            type: string
            format: date-time
            nullable: true
    PagedResultDtoOfDiscountTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfDiscountTypeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfDiscountTypeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/DiscountTypeDto"
    DiscountTypeDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          percentage:
            type: integer
            format: int32
            maximum: 100
            minimum: 1
          generalLedgerCode:
            type: string
            nullable: true
          costCenterCode:
            type: string
            nullable: true
    DocumentTypeDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          isRequired:
            type: boolean
          tagIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          destination:
            "$ref": "#/components/schemas/DocumentTypeDestination"
    DocumentTypeDestination:
      type: integer
      description: ''
      x-enumNames:
      - Person
      enum:
      - 0
    PagedResultDtoOfDocumentTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfDocumentTypeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfDocumentTypeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/DocumentTypeDto"
    DutyMemberRegistrationDto:
      type: object
      additionalProperties: false
      properties:
        occurrenceId:
          type: string
          format: guid
        personGuidsToAdd:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        personGuidsToRemove:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        dutyRoleId:
          type: integer
          format: int32
    DutyAssignmentDto:
      type: object
      additionalProperties: false
      properties:
        personGuid:
          type: string
          format: guid
        personName:
          type: string
          nullable: true
        dutyRoleName:
          type: string
          nullable: true
        dutyRolePoints:
          type: integer
          format: int32
        dutyRoleId:
          type: integer
          format: int32
          nullable: true
    PagedResultDtoOfPersonDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPersonDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPersonDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PersonDto"
    DutyAssignInBulkBackgroundJobInput:
      type: object
      additionalProperties: false
      properties:
        OrganisationId:
          type: string
          format: guid
          nullable: true
        MemberIds:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        CalendarEventId:
          type: integer
          format: int32
        MaxNumberOfAssignments:
          type: integer
          format: int32
        StartDate:
          type: string
          format: date-time
          nullable: true
        EndDate:
          type: string
          format: date-time
          nullable: true
    PagedResultDtoOfDutyCategoryDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfDutyCategoryDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfDutyCategoryDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/DutyCategoryDto"
    DutyCategoryDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
    DutyExcludedMemberToUpdateDto:
      type: object
      additionalProperties: false
      properties:
        ExcludeFromDuty:
          type: boolean
        PersonId:
          type: integer
          format: int32
        SeasonId:
          type: integer
          format: int32
    CopyExcludedMembersToSeasonDto:
      type: object
      additionalProperties: false
      properties:
        destinationSeasonId:
          type: integer
          format: int32
        sourceSeasonId:
          type: integer
          format: int32
    PagedResultDtoOfPersonDutyPointsDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPersonDutyPointsDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPersonDutyPointsDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PersonDutyPointsDto"
    PersonDutyPointsDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        guid:
          type: string
          format: guid
        fullNameInvariant:
          type: string
          nullable: true
        dutyPoints:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/DutyPointDto"
        excludedFromDutyPerSeason:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/DutyExcludedMemberDto"
    PagedResultDtoOfDutyPointDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfDutyPointDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfDutyPointDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/DutyPointDto"
    PagedResultDtoOfDutyRoleDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfDutyRoleDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfDutyRoleDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/DutyRoleDto"
    DutyRoleDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          points:
            type: integer
            format: int32
    PagedResultDtoOfEmailLogDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfEmailLogDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfEmailLogDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/EmailLogDto"
    EmailLogDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          timeStamp:
            type: string
            format: date-time
          sender:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
          cc:
            type: string
            nullable: true
          bcc:
            type: string
            nullable: true
          personId:
            type: integer
            format: int32
            nullable: true
          subject:
            type: string
            nullable: true
          body:
            type: string
            nullable: true
    PagedResultDtoOfEmailTemplateListDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfEmailTemplateListDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfEmailTemplateListDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/EmailTemplateListDto"
    EmailTemplateListDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          systemActionId:
            type: integer
            format: int32
            nullable: true
          guid:
            type: string
            format: guid
          subject:
            type: string
            nullable: true
          body:
            type: string
            nullable: true
          mailCode:
            type: string
            nullable: true
          groupCode:
            type: string
            nullable: true
          isMaster:
            type: boolean
          masterId:
            type: integer
            format: int32
            nullable: true
          senderEmail:
            type: string
            nullable: true
          senderName:
            type: string
            nullable: true
          allowedSenderId:
            type: integer
            format: int32
            nullable: true
          translations:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/EmailTemplateTranslationDto"
    EmailTemplateTranslationDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          subject:
            type: string
            nullable: true
          body:
            type: string
            nullable: true
          languageId:
            type: integer
            format: int32
            nullable: true
    EmailTemplateDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          organisationId:
            type: string
            format: guid
            nullable: true
          containerId:
            type: integer
            format: int32
            nullable: true
          systemActionId:
            type: integer
            format: int32
            nullable: true
          systemActionName:
            type: string
            nullable: true
          masterId:
            type: integer
            format: int32
            nullable: true
          groupCode:
            type: string
            nullable: true
          mailCode:
            type: string
            nullable: true
          isMaster:
            type: boolean
          isCustomTemplate:
            type: boolean
          isAdvanced:
            type: boolean
          senderDetails:
            nullable: true
            "$ref": "#/components/schemas/EmailDetailsDto"
          allowedSenderId:
            type: integer
            format: int32
            nullable: true
          translations:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/EmailTemplateTranslationDto"
    EmailDetailsDto:
      type: object
      additionalProperties: false
      properties:
        address:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    EmailTemplateLanguageDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          isDefault:
            type: boolean
    EmailTemplateParameterDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          value:
            type: string
            nullable: true
    TestEmailDto:
      type: object
      additionalProperties: false
      properties:
        organisationId:
          type: string
          format: guid
          nullable: true
        containerId:
          type: integer
          format: int32
          nullable: true
        templateId:
          type: integer
          format: int32
          nullable: true
        systemActionId:
          nullable: true
          "$ref": "#/components/schemas/SystemActions"
        emailAddress:
          type: string
          nullable: true
    SystemActions:
      type: integer
      description: ''
      x-enumNames:
      - CreateUser
      - ForgotUserPassword
      - MemberPasswordReset
      - GeneratePassword
      - TeamDutyAssigned
      - PersonDutyAssigned
      - TwoFactorAuthCode
      - NewSignUp
      - MemberPasswordResetEmailBody
      - ContactFormNotification
      - BouncedEmailNotification
      enum:
      - 1
      - 2
      - 3
      - 5
      - 6
      - 7
      - 9
      - 10
      - 11
      - 12
      - 13
    PagedResultDtoOfEsnAuditLogListDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfEsnAuditLogListDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfEsnAuditLogListDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/EsnAuditLogListDto"
    EsnAuditLogListDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          success:
            type: boolean
          details:
            type: string
            nullable: true
          processorType:
            "$ref": "#/components/schemas/EsnProcessorType2"
          fullName:
            type: string
            nullable: true
          federationMembershipIdentifier:
            type: string
            nullable: true
          insertedAt:
            type: string
            format: date-time
          entityType:
            type: string
            nullable: true
          operationType:
            type: string
            nullable: true
          functionName:
            type: string
            nullable: true
    EsnAuditLogDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          success:
            type: boolean
          details:
            type: string
            nullable: true
    PagedResultDtoOfEsnDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfEsnDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfEsnDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/EsnDto"
    EsnDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          endpoint:
            type: string
            nullable: true
          apiKey:
            type: string
            nullable: true
          notificationEntities:
            type: string
            nullable: true
          processorType:
            "$ref": "#/components/schemas/EsnProcessorType2"
          tenantId:
            type: string
            format: guid
          additionalConfiguration:
            type: string
            nullable: true
    PagedResultDtoOfFederationRoleDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfFederationRoleDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfFederationRoleDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FederationRoleDto"
    PagedResultDtoOfFieldDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfFieldDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfFieldDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FieldDto"
    PagedResultDtoOfGradeDetailDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfGradeDetailDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfGradeDetailDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/GradeDetailDto"
    PagedResultDtoOfGradeTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfGradeTypeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfGradeTypeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/GradeTypeDto"
    GradeTypeDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          position:
            type: integer
            format: int32
          disciplineId:
            type: integer
            format: int32
          disciplineName:
            type: string
            nullable: true
          tagId:
            type: integer
            format: int32
          tagGroupId:
            type: integer
            format: int32
            nullable: true
          hasOnlyOneActiveTagInGroup:
            type: boolean
          canBeAssignedByClub:
            type: boolean
          templateName:
            type: string
            nullable: true
    PagedResultDtoOfInventoryItemDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfInventoryItemDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfInventoryItemDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/InventoryItemDto"
    InventoryItemDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          inventoryItemTypeId:
            type: integer
            format: int32
          inventoryItemTypeName:
            type: string
            nullable: true
    PagedResultDtoOfInventoryItemTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfInventoryItemTypeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfInventoryItemTypeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/InventoryItemTypeDto"
    InventoryItemTypeDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
    KnowledgeBaseArticleDto:
      allOf:
      - "$ref": "#/components/schemas/KnowledgeBaseArticleListDto"
      - type: object
        additionalProperties: false
        properties:
          body:
            type: string
            nullable: true
    KnowledgeBaseArticleListDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          title:
            type: string
            nullable: true
          group:
            type: string
            nullable: true
          position:
            type: integer
            format: int32
          systemRoles:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/NamedEntityDto"
          published:
            type: boolean
          knowledgeBaseCategoryId:
            type: integer
            format: int32
          slug:
            type: string
            nullable: true
          updatedAt:
            type: string
            format: date-time
    PagedResultDtoOfKnowledgeBaseSearchResultDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfKnowledgeBaseSearchResultDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfKnowledgeBaseSearchResultDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/KnowledgeBaseSearchResultDto"
    KnowledgeBaseSearchResultDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        surroundingText:
          type: string
          nullable: true
        categoryTitle:
          type: string
          nullable: true
    PagedResultDtoOfKnowledgeBaseCategoryDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfKnowledgeBaseCategoryDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfKnowledgeBaseCategoryDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/KnowledgeBaseCategoryDto"
    KnowledgeBaseCategoryDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          title:
            type: string
            nullable: true
          position:
            type: integer
            format: int32
          systemRoles:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/NamedEntityDto"
          isOnline:
            type: boolean
          knowledgeBaseArticles:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/KnowledgeBaseArticleListDto"
    PagedResultDtoOfLocationDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfLocationDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfLocationDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/LocationDto"
    PagedResultDtoOfMyEnvironmentConfigLookupDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfMyEnvironmentConfigLookupDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfMyEnvironmentConfigLookupDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/MyEnvironmentConfigLookupDto"
    MyEnvironmentConfigLookupDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          myEnvironmentBaseUrl:
            type: string
            nullable: true
    SystemRoleListDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          containerName:
            type: string
            nullable: true
          code:
            type: string
            nullable: true
          isDefaultForImpersonation:
            type: boolean
          aspNetRole:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDtoOfString"
    NamedEntityDtoOfString:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    NamedEntityDtoOfShort:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
        name:
          type: string
          nullable: true
    ClubListDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          federation:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
          package:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDto"
          code:
            type: string
            nullable: true
    TagLookupDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          tagType:
            "$ref": "#/components/schemas/TagType"
          groupId:
            type: integer
            format: int32
            nullable: true
          groupName:
            type: string
            nullable: true
    TagTypeGroupedDto:
      type: object
      additionalProperties: false
      properties:
        id:
          "$ref": "#/components/schemas/TagType"
        children:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagTagGroupDto"
        ungroupedTags:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SimpleTagDto"
    TagTagGroupDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        label:
          type: string
          nullable: true
        children:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SimpleTagDto"
    SimpleTagDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        label:
          type: string
          nullable: true
    TeamLookupDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          seasonId:
            type: integer
            format: int32
            nullable: true
          seasonName:
            type: string
            nullable: true
          organisationId:
            type: string
            format: guid
    LocationTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ContainerResourceDto"
      - type: object
        additionalProperties: false
        properties:
          isMainLocation:
            type: boolean
          isSportFacility:
            type: boolean
    TeamRoleDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            nullable: true
          tagId:
            type: integer
            format: int32
            nullable: true
          tagName:
            type: string
            nullable: true
          tagColor:
            type: string
            nullable: true
          isPlayer:
            type: boolean
          canSendMessages:
            type: boolean
          canOverwriteAttendance:
            type: boolean
          hasAccessToMatchForm:
            type: boolean
          hasAccessToParentInfo:
            type: boolean
          isDefault:
            type: boolean
          tenantId:
            type: string
            format: guid
            nullable: true
          containerId:
            type: integer
            format: int32
            nullable: true
    PersonAutocompleteDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          federationMembershipIdentifier:
            type: string
            nullable: true
    ExternalSystemType:
      type: string
      description: ''
      x-enumNames:
      - ExternalMemberAdministrationSystem
      - ExternalFederation
      enum:
      - ExternalMemberAdministrationSystem
      - ExternalFederation
    SeasonDto2:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          isActive:
            type: boolean
          points:
            type: integer
            format: int32
    QuickSearchDto:
      type: object
      additionalProperties: false
      properties:
        persons:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PersonQuickSearchDto"
        organisations:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OrganisationQuickSearchDto"
    PersonQuickSearchDto:
      type: object
      additionalProperties: false
      properties:
        avatarUrl:
          type: string
          nullable: true
        federationMembershipIdentifier:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        birthday:
          type: string
          format: date-time
        mobilePhone:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        memberships:
          type: array
          nullable: true
          items:
            type: string
    OrganisationQuickSearchDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            nullable: true
          logoUrl:
            type: string
            nullable: true
          city:
            type: string
            nullable: true
    PersonLookupDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          federationMembershipIdentifier:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
    PlayerLicenseTypeDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          fromAge:
            type: integer
            format: int32
            nullable: true
          toAge:
            type: integer
            format: int32
            nullable: true
          ageCalculationType:
            "$ref": "#/components/schemas/PlayerLicenseAgeCalculationType"
          canBeActiveWithOtherLicense:
            type: boolean
          canBeRequestedByPerson:
            type: boolean
          canBeCancelledByPerson:
            type: boolean
          allowPersonToSetStartDate:
            type: boolean
          allowPersonToSetEndDate:
            type: boolean
          price:
            type: number
            format: decimal
          invoiceTypeCode:
            type: string
            nullable: true
          vatCode:
            type: string
            nullable: true
          projectCode:
            type: string
            nullable: true
          generalLedgerCode:
            type: string
            nullable: true
          costCenterCode:
            type: string
            nullable: true
          needsExtraDocuments:
            type: boolean
          needsApproval:
            type: boolean
          setEndDatePer:
            "$ref": "#/components/schemas/PlayerLicenseEndDatePer"
          runtimePeriodType:
            "$ref": "#/components/schemas/PlayerLicenseRunTimePeriodType"
          runtimeDefinedPeriodType:
            nullable: true
            "$ref": "#/components/schemas/PeriodType"
          runtimePeriodAmount:
            type: integer
            format: int32
            nullable: true
          customRuntimeStartDate:
            type: string
            format: date-time
            nullable: true
          customRuntimeEndDate:
            type: string
            format: date-time
            nullable: true
          tagId:
            type: integer
            format: int32
            nullable: true
          termsAndConditionsUrl:
            type: string
            nullable: true
          mustBeMember:
            type: boolean
          limitToPlanCodes:
            type: string
            nullable: true
    PlayerLicenseAgeCalculationType:
      type: string
      description: ''
      x-enumNames:
      - DateOfRequest
      - StartOfSeason
      enum:
      - DateOfRequest
      - StartOfSeason
    PlayerLicenseRunTimePeriodType:
      type: string
      description: ''
      x-enumNames:
      - CalendarYearly
      - DefinedPeriod
      - NoEndDate
      - CustomDate
      - EndOfSeason
      - ManualEndDate
      enum:
      - CalendarYearly
      - DefinedPeriod
      - NoEndDate
      - CustomDate
      - EndOfSeason
      - ManualEndDate
    FacilityTypeDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          isVisible:
            type: boolean
          isForLocation:
            type: boolean
          containerId:
            type: integer
            format: int32
    DashboardHtmlBlockDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          htmlContent:
            type: string
            nullable: true
          containerId:
            type: integer
            format: int32
    WebPageGroupDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          webSiteId:
            type: string
            format: guid
          parentItemId:
            type: integer
            format: int32
            nullable: true
    MediaFolderDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          isPublic:
            type: boolean
          isListed:
            type: boolean
          parentMediaFolderId:
            type: string
            format: guid
            nullable: true
          tenantId:
            type: string
            format: guid
          children:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/MediaFolderDto"
          systemRoleIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          isVisibleForMembers:
            type: boolean
          visibleForMembersTagIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    MediaFolderUpdateDto:
      allOf:
      - "$ref": "#/components/schemas/MediaFolderDto"
      - type: object
        additionalProperties: false
    PagedResultDtoOfMediaFolderDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfMediaFolderDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfMediaFolderDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/MediaFolderDto"
    PagedResultDtoOfMessageRecipientDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfMessageRecipientDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfMessageRecipientDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/MessageRecipientDto"
    MessageRecipientDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          messageGuid:
            type: string
            format: guid
          messageId:
            type: integer
            format: int32
          personId:
            type: integer
            format: int32
          federationMembershipIdentifier:
            type: string
            nullable: true
          personGuid:
            type: string
            format: guid
          personDisplayName:
            type: string
            nullable: true
    MessageRecipientsDto:
      type: object
      additionalProperties: false
      properties:
        personGuids:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        committeeId:
          type: integer
          format: int32
          nullable: true
        personFederationRoleIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        teamGuids:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        occurrenceGuid:
          type: string
          format: guid
          nullable: true
        attendanceType:
          nullable: true
          "$ref": "#/components/schemas/EventAttendanceType"
    MessageDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          title:
            type: string
            nullable: true
          body:
            type: string
            nullable: true
          shortDescription:
            type: string
            nullable: true
          start:
            type: string
            format: date-time
            nullable: true
          end:
            type: string
            format: date-time
            nullable: true
          scheduled:
            type: boolean
          published:
            type: boolean
          draft:
            type: boolean
          senderDetails:
            nullable: true
            "$ref": "#/components/schemas/EmailDetailsDto"
          allowedSenderId:
            type: integer
            format: int32
            nullable: true
          allowedSender:
            nullable: true
            "$ref": "#/components/schemas/EmailDetailsDto"
          teamGuids:
            type: array
            nullable: true
            items:
              type: string
              format: guid
          sendAsEmail:
            type: boolean
            nullable: true
          personGuids:
            type: array
            nullable: true
            items:
              type: string
              format: guid
          sendPushNotification:
            type: boolean
          pushJobId:
            type: string
            nullable: true
          pushJobStatus:
            nullable: true
            "$ref": "#/components/schemas/JobStatus"
          committeeId:
            type: integer
            format: int32
            nullable: true
          personFederationRoleIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          occurrenceGuid:
            type: string
            format: guid
            nullable: true
          attendanceType:
            nullable: true
            "$ref": "#/components/schemas/EventAttendanceType"
          mailJobId:
            type: string
            nullable: true
          emailTemplateId:
            type: integer
            format: int32
            nullable: true
          mailJobStatus:
            nullable: true
            "$ref": "#/components/schemas/JobStatus"
          isSent:
            type: boolean
    JobStatus:
      type: integer
      description: ''
      x-enumNames:
      - Enqueued
      - Succeeded
      enum:
      - 0
      - 1
    DuplicateMessageDto:
      type: object
      additionalProperties: false
      properties:
        messageGuid:
          type: string
          format: guid
        copyAttachments:
          type: boolean
        copyRecipients:
          type: boolean
    SendMessageDto:
      type: object
      additionalProperties: false
      properties:
        messageId:
          type: string
          format: guid
        recipientEmail:
          type: string
          nullable: true
        senderDetails:
          nullable: true
          "$ref": "#/components/schemas/EmailDetailsDto"
        allowedSenderId:
          type: integer
          format: int32
          nullable: true
    PagedResultDtoOfMessageListDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfMessageListDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfMessageListDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/MessageListDto"
    MessageListDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          title:
            type: string
            nullable: true
          start:
            type: string
            format: date-time
            nullable: true
          end:
            type: string
            format: date-time
            nullable: true
          published:
            type: boolean
          draft:
            type: boolean
          personRecipients:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
          tagNames:
            type: array
            nullable: true
            items:
              type: string
          teamNames:
            type: array
            nullable: true
            items:
              type: string
          committeeNames:
            type: array
            nullable: true
            items:
              type: string
          mailJobId:
            type: string
            nullable: true
          createdByUserName:
            type: string
            nullable: true
    MetabaseReportDto:
      allOf:
      - "$ref": "#/components/schemas/ContainerResourceDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          reportId:
            type: integer
            format: int32
          dashboardId:
            type: integer
            format: int32
            nullable: true
          systemRoleIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          sendOrganisationId:
            type: boolean
          sendFederationMembershipIdentifier:
            type: boolean
          reportGroup:
            type: string
            nullable: true
          showOnDashboard:
            type: boolean
    MetabaseReportUrlDto:
      type: object
      additionalProperties: false
      properties:
        url:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    PagedResultDtoOfMyEnvironmentConfigDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfMyEnvironmentConfigDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfMyEnvironmentConfigDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/MyEnvironmentConfigDto"
    MyEnvironmentConfigDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          planCode:
            type: string
            nullable: true
          locale:
            "$ref": "#/components/schemas/Locale"
          extraConfig:
            type: string
            nullable: true
          canSignUpForPlan:
            type: boolean
          signUpFields:
            type: string
            nullable: true
          jwtSecretKey:
            type: string
            nullable: true
          invoiceTypeCode:
            type: string
            nullable: true
          canCreateOrganisation:
            type: boolean
          organisationSignUpCreateClub:
            type: boolean
          organisationSignUpLoginRequired:
            type: boolean
          userSystemRoleId:
            type: integer
            format: int32
            nullable: true
          organisationTypeId:
            type: integer
            format: int32
            nullable: true
          organisationId:
            type: string
            format: guid
          federationId:
            type: string
            format: guid
            nullable: true
          organisationConfirmationMailCode:
            type: string
            nullable: true
          organisationNotificationMailCode:
            type: string
            nullable: true
          organisationNotificationEmail:
            type: string
            nullable: true
          signupForOrganisationId:
            type: string
            format: guid
            nullable: true
          personSignupNotificationEmail:
            type: string
            nullable: true
          personSignupNotificationMailCode:
            type: string
            nullable: true
          restoreAccountMailCode:
            type: string
            nullable: true
          passwordResetMailCode:
            type: string
            nullable: true
          passwordResetUrl:
            type: string
            nullable: true
          personSignUpMailCode:
            type: string
            nullable: true
          paymentConfirmationUrl:
            type: string
            nullable: true
          paymentFailUrl:
            type: string
            nullable: true
          myEnvironmentBaseUrl:
            type: string
            nullable: true
          includeCustomFieldsInJwt:
            type: boolean
          defaultCountryCode:
            type: string
            nullable: true
          timeZone:
            type: string
            nullable: true
          planCodesForNewMemberships:
            type: string
            nullable: true
          invoiceTypeCodeForNewMembership:
            type: string
            nullable: true
          automaticallyAcceptNewMemberships:
            type: boolean
          payDirectlyForNewMembership:
            type: boolean
          enablePlanCancellation:
            type: boolean
          automaticallyAcceptMembershipCancellation:
            type: boolean
          enableChangingPlan:
            type: boolean
          changePlanCancellationReasonCode:
            type: string
            nullable: true
          changePlanForNextSeason:
            type: boolean
          setDateWhenChangingPlan:
            type: boolean
          allowVouchersOnPlansAndServicesPage:
            type: boolean
          serviceCodes:
            type: string
            nullable: true
          newServiceAdminNotificationMailCode:
            type: string
            nullable: true
          newServiceAdminNotificationEmail:
            type: string
            nullable: true
          plansAndServicesMutationMailCode:
            type: string
            nullable: true
    NewsItemDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
            nullable: true
          published:
            type: boolean
          sendPushNotification:
            type: boolean
          isPushNotificationSent:
            type: boolean
          pushNotificationJobId:
            type: string
            nullable: true
          teams:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/NamedEntityDto"
          tagIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          onlyVisibleForMembers:
            type: boolean
          translations:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/NewsItemTranslationDto"
    PagedResultDtoOfNewsItemListDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfNewsItemListDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfNewsItemListDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/NewsItemListDto"
    NewsItemListDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
            nullable: true
          published:
            type: boolean
    CreateOrganisationDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        required:
        - discriminator
        properties:
          discriminator:
            "$ref": "#/components/schemas/TenantType2"
          status:
            "$ref": "#/components/schemas/OrganisationStatus"
          organisationTypeId:
            type: integer
            format: int32
            nullable: true
    PagedResultDtoOfChildOrganisationListDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfChildOrganisationListDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfChildOrganisationListDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ChildOrganisationListDto"
    ChildOrganisationListDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          logo:
            type: string
            nullable: true
          code:
            type: string
            nullable: true
          number:
            type: string
            nullable: true
          contact:
            nullable: true
            "$ref": "#/components/schemas/AddressInfoDto"
          organisationTypeName:
            type: string
            nullable: true
    OrganisationDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          type:
            type: string
            nullable: true
          organisationTypeId:
            type: integer
            format: int32
            nullable: true
          organisationTypeName:
            type: string
            nullable: true
          isSportAccommodation:
            type: boolean
          description:
            type: string
            nullable: true
          logo:
            type: string
            nullable: true
          logoId:
            type: integer
            format: int32
          parent_organisation_id:
            type: string
            format: guid
            nullable: true
          status:
            "$ref": "#/components/schemas/OrganisationStatus"
          allowMembersToEditPersonalDetails:
            type: boolean
          officialName:
            type: string
            nullable: true
          coCNumber:
            type: string
            nullable: true
          vatNumber:
            type: string
            nullable: true
          defaultEmailAddress:
            type: string
            nullable: true
          defaultSenderName:
            type: string
            nullable: true
          code:
            type: string
            nullable: true
          number:
            type: string
            nullable: true
          hasOmnibusAgreement:
            type: boolean
          shortName:
            type: string
            nullable: true
          notes:
            type: string
            nullable: true
          membershipPdfReportName:
            type: string
            nullable: true
          hasQualityMark:
            type: boolean
          limitAllowedSenderEmails:
            type: boolean
          emailProvider:
            nullable: true
            "$ref": "#/components/schemas/EmailProviderType"
          emailSenderDomain:
            type: string
            nullable: true
          isSenderDomainVerified:
            type: boolean
          facilityIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          facilityNames:
            type: array
            nullable: true
            items:
              type: string
          followUpNotificationTemplateId:
            type: integer
            format: int32
            nullable: true
          customFieldsResponses:
            nullable: true
            "$ref": "#/components/schemas/UpdateCustomFieldResponsesDto"
          packageName:
            type: string
            nullable: true
          firebaseAppName:
            type: string
            nullable: true
    EmailProviderType:
      type: string
      description: ''
      x-enumNames:
      - Sendgrid
      - Postmark
      - Aws
      enum:
      - Sendgrid
      - Postmark
      - Aws
    ClubDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/OrganisationDetailsDto"
      - type: object
        additionalProperties: false
        properties:
          hasClubLicense:
            type: boolean
          placeOfIncorporation:
            type: string
            nullable: true
          dateOfIncorporation:
            type: string
            format: date-time
            nullable: true
          federationMemberSince:
            type: string
            format: date-time
            nullable: true
          federationMemberEnd:
            type: string
            format: date-time
            nullable: true
          oarImgUrl:
            type: string
            nullable: true
          externalSystemName:
            type: string
            nullable: true
          externalSystemId:
            type: integer
            format: int32
            nullable: true
          externalSystemUrl:
            type: string
            nullable: true
          externalSystemStatus:
            nullable: true
            "$ref": "#/components/schemas/ExternalSystemStatus"
          regionName:
            type: string
            nullable: true
          regionId:
            type: integer
            format: int32
            nullable: true
          hasOmnibusAgreement:
            type: boolean
          showMembersListInApp:
            type: boolean
          disciplines:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/NamedEntityDto"
    ExternalSystemStatus:
      type: string
      description: ''
      x-enumNames:
      - Unverified
      - Testing
      - Verified
      enum:
      - Unverified
      - Testing
      - Verified
    OrganisationContactDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          emails:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/EmailDto"
          links:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/LinkDto"
          phones:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PhoneDto"
    OrganisationCommunicationDetailsDto:
      type: object
      additionalProperties: false
      properties:
        defaultEmailAddress:
          type: string
          nullable: true
        defaultSenderName:
          type: string
          nullable: true
        emailProvider:
          "$ref": "#/components/schemas/EmailProviderType"
        emailSenderDomain:
          type: string
          nullable: true
        sendPushNotificationsForMessages:
          type: boolean
        limitAllowedSenderEmails:
          type: boolean
        allowedSenders:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/AllowedSenderDto"
    OrganisationFinancialDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          organisationId:
            type: string
            format: guid
          debtCollection:
            type: boolean
          bankAccountName:
            type: string
            nullable: true
          iban:
            type: string
            nullable: true
          bic:
            type: string
            nullable: true
          mandateId:
            type: string
            nullable: true
          mandateDate:
            type: string
            format: date-time
            nullable: true
          mandateEndDate:
            type: string
            format: date-time
            nullable: true
          debtCollectionTerms:
            type: integer
            format: int32
            nullable: true
          invoiceDeliveryMethod:
            "$ref": "#/components/schemas/InvoiceDeliveryMethod2"
          dontInvoiceMemberships:
            type: boolean
          startFinancialYear:
            type: string
            format: date-time
            nullable: true
          collectivePayment:
            type: boolean
    OrganisationMarketingDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          organisationId:
            type: string
            format: guid
          wantsToReceiveEmails:
            type: boolean
          wantsToReceivePromotions:
            type: boolean
          wantsToReceiveMagazine:
            type: boolean
    PersonNumberingSettingsDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          organisationId:
            type: string
            format: guid
          numberingComplexity:
            type: integer
            format: int32
            nullable: true
          isGeneractionActive:
            type: boolean
          numberingType:
            nullable: true
            "$ref": "#/components/schemas/PersonIdNumerationType"
          lastAutoNumberingId:
            type: integer
            format: int32
    PersonIdNumerationType:
      type: string
      description: ''
      x-enumNames:
      - AutoIncrement
      - RandomString
      enum:
      - AutoIncrement
      - RandomString
    PagedResultDtoOfOrganisationMemberDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOrganisationMemberDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOrganisationMemberDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OrganisationMemberDto"
    OrganisationMemberDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          personId:
            type: string
            format: guid
          organisationId:
            type: string
            format: guid
          personName:
            type: string
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
            nullable: true
          function:
            type: string
            nullable: true
    BulkOrganisationMembersDto:
      type: object
      additionalProperties: false
      properties:
        memberIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
        function:
          type: string
          nullable: true
    OrganisationMailchimpSettingsDto:
      type: object
      additionalProperties: false
      properties:
        apiKey:
          type: string
          nullable: true
        listId:
          type: string
          nullable: true
        federationRolesListId:
          type: string
          nullable: true
        defaultGroup:
          type: string
          nullable: true
        minimumAgeForSync:
          type: integer
          format: int32
        syncOnlyIfWantsToReceivePromotions:
          type: boolean
        syncOnlyActiveMembers:
          type: boolean
        organisationId:
          type: string
          format: guid
    PagedResultDtoOfOrganisationPlanAssignmentDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOrganisationPlanAssignmentDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOrganisationPlanAssignmentDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OrganisationPlanAssignmentDto"
    PagedResultDtoOfOrganisationPlanDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOrganisationPlanDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOrganisationPlanDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OrganisationPlanDto"
    OrganisationPlanDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          administrationFeeGeneralLedgerCode:
            type: string
            nullable: true
          planCode:
            type: string
            nullable: true
          price:
            type: number
            format: decimal
          registrationFee:
            type: number
            format: decimal
          registrationDescription:
            type: string
            nullable: true
          costCenterCode:
            type: string
            nullable: true
          generalLedgerCode:
            type: string
            nullable: true
          extraInvoiceLineDescription:
            type: string
            nullable: true
          discountFee:
            type: number
            format: decimal
          discountDescription:
            type: string
            nullable: true
          projectCode:
            type: string
            nullable: true
          seasonId:
            type: integer
            format: int32
            nullable: true
          season:
            nullable: true
            "$ref": "#/components/schemas/SeasonDto"
          remittanceFee:
            type: number
            format: decimal
            nullable: true
          remittanceDescription:
            type: string
            nullable: true
          administrationFee:
            type: number
            format: decimal
            nullable: true
          registrationFeeGeneralLedgerCode:
            type: string
            nullable: true
          discountFeeGeneralLedgerCode:
            type: string
            nullable: true
          remittanceFeeGeneralLedgerCode:
            type: string
            nullable: true
          isActive:
            type: boolean
          runtimePeriodType:
            "$ref": "#/components/schemas/RuntimePeriodType"
          runtimePeriodAmount:
            type: integer
            format: int32
            nullable: true
          runtimeDefinedPeriodType:
            nullable: true
            "$ref": "#/components/schemas/PeriodType"
          latestCancellationPeriodType:
            nullable: true
            "$ref": "#/components/schemas/PeriodType"
          latestCancellationPeriodAmount:
            type: integer
            format: int32
            nullable: true
    OrganisationRelationDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          organisationRelationType:
            nullable: true
            "$ref": "#/components/schemas/OrganisationRelationTypeDto"
          parentOrganisation:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
          childOrganisation:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
    OrganisationRelationTypeDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          nameForParent:
            type: string
            nullable: true
          nameForChild:
            type: string
            nullable: true
    PagedResultDtoOfOrganisationRelationTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOrganisationRelationTypeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOrganisationRelationTypeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OrganisationRelationTypeDto2"
    OrganisationRelationTypeDto2:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          nameForParent:
            type: string
            nullable: true
          nameForChild:
            type: string
            nullable: true
          isAccommodation:
            type: boolean
          isMainAccommodation:
            type: boolean
          tenantId:
            type: string
            format: guid
    PagedResultDtoOfOutfitDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOutfitDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOutfitDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OutfitDto"
    OutfitDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          shirtDescription:
            type: string
            nullable: true
          shortsDescription:
            type: string
            nullable: true
          socksDescription:
            type: string
            nullable: true
          imgUrl:
            type: string
            nullable: true
          type:
            "$ref": "#/components/schemas/OutfitType"
          tenantId:
            type: string
            format: guid
    OutfitType:
      type: string
      description: ''
      x-enumNames:
      - Home
      - Away
      - Reserve
      enum:
      - Home
      - Away
      - Reserve
    PagedResultDtoOfPersonListDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPersonListDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPersonListDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PersonListDto"
    PersonListDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          fullName:
            type: string
            nullable: true
          birthDate:
            type: string
            format: date-time
          tags:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PersonTagShortDto"
          email:
            type: string
            nullable: true
          federationMembershipIdentifier:
            type: string
            nullable: true
          clubMembershipIdentifier:
            type: string
            nullable: true
          teams:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PersonTeamDto"
          allMemberships:
            type: array
            nullable: true
            items:
              type: string
          hasCancelledMembership:
            type: boolean
    PersonTagShortDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          tagId:
            type: integer
            format: int32
          start:
            type: string
            format: date-time
          cancellation:
            type: string
            format: date-time
            nullable: true
          isVisibleForClub:
            type: boolean
          color:
            type: string
            nullable: true
          type:
            "$ref": "#/components/schemas/TagType"
    PersonTeamDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
    PagedResultDtoOfPersonUpForReviewListDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPersonUpForReviewListDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPersonUpForReviewListDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PersonUpForReviewListDto"
    PersonUpForReviewListDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          fullName:
            type: string
            nullable: true
          birthDate:
            type: string
            format: date-time
          tags:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PersonTagShortDto"
          email:
            type: string
            nullable: true
          federationMembershipIdentifier:
            type: string
            nullable: true
          clubMembershipIdentifier:
            type: string
            nullable: true
          teams:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PersonTeamDto"
          allMemberships:
            type: array
            nullable: true
            items:
              type: string
          hasCancelledMembership:
            type: boolean
          reviewReasonCode:
            type: string
            nullable: true
    PersonCsvImportPreviewModelDto:
      type: object
      additionalProperties: false
      properties:
        importData:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PersonCsvImportModelDto"
        importDefinition:
          nullable: true
          "$ref": "#/components/schemas/ImportDefinitionDto"
        customFields:
          type: array
          nullable: true
          items:
            type: string
        warning:
          type: string
          nullable: true
    PersonCsvImportModelDto:
      allOf:
      - "$ref": "#/components/schemas/PersonCsvImportFieldsDto"
      - type: object
        additionalProperties: false
        properties:
          errorMessages:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/ErrorModelDto"
          warningMessages:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/ErrorModelDto"
          AllCustomFields:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/CustomFieldValueDto"
          CustomFieldBooleans:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/CustomFieldValueDto"
          CustomFieldDateTimes:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/CustomFieldValueDto"
          CustomFieldFloats:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/CustomFieldValueDto"
          CustomFieldInts:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/CustomFieldValueDto"
          CustomFieldTexts:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/CustomFieldValueDto"
          CustomFieldSelects:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/CustomFieldValueDto"
          IsExistingEntity:
            type: boolean
          ExistingEntityId:
            type: integer
            format: int32
    ErrorModelDto:
      type: object
      additionalProperties: false
      properties:
        propertyName:
          type: string
          nullable: true
        errorMessage:
          type: string
          nullable: true
    CustomFieldValueDto:
      allOf:
      - "$ref": "#/components/schemas/UTCBaseModelDtoOfInteger"
      - type: object
        additionalProperties: false
        properties:
          groupName:
            type: string
            nullable: true
          groupOrder:
            type: integer
            format: int32
          fieldId:
            type: integer
            format: int32
          fieldName:
            type: string
            nullable: true
          fieldCode:
            type: string
            nullable: true
          fieldOrder:
            type: integer
            format: int32
          personId:
            type: integer
            format: int32
            nullable: true
          organisationId:
            type: string
            format: guid
            nullable: true
          type:
            "$ref": "#/components/schemas/CustomFieldType2"
          value:
            type: string
            nullable: true
    UTCBaseModelDtoOfInteger:
      type: object
      x-abstract: true
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        insertedAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
    PersonCsvImportFieldsDto:
      allOf:
      - "$ref": "#/components/schemas/PersonCsvBaseModelDto"
      - type: object
        additionalProperties: false
        properties:
          TagCode:
            type: string
            nullable: true
          TagStartDate:
            type: string
            nullable: true
          TagEndDate:
            type: string
            nullable: true
          FederationMembershipPlanClubCode:
            type: string
            nullable: true
          IsMembershipPaidByExternalOrganisation:
            type: string
            nullable: true
          MembershipPaidByExternalOrganisationName:
            type: string
            nullable: true
          MembershipPaidByExternalOrganisationDescription:
            type: string
            nullable: true
    PersonCsvBaseModelDto:
      type: object
      additionalProperties: false
      properties:
        ClubMembershipNumber:
          type: string
          nullable: true
        FederationMembershipNumber:
          type: string
          nullable: true
        ClubMembershipType:
          type: string
          nullable: true
        ClubMembershipStartDate:
          type: string
          nullable: true
        ClubMembershipEndDate:
          type: string
          nullable: true
        ClubMembershipCancellationDate:
          type: string
          nullable: true
        ClubMembershipCancellationReason:
          type: string
          nullable: true
        FederationMembershipType:
          type: string
          nullable: true
        FederationMembershipStartDate:
          type: string
          nullable: true
        FederationMembershipEndDate:
          type: string
          nullable: true
        FederationMembershipCancellationDate:
          type: string
          nullable: true
        FederationMembershipCancellationReason:
          type: string
          nullable: true
        NamePrefix:
          type: string
          nullable: true
        FirstName:
          type: string
          nullable: true
        NameInfix:
          type: string
          nullable: true
        LastName:
          type: string
          nullable: true
        Initials:
          type: string
          nullable: true
        Gender:
          type: string
          nullable: true
        BirthDate:
          type: string
          nullable: true
        Nationality:
          type: string
          nullable: true
        Address1:
          type: string
          nullable: true
        Address2:
          type: string
          nullable: true
        Address3:
          type: string
          nullable: true
        HouseNumber:
          type: string
          nullable: true
        HouseNumberExtension:
          type: string
          nullable: true
        PostalCode:
          type: string
          nullable: true
        City:
          type: string
          nullable: true
        Suffix:
          type: string
          nullable: true
        CountryCode:
          type: string
          nullable: true
        MobileNumber:
          type: string
          nullable: true
        PhoneNumber:
          type: string
          nullable: true
        Email:
          type: string
          nullable: true
        NameParent1:
          type: string
          nullable: true
        EmailParent1:
          type: string
          nullable: true
        PhoneParent1:
          type: string
          nullable: true
        NameParent2:
          type: string
          nullable: true
        EmailParent2:
          type: string
          nullable: true
        PhoneParent2:
          type: string
          nullable: true
        DebtCollection:
          type: string
          nullable: true
        BankAccountName:
          type: string
          nullable: true
        IBAN:
          type: string
          nullable: true
        BIC:
          type: string
          nullable: true
        MandateId:
          type: string
          nullable: true
        MandateDate:
          type: string
          nullable: true
        MandateEndDate:
          type: string
          nullable: true
        ContributionTerm:
          type: string
          nullable: true
        AED:
          type: string
          nullable: true
        GDPR:
          type: string
          nullable: true
        GDPRDate:
          type: string
          nullable: true
        VOG:
          type: string
          nullable: true
        VOGDate:
          type: string
          nullable: true
        PhotoCheck:
          type: string
          nullable: true
        PhotoUploadDate:
          type: string
          nullable: true
        PhotoValidUntil:
          type: string
          nullable: true
        WantsToReceiveEmail:
          type: string
          nullable: true
        WantsToReceivePromotions:
          type: string
          nullable: true
        NationalityVerified:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        ClubMembershipNotInvoicedReason:
          type: string
          nullable: true
        DontInvoiceMemberships:
          type: string
          nullable: true
    PagedResultDtoOfNamedEntityDtoOfGuid:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfNamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfNamedEntityDtoOfGuid:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
    PeriodicTaskConfigDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          lastRunBy:
            type: string
            nullable: true
          lastRunAt:
            type: string
            format: date-time
            nullable: true
          lastJobId:
            type: string
            format: guid
            nullable: true
          invoiceTypeId:
            type: integer
            format: int32
            nullable: true
          invoiceFormatting:
            nullable: true
            "$ref": "#/components/schemas/InvoiceFormatting2"
          planIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
              nullable: true
          serviceIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
              nullable: true
          playerLicenseTypeIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
              nullable: true
          organisationIds:
            type: array
            nullable: true
            items:
              type: string
              format: guid
              nullable: true
          organisationTypeIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
              nullable: true
          planAssignmentProlongation:
            type: boolean
          organisationPlanAssignmentProlongation:
            type: boolean
          subscriptionProlongation:
            type: boolean
          playerLicenseProlongation:
            type: boolean
          createBillingItemsForPeople:
            type: boolean
          createBillingItemsForPeopleWithCollectivePayment:
            type: boolean
          createBillingItemsForPeopleWhereMembershipIsPaidByExternal:
            type: boolean
          createBillingItemsForPeopleWithFamilyPlans:
            type: boolean
          createSubscriptionBillingItemsForPeople:
            type: boolean
          createPlayerLicenseBillingItemsForPeople:
            type: boolean
          createBillingItemsForOrganisations:
            type: boolean
          createInvoicesForPeople:
            type: boolean
          createInvoicesForOrganisations:
            type: boolean
          createInvoicesForExternalOrganisations:
            type: boolean
    InvoiceFormatting2:
      type: string
      description: ''
      x-enumNames:
      - AsComment
      - AsDescription
      enum:
      - AsComment
      - AsDescription
    PagedResultDtoOfPeriodicTaskConfigDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPeriodicTaskConfigDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPeriodicTaskConfigDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PeriodicTaskConfigDto"
    PermissionKeyDto:
      type: object
      additionalProperties: false
      properties:
        key:
          type: string
          nullable: true
    PermissionDto:
      allOf:
      - "$ref": "#/components/schemas/PermissionKeyDto"
      - type: object
        additionalProperties: false
        properties:
          moduleName:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          groupName:
            type: string
            nullable: true
          systemRoleIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    PersonContactInfoDto:
      type: object
      additionalProperties: false
      properties:
        fullName:
          type: string
          nullable: true
        hasLoginAccount:
          type: boolean
        email:
          nullable: true
          "$ref": "#/components/schemas/EmailDto"
        mobilePhone:
          nullable: true
          "$ref": "#/components/schemas/PhoneDto"
        otherPhone:
          nullable: true
          "$ref": "#/components/schemas/PhoneDto"
        address:
          nullable: true
          "$ref": "#/components/schemas/AddressInfoDto"
        parentInfos:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ParentInfoDto"
    PersonOptionsDto:
      type: object
      additionalProperties: false
      properties:
        isBlocked:
          type: boolean
        clubMembershipIdentifier:
          type: string
          nullable: true
        federationMembershipIdentifier:
          type: string
          nullable: true
    PersonDeceasedDto:
      type: object
      additionalProperties: false
      properties:
        deceasedDate:
          type: string
          format: date-time
    PersonIdentityDto:
      type: object
      additionalProperties: false
      properties:
        personId:
          type: string
          format: guid
        federationMembershipIdentifier:
          type: string
          nullable: true
    PersonUpdateDto:
      allOf:
      - "$ref": "#/components/schemas/PersonCreateDto"
      - type: object
        additionalProperties: false
        properties:
          PersonId:
            type: integer
            format: int32
            nullable: true
          PersonGuid:
            type: string
            format: guid
            nullable: true
          LanguageCode:
            type: string
            nullable: true
          CustomFieldsResponses:
            nullable: true
            "$ref": "#/components/schemas/UpdateCustomFieldResponsesDto"
    CertificateOfConductDto:
      type: object
      additionalProperties: false
      properties:
        certificateOfConduct:
          type: boolean
          nullable: true
        certificateOfConductDate:
          type: string
          format: date-time
          nullable: true
        certificateOfConductEndDate:
          type: string
          format: date-time
          nullable: true
    PersonFederationRoleDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          federationRoleId:
            type: integer
            format: int32
          roleName:
            type: string
            nullable: true
          roleColor:
            type: string
            nullable: true
          personId:
            type: integer
            format: int32
          federationMembershipIdentifier:
            type: string
            nullable: true
          personFullName:
            type: string
            nullable: true
          organisationName:
            type: string
            nullable: true
          organisationId:
            type: string
            nullable: true
          organisationTypeName:
            type: string
            nullable: true
          personEmail:
            type: string
            nullable: true
          start:
            type: string
            format: date-time
          cancellation:
            type: string
            format: date-time
            nullable: true
          usePrivateEmail:
            type: boolean
            nullable: true
          email:
            type: string
            nullable: true
          publiclyVisible:
            type: boolean
            nullable: true
          code:
            type: string
            nullable: true
          personGuid:
            type: string
            format: guid
    PersonMergeDto:
      allOf:
      - "$ref": "#/components/schemas/PersonDto"
      - type: object
        additionalProperties: false
        properties:
          planAssignments:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PlanAssignmentDto"
          qualifications:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PersonTagShortDto"
          labels:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PersonTagShortDto"
          links:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/LinkDto"
          gender:
            type: string
            nullable: true
          emailAddress:
            nullable: true
            "$ref": "#/components/schemas/EmailDto"
          clubMergeOptions:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/ClubMergeOptionsDto"
          marketingInfo:
            nullable: true
            "$ref": "#/components/schemas/MarketingInfoMergeDto"
          playerLicenses:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PlayerLicenseDto"
          personDisciplines:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PersonDisciplineDto"
          graduations:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/GradeDetailDto"
          customFieldResponses:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/CustomFieldResponseDto"
          federationRoles:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PersonFederationRoleDto"
          contactMoments:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/ContactMomentDto"
          externalSystemLinks:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/MergeExternalSystemLinkDto"
          billingInfo:
            nullable: true
            "$ref": "#/components/schemas/BillingInfoDto"
    ClubMergeOptionsDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        clubName:
          type: string
          nullable: true
        members:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ClubMemberMergeOptionsDto"
    ClubMemberMergeOptionsDto:
      type: object
      additionalProperties: false
      properties:
        personId:
          type: string
          format: guid
        federationMembershipIdentifier:
          type: string
          nullable: true
        fullName:
          type: string
          nullable: true
        toRemove:
          type: boolean
        syncFederationMembershipIdentifier:
          type: boolean
        syncPlanAssignments:
          type: boolean
        syncPersonTags:
          type: boolean
    MarketingInfoMergeDto:
      allOf:
      - "$ref": "#/components/schemas/MarketingInfoDto"
      - type: object
        additionalProperties: false
    PlayerLicenseDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        guid:
          type: string
          format: guid
        personGuid:
          type: string
          format: guid
        playerLicenseTypeId:
          type: integer
          format: int32
          nullable: true
        playerLicenseTypeName:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        cancellationDate:
          type: string
          format: date-time
          nullable: true
        status:
          "$ref": "#/components/schemas/PlayerLicenseStatus"
        paymentStatus:
          nullable: true
          "$ref": "#/components/schemas/InvoicePaymentStatus"
        note:
          type: string
          nullable: true
        termsAndConditionsAccepted:
          type: boolean
          nullable: true
    MergeExternalSystemLinkDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        externalSystemId:
          type: integer
          format: int32
        externalSystemName:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
    ClubExternalSystemInfoDto:
      type: object
      additionalProperties: false
      properties:
        clubId:
          type: integer
          format: int32
          nullable: true
        clubName:
          type: string
          nullable: true
        externalSystemName:
          type: string
          nullable: true
    ReviewRemarkDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        remark:
          type: string
          nullable: true
    PersonInitialDataDto:
      type: object
      additionalProperties: false
      properties:
        firstName:
          type: string
          nullable: true
        nameInfix:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        gender:
          "$ref": "#/components/schemas/Gender"
        birthDate:
          type: string
          format: date-time
    PersonOrganisationAccessDto:
      type: object
      additionalProperties: false
      properties:
        personGuid:
          type: string
          format: guid
        userId:
          type: string
          nullable: true
        organisationId:
          type: string
          format: guid
        organisationName:
          type: string
          nullable: true
        tenantType:
          "$ref": "#/components/schemas/TenantType"
        systemRoleIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
    PagedResultDtoOfPersonFederationRoleDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPersonFederationRoleDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPersonFederationRoleDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PersonFederationRoleDto"
    CreatePersonFederationRoleDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          federationRoleCode:
            type: string
            nullable: true
          federationRoleId:
            type: integer
            format: int32
            nullable: true
          federationMembershipIdentifier:
            type: string
            nullable: true
          personGuid:
            type: string
            format: guid
            nullable: true
          start:
            type: string
            format: date-time
          end:
            type: string
            format: date-time
            nullable: true
          usePrivateEmail:
            type: boolean
          email:
            type: string
            nullable: true
          publiclyVisible:
            type: boolean
            nullable: true
    UpdatePersonFederationRoleDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          start:
            type: string
            format: date-time
          end:
            type: string
            format: date-time
            nullable: true
          code:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
          publiclyVisible:
            type: boolean
            nullable: true
          usePrivateEmail:
            type: boolean
            nullable: true
    PersonGenerateInvoiceDto:
      type: object
      additionalProperties: false
      properties:
        invoiceTypeCode:
          type: string
          nullable: true
    MarketingLinkDto:
      allOf:
      - "$ref": "#/components/schemas/LinkDto"
      - type: object
        additionalProperties: false
        properties:
          PersonId:
            type: string
            format: guid
    PersonRelationTypeDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          containerId:
            type: integer
            format: int32
          isVisible:
            type: boolean
    CreateMultiplePersonTagsDto:
      type: object
      additionalProperties: false
      properties:
        selectedGuids:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        tagIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        start:
          type: string
          format: date-time
          nullable: true
        cancellation:
          type: string
          format: date-time
          nullable: true
    TeamMemberListDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        fullName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        teamId:
          type: integer
          format: int32
        teamName:
          type: string
          nullable: true
        teamRole:
          nullable: true
          "$ref": "#/components/schemas/TeamRoleDto"
        hasActivePlayerLicense:
          type: boolean
        cancellationReasonId:
          type: string
          format: guid
          nullable: true
        cancellationReasonName:
          type: string
          nullable: true
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
          nullable: true
        personId:
          type: string
          format: guid
        federationMembershipIdentifier:
          type: string
          nullable: true
    AddTeamMemberDto:
      type: object
      additionalProperties: false
      properties:
        personGuid:
          type: string
          format: guid
        teamRoleId:
          type: integer
          format: int32
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
          nullable: true
    PersonUpForReviewDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          status:
            "$ref": "#/components/schemas/ReviewStatus"
          reasonCode:
            "$ref": "#/components/schemas/ReviewReasonCode"
          reviewEntityId:
            type: integer
            format: int32
          remark:
            type: string
            nullable: true
    ReviewStatus:
      type: string
      description: ''
      x-enumNames:
      - Todo
      - Done
      enum:
      - Todo
      - Done
    ReviewReasonCode:
      type: string
      description: ''
      x-enumNames:
      - PlayerLicenseRequest
      - NewRegistration
      - NewAvatar
      - Other
      - NewMembership
      - MembershipCancellation
      enum:
      - PlayerLicenseRequest
      - NewRegistration
      - NewAvatar
      - Other
      - NewMembership
      - MembershipCancellation
    PagedResultDtoOfPhotoAlbumDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPhotoAlbumDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPhotoAlbumDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PhotoAlbumDto"
    PhotoAlbumDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          url:
            type: string
            nullable: true
          isPublished:
            type: boolean
          position:
            type: integer
            format: int32
    PlanAssignmentUpdateDto:
      allOf:
      - "$ref": "#/components/schemas/PlanAssignmentCreateDto"
      - type: object
        additionalProperties: false
        properties:
          currentPlanAssignmentId:
            type: integer
            format: int32
            nullable: true
    PlanAssignmentCancelDto:
      type: object
      additionalProperties: false
      properties:
        planAssignmentId:
          type: integer
          format: int32
          nullable: true
        cancellationReasonCode:
          type: string
          nullable: true
        cancellationReasonId:
          type: integer
          format: int32
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        cancellationDate:
          type: string
          format: date-time
          nullable: true
        cancellationManualEndDate:
          type: string
          format: date-time
          nullable: true
        personId:
          type: string
          format: guid
          nullable: true
    PagedResultDtoOfPlanCancellationReasonDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPlanCancellationReasonDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPlanCancellationReasonDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PlanCancellationReasonDto"
    PlanCancellationReasonDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          isDisabled:
            type: boolean
          cancellationReasonCode:
            type: string
            nullable: true
          setEndDatePer:
            "$ref": "#/components/schemas/CancellationReasonEndDatePerType"
          canSetEndDateManually:
            type: boolean
          isVisibleForMembers:
            type: boolean
          cancellationNotifyEmailTemplateId:
            type: integer
            format: int32
            nullable: true
    CancellationReasonEndDatePerType:
      type: string
      description: ''
      x-enumNames:
      - EndOfPlanAssignment
      - Directly
      - EndOfMonth
      - EndOfQuarter
      - HalfYear
      - EndOfNextMonth
      enum:
      - EndOfPlanAssignment
      - Directly
      - EndOfMonth
      - EndOfQuarter
      - HalfYear
      - EndOfNextMonth
    PagedResultDtoOfPlanDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPlanDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPlanDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PlanDto"
    CopySeasonPlansDto:
      type: object
      additionalProperties: false
      properties:
        sourceSeasonId:
          type: integer
          format: int32
        destinationSeasonId:
          type: integer
          format: int32
        inactivateSourceSeasonPlans:
          type: boolean
    PagedResultDtoOfPlayerLicenseDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPlayerLicenseDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPlayerLicenseDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PlayerLicenseDto"
    PagedResultDtoOfPlayerLicenseTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPlayerLicenseTypeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPlayerLicenseTypeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PlayerLicenseTypeDto"
    PriceTableDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          seasonId:
            type: integer
            format: int32
            nullable: true
          season:
            nullable: true
            "$ref": "#/components/schemas/SeasonDto"
          destination:
            "$ref": "#/components/schemas/PriceTableDestination"
          priceEntries:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PriceEntryDto"
    PriceEntryDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          fixedPrice:
            type: number
            format: decimal
            nullable: true
          percent:
            type: integer
            format: int32
            nullable: true
    UpdatePriceTableInput:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          seasonId:
            type: integer
            format: int32
            nullable: true
          priceEntries:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/PriceEntryDto"
    PagedResultDtoOfRegistrationFormConfigDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfRegistrationFormConfigDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfRegistrationFormConfigDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/RegistrationFormConfigDto"
    PagedResultDtoOfRentalPriceEntryDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfRentalPriceEntryDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfRentalPriceEntryDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/RentalPriceEntryDto"
    RentalPriceEntryDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          price:
            type: number
            format: decimal
          proRata:
            type: boolean
          isProlonged:
            type: boolean
          inventoryItemTypeId:
            type: integer
            format: int32
          inventoryItemTypeName:
            type: string
            nullable: true
    RentalsProlongationDto:
      type: object
      additionalProperties: false
      properties:
        organisationId:
          type: string
          format: guid
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
    PagedResultDtoOfRentalDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfRentalDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfRentalDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/RentalDto"
    RentalDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          personId:
            type: string
            format: guid
          personName:
            type: string
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          inventoryItemId:
            type: integer
            format: int32
          inventoryItemName:
            type: string
            nullable: true
          inventoryItemTypeName:
            type: string
            nullable: true
          invoiceLink:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          price:
            type: number
            format: decimal
          notInvoicedReason:
            nullable: true
            "$ref": "#/components/schemas/NotInvoicedReasons"
    PagedResultDtoOfSeasonDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfSeasonDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfSeasonDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SeasonDto"
    ServiceDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          hasAgeSettings:
            type: boolean
          startAge:
            type: integer
            format: int32
            nullable: true
          endAge:
            type: integer
            format: int32
            nullable: true
          ageDeterminationDate:
            type: string
            format: date-time
            nullable: true
          hasCountryRestriction:
            type: boolean
          allowedCountries:
            type: array
            nullable: true
            items:
              type: string
          generalLedgerCode:
            type: string
            nullable: true
          costCenterCode:
            type: string
            nullable: true
          startDate:
            type: string
            format: date-time
            nullable: true
          endDate:
            type: string
            format: date-time
            nullable: true
          price:
            type: number
            format: decimal
          extendAutomatically:
            type: boolean
          mustBeMember:
            type: boolean
          limitToPlanCodes:
            type: string
            nullable: true
          mustHaveOtherService:
            type: boolean
          mustHaveServiceGroupCode:
            type: string
            nullable: true
          runtimePeriodType:
            "$ref": "#/components/schemas/RuntimePeriodType"
          runtimePeriodAmount:
            type: integer
            format: int32
            nullable: true
          proportionalPayment:
            "$ref": "#/components/schemas/ProportionalPayment"
          priceTableId:
            type: string
            format: guid
            nullable: true
          seasonId:
            type: integer
            format: int32
            nullable: true
          seasonName:
            type: string
            nullable: true
          periodType:
            "$ref": "#/components/schemas/PeriodType"
          runtimeDefinedPeriodType:
            nullable: true
            "$ref": "#/components/schemas/PeriodType"
          code:
            type: string
            nullable: true
          generateReportDirectly:
            type: boolean
          isCancellationInsurance:
            type: boolean
          insuranceCosts:
            type: number
            format: decimal
          trialPeriodType:
            nullable: true
            "$ref": "#/components/schemas/PeriodType"
          trialPeriodAmount:
            type: integer
            format: int32
            nullable: true
          groupCode:
            type: string
            nullable: true
          groupName:
            type: string
            nullable: true
          vatCode:
            type: string
            nullable: true
          projectCode:
            type: string
            nullable: true
          reportTemplate:
            type: string
            nullable: true
          notificationEmailTemplateId:
            type: integer
            format: int32
            nullable: true
          isActive:
            type: boolean
          tagId:
            type: integer
            format: int32
            nullable: true
    CopySeasonServicesDto:
      type: object
      additionalProperties: false
      properties:
        sourceSeasonId:
          type: integer
          format: int32
        destinationSeasonId:
          type: integer
          format: int32
        inactivateSourceSeasonServices:
          type: boolean
    PagedResultDtoOfServiceDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfServiceDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfServiceDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ServiceDto"
    ThemeDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          colorCode:
            type: string
            nullable: true
          buttonColorCode:
            type: string
            nullable: true
          customStylesheetCode:
            type: string
            nullable: true
          headerLogoUrl:
            type: string
            nullable: true
          loginPageImageUrl:
            type: string
            nullable: true
          loginPageLogoUrl:
            type: string
            nullable: true
          faviconUrl:
            type: string
            nullable: true
          loginPlaceholder:
            type: string
            nullable: true
          extraLoginText:
            type: string
            nullable: true
    MenuItemDto:
      type: object
      additionalProperties: false
      properties:
        text:
          type: string
          nullable: true
        cssClass:
          type: string
          nullable: true
        controller:
          type: string
          nullable: true
        action:
          type: string
          nullable: true
        icon:
          type: string
          nullable: true
        spa:
          type: string
          nullable: true
        children:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/MenuItemDto"
    ContainerSpaLayoutDto:
      type: object
      additionalProperties: false
      properties:
        customTranslations:
          nullable: true
        timeZone:
          type: string
          nullable: true
    UserSpaLayoutDto:
      allOf:
      - "$ref": "#/components/schemas/UserDto"
      - type: object
        additionalProperties: false
        properties:
          firstName:
            type: string
            nullable: true
          nameInfix:
            type: string
            nullable: true
          lastName:
            type: string
            nullable: true
          fullName:
            type: string
            nullable: true
    UserDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfString"
      - type: object
        additionalProperties: false
        properties:
          userName:
            type: string
            nullable: true
          fullName:
            type: string
            nullable: true
          systemRole:
            type: string
            nullable: true
          systemRoleIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    EntityDtoOfString:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          nullable: true
    PagedResultDtoOfSponsorDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfSponsorDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfSponsorDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SponsorDto"
    SponsorDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          description:
            type: string
            nullable: true
          internalNotes:
            type: string
            nullable: true
          showInApp:
            type: boolean
          website:
            type: string
            nullable: true
          contactSponsor:
            type: string
            nullable: true
          contactMemberId:
            type: string
            format: guid
            nullable: true
          contactMemberName:
            type: string
            nullable: true
          logo:
            type: string
            nullable: true
    PagedResultDtoOfSportAchievementDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfSportAchievementDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfSportAchievementDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SportAchievementDto"
    SportAchievementDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          role:
            type: string
            nullable: true
          result:
            type: string
            nullable: true
          discipline:
            type: string
            nullable: true
          date:
            type: string
            format: date-time
          event:
            type: string
            nullable: true
          personGuid:
            type: string
            format: guid
    SubscriptionCsvImportResultDto:
      type: object
      additionalProperties: false
      properties:
        importData:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SubscriptionCsvImportDto"
        warning:
          type: string
          nullable: true
    SubscriptionCsvImportDto:
      type: object
      additionalProperties: false
      properties:
        errorMessages:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ErrorModelDto"
        warningMessages:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ErrorModelDto"
        federationMembershipIdentifier:
          type: string
          nullable: true
        serviceType:
          type: string
          nullable: true
        startDate:
          type: string
          nullable: true
        endDate:
          type: string
          nullable: true
        cancellationDate:
          type: string
          nullable: true
    PagedResultDtoOfSubscriptionDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfSubscriptionDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfSubscriptionDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SubscriptionDto"
    SubscriptionDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          personId:
            type: string
            format: guid
          serviceId:
            type: integer
            format: int32
          serviceName:
            type: string
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
            nullable: true
          cancellationDate:
            type: string
            format: date-time
            nullable: true
          cancellationReceivedDate:
            type: string
            format: date-time
            nullable: true
          reportTemplate:
            "$ref": "#/components/schemas/ReportTemplate"
          isPaid:
            type: boolean
          documentLink:
            type: string
            nullable: true
          documentFileName:
            type: string
            nullable: true
          notInvoicedReason:
            nullable: true
            "$ref": "#/components/schemas/NotInvoicedReasons"
          insertedAt:
            type: string
            format: date-time
          updatedAt:
            type: string
            format: date-time
          createdByUserId:
            type: string
            nullable: true
          updatedByUserId:
            type: string
            nullable: true
    ReportTemplate:
      type: integer
      description: ''
      x-enumNames:
      - TravelInsurance
      - CancellationInsurance
      - ClimbingInsurance
      enum:
      - 0
      - 1
      - 2
    PagedResultDtoOfSurveyQuestionCategoryDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfSurveyQuestionCategoryDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfSurveyQuestionCategoryDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SurveyQuestionCategoryDto"
    SurveyQuestionCategoryDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
    SurveyQuestionOptionDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        text:
          type: string
          nullable: true
    PagedResultDtoOfSurveyQuestionDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfSurveyQuestionDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfSurveyQuestionDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SurveyQuestionDto"
    SurveyQuestionDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          text:
            type: string
            nullable: true
          showOptionsInRandomOrder:
            type: boolean
          categoryId:
            type: string
            format: guid
            nullable: true
          categoryName:
            type: string
            nullable: true
          type:
            "$ref": "#/components/schemas/SurveyQuestionType"
          position:
            type: integer
            format: int32
    SurveyDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          confirmationText:
            type: string
            nullable: true
          thankYouText:
            type: string
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
          hideResults:
            type: boolean
          tagIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          tagNames:
            type: array
            nullable: true
            items:
              type: string
    CopySurveyDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
    PagedResultDtoOfSurveyDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfSurveyDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfSurveyDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SurveyDto"
    PagedResultDtoOfSurveySubmissionDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfSurveySubmissionDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfSurveySubmissionDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SurveySubmissionDto"
    SurveySubmissionDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          personId:
            type: string
            format: guid
          personName:
            type: string
            nullable: true
          insertedAt:
            type: string
            format: date-time
    SurveySubmissionDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/SurveySubmissionDto"
      - type: object
        additionalProperties: false
        properties:
          answers:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/SurveyQuestionAnswerDto"
    SurveyQuestionAnswerDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          questionId:
            type: string
            format: guid
          questionText:
            type: string
            nullable: true
          selectedOptionId:
            type: integer
            format: int32
            nullable: true
          selectedOptionText:
            type: string
            nullable: true
          openTextAnswer:
            type: string
            nullable: true
    SystemNotificationDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          title:
            type: string
            nullable: true
          startDate:
            type: string
            format: date-time
          endDate:
            type: string
            format: date-time
            nullable: true
          recipients:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/SystemNotificationRecipientDto"
          body:
            type: string
            nullable: true
          senderName:
            type: string
            nullable: true
          senderEmail:
            type: string
            nullable: true
          sendEmail:
            type: boolean
          concept:
            type: boolean
    SystemNotificationRecipientDto:
      type: object
      additionalProperties: false
      properties:
        systemRoleId:
          type: integer
          format: int32
        systemRoleName:
          type: string
          nullable: true
        containerName:
          type: string
          nullable: true
    SystemSettingValueDetailsDto:
      type: object
      additionalProperties: false
      properties:
        key:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        module:
          type: string
          nullable: true
        containerId:
          type: integer
          format: int32
        organisationId:
          type: string
          format: guid
          nullable: true
    SystemSettingValueDto:
      type: object
      additionalProperties: false
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
    TagGroupDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          tagType:
            "$ref": "#/components/schemas/TagType"
          organisationId:
            type: string
            format: guid
    UpdateTagPositionDto:
      allOf:
      - "$ref": "#/components/schemas/UpdateItemPositionDto"
      - type: object
        additionalProperties: false
        properties:
          tagGroupId:
            type: integer
            format: int32
            nullable: true
    PagedResultDtoOfTeamCancellationReasonDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfTeamCancellationReasonDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfTeamCancellationReasonDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TeamCancellationReasonDto"
    TeamCancellationReasonDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
    PagedResultDtoOfTeamCategoryDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfTeamCategoryDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfTeamCategoryDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TeamCategoryDto"
    TeamCategoryDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          amountOfPlayers:
            type: integer
            format: int32
          teamClass:
            type: string
            nullable: true
          tenantId:
            type: string
            format: guid
    PagedResultDtoOfNamedEntityDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfNamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfNamedEntityDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/NamedEntityDto"
    BulkAddTeamMembersDto:
      type: object
      additionalProperties: false
      properties:
        teamRoleId:
          type: integer
          format: int32
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
          nullable: true
        memberIds:
          type: array
          nullable: true
          items:
            type: string
            format: guid
    PagedResultDtoOfTeamMemberListDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfTeamMemberListDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfTeamMemberListDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TeamMemberListDto"
    UpdateTeamMemberDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        teamRoleId:
          type: integer
          format: int32
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
          nullable: true
        cancellationReasonId:
          type: string
          format: guid
          nullable: true
    PagedResultDtoOfTeamRoleDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfTeamRoleDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfTeamRoleDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TeamRoleDto"
    TeamDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          officialName:
            type: string
            nullable: true
          shortName:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          organisationName:
            type: string
            nullable: true
          organisationId:
            type: string
            format: guid
          membersCount:
            type: integer
            format: int32
          isLocked:
            type: boolean
          season:
            nullable: true
            "$ref": "#/components/schemas/SeasonDto"
          teamCategory:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
          teamLicenseType:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDto"
          isVisibleForFederation:
            type: boolean
          connectedOrganisationId:
            type: string
            format: guid
            nullable: true
          connectedOrganisationName:
            type: string
            nullable: true
          disciplineId:
            type: integer
            format: int32
            nullable: true
          disciplineName:
            type: string
            nullable: true
          logoUrl:
            type: string
            nullable: true
          matchCategories:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/MatchCategoryDto"
    MatchCategoryDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          disciplineId:
            type: integer
            format: int32
          disciplineName:
            type: string
            nullable: true
          gender:
            "$ref": "#/components/schemas/Gender"
          fromAge:
            type: integer
            format: int32
          toAge:
            type: integer
            format: int32
          containerId:
            type: integer
            format: int32
    CreateTeamDto:
      allOf:
      - "$ref": "#/components/schemas/BaseTeamDto"
      - type: object
        additionalProperties: false
        properties:
          officialName:
            type: string
            nullable: true
    BaseTeamDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        shortName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        seasonId:
          type: integer
          format: int32
          nullable: true
        disciplineId:
          type: integer
          format: int32
          nullable: true
        teamCategoryId:
          type: string
          format: guid
          nullable: true
        teamLicenseTypeId:
          type: integer
          format: int32
          nullable: true
        isVisibleForFederation:
          type: boolean
        connectedOrganisationId:
          type: string
          format: guid
          nullable: true
        matchCategoryIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
    UpdateTeamDto:
      allOf:
      - "$ref": "#/components/schemas/BaseTeamDto"
      - type: object
        additionalProperties: false
        properties:
          id:
            type: integer
            format: int32
    CopyTeamWrapperDto:
      type: object
      additionalProperties: false
      properties:
        copyToSeasonId:
          type: integer
          format: int32
        teamList:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CopyTeamDto"
    CopyTeamDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        copy:
          type: boolean
        includePlayers:
          type: boolean
    UpdateTeamLicenseDto:
      type: object
      additionalProperties: false
      properties:
        teamLicenseTypeId:
          type: integer
          format: int32
    PagedResultDtoOfTeamDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfTeamDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfTeamDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TeamDto"
    TopSportInfoDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          personalTrainerName:
            type: string
            nullable: true
          personalTrainerPhone:
            type: string
            nullable: true
          personalTrainerEmail:
            type: string
            nullable: true
          iaafAcreditedManagerName:
            type: string
            nullable: true
          iaafAcreditedManagerPhone:
            type: string
            nullable: true
          iaafAcreditedManagerEmail:
            type: string
            nullable: true
          educationOrWork:
            type: string
            nullable: true
          nameOfEducationOrWorkOrganisation:
            type: string
            nullable: true
          locationOfEducationOrWork:
            type: string
            nullable: true
          eLearningCompleted:
            type: boolean
          eLearningBronzeDate:
            type: string
            format: date-time
            nullable: true
          eLearningSilverDate:
            type: string
            format: date-time
            nullable: true
          eLearningGoldDate:
            type: string
            format: date-time
            nullable: true
          eaaElearningCompleted:
            type: boolean
          eaaElearningCompletedDate:
            type: string
            format: date-time
            nullable: true
          officialFirstName:
            type: string
            nullable: true
          fullName:
            type: string
            nullable: true
          idNumber:
            type: string
            nullable: true
          idValidUntil:
            type: string
            format: date-time
          idLocationOfIssue:
            type: string
            nullable: true
          olympicCommitteeStatus:
            type: string
            nullable: true
          olympicCommitteeStatusStartDate:
            type: string
            format: date-time
            nullable: true
          olympicCommitteeStatusEndDate:
            type: string
            format: date-time
            nullable: true
          athleteContractDate:
            type: string
            format: date-time
            nullable: true
          worldAthleticsAgreement:
            type: boolean
          worldAthleticsAgreementDate:
            type: string
            format: date-time
            nullable: true
          remarks:
            type: string
            nullable: true
          livesAtHome:
            type: boolean
          locationOfParents:
            type: string
            nullable: true
          bigRegistrationNumber:
            type: string
            nullable: true
          disciplines:
            type: string
            nullable: true
          permissionToSavePersonalData:
            type: boolean
          sponsors:
            type: string
            nullable: true
          support:
            type: string
            nullable: true
          clothingSize:
            type: string
            nullable: true
          frequentFlyerNumber:
            type: string
            nullable: true
          airline:
            type: string
            nullable: true
          dietPreference:
            type: string
            nullable: true
          healthInsuranceCompany:
            type: string
            nullable: true
          healthInsuranceNumber:
            type: string
            nullable: true
          hasAdditionalHealthInsurance:
            type: boolean
          hasLiabilityInsurance:
            type: boolean
    PagedResultDtoOfTrainingTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfTrainingTypeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfTrainingTypeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TrainingTypeDto"
    TrainingTypeDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          tenantId:
            type: string
            format: guid
    UserDetailsDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfString"
      - type: object
        additionalProperties: false
        properties:
          email:
            type: string
            nullable: true
          userName:
            type: string
            nullable: true
          firstName:
            type: string
            nullable: true
          nameInfix:
            type: string
            nullable: true
          lastName:
            type: string
            nullable: true
          personId:
            type: string
            format: guid
            nullable: true
          userTypeId:
            type: integer
            format: int32
          userTypeName:
            type: string
            nullable: true
          organisationId:
            type: string
            format: guid
            nullable: true
          organisationName:
            type: string
            nullable: true
          systemRoleIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
          systemRoleNames:
            type: array
            nullable: true
            items:
              type: string
          locked:
            type: boolean
          isSystemUser:
            type: boolean
          setPassword:
            type: boolean
          newPassword:
            type: string
            nullable: true
          confirmationEmailAvailable:
            type: boolean
          isActive:
            type: boolean
          createdByUser:
            type: string
            nullable: true
          insertedAt:
            type: string
            format: date-time
          updatedByUser:
            type: string
            nullable: true
          updatedAt:
            type: string
            format: date-time
          lastLoginDate:
            type: string
            format: date-time
            nullable: true
    PagedResultDtoOfUserListDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfUserListDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfUserListDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/UserListDto"
    UserListDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfString"
      - type: object
        additionalProperties: false
        properties:
          userName:
            type: string
            nullable: true
          fullName:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
          userType:
            type: string
            nullable: true
          organisationName:
            type: string
            nullable: true
          systemRoleNames:
            type: array
            nullable: true
            items:
              type: string
          locked:
            type: boolean
          confirmationEmailAvailable:
            type: boolean
    UpdateUserDto:
      allOf:
      - "$ref": "#/components/schemas/CreateUserDto"
      - type: object
        additionalProperties: false
        properties:
          id:
            type: string
            nullable: true
    CreateUserDto:
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        nameInfix:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        userTypeId:
          type: integer
          format: int32
        organisationId:
          type: string
          format: guid
          nullable: true
        systemRoleIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        isSystemUser:
          type: boolean
        setPassword:
          type: boolean
        newPassword:
          type: string
          nullable: true
        isActive:
          type: boolean
    UpdateSystemRolesForPersonDto:
      type: object
      additionalProperties: false
      properties:
        personGuid:
          type: string
          format: guid
        aspNetRoleId:
          type: integer
          format: int32
        systemRoleIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
    PagedResultDtoOfWebFileDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfWebFileDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfWebFileDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WebFileDto"
    WebFileDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          path:
            type: string
            nullable: true
          attachmentId:
            type: integer
            format: int32
          webSiteId:
            type: string
            format: guid
          caption:
            type: string
            nullable: true
    UpdateItemPositionAndParentDtoOfNullableGuidAndGuid:
      allOf:
      - "$ref": "#/components/schemas/UpdateItemPositionDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          parentItemId:
            type: string
            format: guid
            nullable: true
    WebMenuItemDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          url:
            type: string
            nullable: true
          openInNewWindow:
            type: boolean
          parentItemId:
            type: string
            format: guid
            nullable: true
          webMenuId:
            type: string
            format: guid
          position:
            type: integer
            format: int32
          isMenuBasedOnWebpageGroup:
            type: boolean
          webPageGroupId:
            type: integer
            format: int32
            nullable: true
    PagedResultDtoOfWebMenuItemDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfWebMenuItemDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfWebMenuItemDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WebMenuItemDto"
    PagedResultDtoOfWebMenuDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfWebMenuDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfWebMenuDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WebMenuDto"
    WebMenuDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          type:
            type: string
            nullable: true
          webSiteId:
            type: string
            format: guid
    UpdateItemPositionAndParentDtoOfNullableIntegerAndInteger:
      allOf:
      - "$ref": "#/components/schemas/UpdateItemPositionDtoOfInteger"
      - type: object
        additionalProperties: false
        properties:
          parentItemId:
            type: integer
            format: int32
            nullable: true
    PagedResultDtoOfWebPageGroupDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfWebPageGroupDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfWebPageGroupDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WebPageGroupDto"
    WebPageItemDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          type:
            "$ref": "#/components/schemas/WebPageItemType"
          widgetCode:
            type: string
            nullable: true
          configuration:
            type: string
            nullable: true
          content:
            type: string
            nullable: true
          showAdvancedEditor:
            type: boolean
          isMainPageItem:
            type: boolean
          webPageId:
            type: string
            format: guid
          parentItemId:
            type: string
            format: guid
            nullable: true
          webMenuId:
            type: string
            format: guid
            nullable: true
          contentBlockId:
            type: string
            format: guid
            nullable: true
          position:
            type: integer
            format: int32
          isVisible:
            type: boolean
          isLocked:
            type: boolean
          openCode:
            type: string
            nullable: true
          closeCode:
            type: string
            nullable: true
    WebPageItemType:
      type: string
      description: ''
      x-enumNames:
      - Row
      - Column
      - Widget
      - Content
      - Menu
      - ContentBlock
      - Custom
      enum:
      - Row
      - Column
      - Widget
      - Content
      - Menu
      - ContentBlock
      - Custom
    PagedResultDtoOfWebPageItemDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfWebPageItemDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfWebPageItemDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WebPageItemDto"
    PagedResultDtoOfWebPageLayoutDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfWebPageLayoutDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfWebPageLayoutDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WebPageLayoutDto"
    WebPageLayoutDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          bodyClass:
            type: string
            nullable: true
          extraCss:
            type: string
            nullable: true
          headerContentBlockId:
            type: string
            format: guid
            nullable: true
          footerContentBlockId:
            type: string
            format: guid
            nullable: true
          webSiteId:
            type: string
            format: guid
    WebPageDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          pageTitle:
            type: string
            nullable: true
          url:
            type: string
            nullable: true
          isSystemPage:
            type: boolean
          isContentBlock:
            type: boolean
          isTemplate:
            type: boolean
          webPageLayoutId:
            type: integer
            format: int32
            nullable: true
          webPageGroupId:
            type: integer
            format: int32
            nullable: true
          publishDate:
            type: string
            format: date-time
            nullable: true
          status:
            "$ref": "#/components/schemas/WebPageStatus"
          parentWebPageId:
            type: string
            format: guid
            nullable: true
          webSiteId:
            type: string
            format: guid
          siteGeneratorAuthToken:
            type: string
            nullable: true
          addToMenu:
            type: boolean
    WebPageStatus:
      type: string
      description: ''
      x-enumNames:
      - Draft
      - Published
      enum:
      - Draft
      - Published
    UpdateWebPagePositionDto:
      allOf:
      - "$ref": "#/components/schemas/UpdateItemPositionDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          webPageGroupId:
            type: integer
            format: int32
            nullable: true
    PagedResultDtoOfWebPageDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfWebPageDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfWebPageDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WebPageDto"
    CreateWebPageDto:
      allOf:
      - "$ref": "#/components/schemas/WebPageDto"
      - type: object
        additionalProperties: false
        properties:
          copyFromTemplateId:
            type: string
            format: guid
            nullable: true
    WebSiteDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          domain:
            type: string
            nullable: true
          templateCode:
            type: string
            nullable: true
          googleAnalyticsKey:
            type: string
            nullable: true
          extraConfig:
            type: string
            nullable: true
          customHeaderHtml:
            type: string
            nullable: true
          reCaptchaKey:
            type: string
            nullable: true
          reCaptchaServerKey:
            type: string
            nullable: true
          publishDate:
            type: string
            format: date-time
            nullable: true
          headerContentBlockId:
            type: string
            format: guid
            nullable: true
          customFooterHtml:
            type: string
            nullable: true
          footerContentBlockId:
            type: string
            format: guid
            nullable: true
          customCss:
            type: string
            nullable: true
          logo:
            nullable: true
            "$ref": "#/components/schemas/WebMediaDto"
          favicon:
            nullable: true
            "$ref": "#/components/schemas/WebMediaDto"
          siteGeneratorAuthToken:
            type: string
            nullable: true
          webThemeId:
            type: string
            format: guid
            nullable: true
          webThemeConfig:
            type: string
            nullable: true
    WebMediaDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          url:
            type: string
            nullable: true
          webMediaType:
            "$ref": "#/components/schemas/WebMediaType"
    WebMediaType:
      type: integer
      description: ''
      x-enumNames:
      - Logo
      - Favicon
      enum:
      - 0
      - 1
    WebSiteCredentialsDto:
      type: object
      additionalProperties: false
      properties:
        content:
          type: string
          nullable: true
    PagedResultDtoOfKNWUOrganisationDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfKNWUOrganisationDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfKNWUOrganisationDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/KNWUOrganisationDto"
    KNWUOrganisationDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          slug:
            type: string
            nullable: true
          type:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDto"
          seated_at_city:
            type: string
            nullable: true
          founded_at:
            type: string
            format: date-time
            nullable: true
          logo:
            type: string
            nullable: true
          website:
            type: string
            nullable: true
          twitter:
            type: string
            nullable: true
          instagram:
            type: string
            nullable: true
          facebook:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
          addresses:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/KNWULocationDto"
          disciplines:
            type: array
            nullable: true
            items:
              type: string
    KNWULocationDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          type:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDto"
          street:
            type: string
            nullable: true
          suffix:
            type: string
            nullable: true
          house_number:
            type: string
            nullable: true
          postal_code:
            type: string
            nullable: true
          city:
            type: string
            nullable: true
          country_code:
            type: string
            nullable: true
          geolocation:
            nullable: true
            "$ref": "#/components/schemas/GeolocationDto"
    GeolocationDto:
      type: object
      additionalProperties: false
      properties:
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
    PagedResultDtoOfKNVVLClubFeedDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfKNVVLClubFeedDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfKNVVLClubFeedDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/KNVVLClubFeedDto"
    KNVVLClubFeedDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          organisationType:
            type: string
            nullable: true
          locations:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/KNVVLLocationDto"
          emails:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/KNVVLEmailDto"
          links:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/KNVVLLinkDto"
    KNVVLLocationDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          locationType:
            type: string
            nullable: true
          address:
            nullable: true
            "$ref": "#/components/schemas/KNVVLAddressDto"
    KNVVLAddressDto:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        suffix:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberExtension:
          type: string
          nullable: true
        countryName:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
    KNVVLEmailDto:
      type: object
      additionalProperties: false
      properties:
        type:
          "$ref": "#/components/schemas/EmailType"
        address:
          type: string
          nullable: true
    KNVVLLinkDto:
      type: object
      additionalProperties: false
      properties:
        type:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
    KnvvlMembershipDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
    KNSBPersonDto:
      type: object
      additionalProperties: false
      properties:
        federation_membership_identifier:
          type: string
          nullable: true
        name_infix:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        birthdate:
          type: string
          format: date-time
        gender:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        nationality:
          type: string
          nullable: true
        address:
          nullable: true
          "$ref": "#/components/schemas/KNSBAddressDto"
        transponder_codes:
          type: array
          nullable: true
          items:
            type: string
        disciplines:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/KNSBPersonDisciplineDto"
        player_license:
          nullable: true
          "$ref": "#/components/schemas/KNSBPlayerLicenseDto"
        player_licenses:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/KNSBPlayerLicenseDto"
        membership:
          nullable: true
          "$ref": "#/components/schemas/KNSBMembershipDto"
    KNSBAddressDto:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberExtension:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
    KNSBPersonDisciplineDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        match_category_code:
          type: string
          nullable: true
        match_category_name:
          type: string
          nullable: true
        information:
          type: object
          nullable: true
          additionalProperties:
            type: string
        club_code:
          type: string
          nullable: true
    KNSBPlayerLicenseDto:
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
          nullable: true
        startdate:
          type: string
          format: date-time
        enddate:
          type: string
          format: date-time
    KNSBMembershipDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        is_match_license:
          type: boolean
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
          nullable: true
    PagedResultDtoOfKNSBClubFeedDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfKNSBClubFeedDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfKNSBClubFeedDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/KNSBClubFeedDto"
    KNSBClubFeedDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          name:
            type: string
            nullable: true
          shortName:
            type: string
            nullable: true
    PagedResultDtoOfKNSBExtendedClubFeedDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfKNSBExtendedClubFeedDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfKNSBExtendedClubFeedDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/KNSBExtendedClubFeedDto"
    KNSBExtendedClubFeedDto:
      allOf:
      - "$ref": "#/components/schemas/KNSBClubFeedDto"
      - type: object
        additionalProperties: false
        properties:
          description:
            type: string
            nullable: true
          organisationType:
            type: string
            nullable: true
          status:
            "$ref": "#/components/schemas/OrganisationStatus"
          facilities:
            type: array
            nullable: true
            items:
              type: string
          locations:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/KNSBLocationDto"
    KNSBLocationDto:
      type: object
      additionalProperties: false
      properties:
        locationType:
          type: string
          nullable: true
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberExtension:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
    PagedClubsKNRB:
      type: object
      additionalProperties: false
      properties:
        Page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo2"
        Items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedClubKNRB"
    PageInfo2:
      type: object
      additionalProperties: false
      properties:
        total_pages:
          type: integer
          format: int32
        total_entries:
          type: integer
          format: int32
        page_size:
          type: integer
          format: int32
        page_number:
          type: integer
          format: int32
    WrappedClubKNRB:
      type: object
      additionalProperties: false
      properties:
        club:
          nullable: true
          "$ref": "#/components/schemas/ClubKNRB"
    ClubKNRB:
      type: object
      additionalProperties: false
      properties:
        locations:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/LocationKNRB"
        name:
          type: string
          nullable: true
        club_code:
          type: string
          nullable: true
        club_type:
          type: string
          nullable: true
        date_of_incorporation:
          type: string
          format: date-time
          nullable: true
        phone_number:
          type: string
          nullable: true
        website_address:
          type: string
          nullable: true
        email_address:
          type: string
          nullable: true
    LocationKNRB:
      type: object
      additionalProperties: false
      properties:
        address_info:
          nullable: true
          "$ref": "#/components/schemas/AddressInfoKNRB"
        location_type:
          nullable: true
          "$ref": "#/components/schemas/LocationTypeKNRB"
    AddressInfoKNRB:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        house_number:
          type: string
          nullable: true
        house_number_extension:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
    LocationTypeKNRB:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
    PagedResultDtoOfJBNClubFeedDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfJBNClubFeedDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfJBNClubFeedDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/JBNClubFeedDto"
    JBNClubFeedDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            nullable: true
          logo:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
          phone:
            type: string
            nullable: true
          website:
            type: string
            nullable: true
          status:
            "$ref": "#/components/schemas/OrganisationStatus"
          address:
            nullable: true
            "$ref": "#/components/schemas/JBNAddressDto"
          facilities:
            type: array
            nullable: true
            items:
              type: string
          has_quality_mark:
            type: boolean
          is_deleted:
            type: boolean
    JBNAddressDto:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        house_number:
          type: string
          nullable: true
        house_number_extension:
          type: string
          nullable: true
        country_code:
          type: string
          nullable: true
        nationality:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
    JwtAuthTokenLoginWithClub:
      type: object
      additionalProperties: false
      required:
      - club_guid
      - password
      - username
      properties:
        club_guid:
          type: string
        password:
          type: string
        username:
          type: string
    ExternalFederationRoleDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
    ExternalPersonFederationRoleDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
          nullable: true
        functionary_code:
          type: string
          nullable: true
        federation_membership_identifier:
          type: string
          nullable: true
        use_private_email:
          type: boolean
          nullable: true
        email:
          type: string
          nullable: true
    WrappedMemberDetailsExternal:
      allOf:
      - "$ref": "#/components/schemas/WrappedMemberDetails"
      - type: object
        additionalProperties: false
        properties:
          member:
            nullable: true
            "$ref": "#/components/schemas/BasicMemberDetailsExternal"
    BasicMemberDetailsExternal:
      allOf:
      - "$ref": "#/components/schemas/MemberDetails"
      - type: object
        additionalProperties: false
        properties:
          gender:
            nullable: true
            "$ref": "#/components/schemas/ExternalGender2"
          email:
            type: string
            nullable: true
          mobile_phone_number:
            type: string
            nullable: true
          phone_number:
            type: string
            nullable: true
          plan_code:
            type: string
            nullable: true
          cancellation_date:
            type: string
            format: date-time
            nullable: true
          cancellation_received_date:
            type: string
            format: date-time
            nullable: true
          address:
            nullable: true
            "$ref": "#/components/schemas/Address3"
          functionaries:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/FunctionaryAssignment"
    ExternalGender2:
      type: string
      description: ''
      x-enumNames:
      - M
      - V
      - O
      enum:
      - M
      - V
      - O
    Address3:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        house_number:
          type: string
          nullable: true
        house_number_extension:
          type: string
          nullable: true
        country_code:
          type: string
          nullable: true
    FunctionaryAssignment:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        functionary_code:
          type: string
          nullable: true
        federation_membership_identifier:
          type: string
          nullable: true
        use_private_email:
          type: boolean
          nullable: true
        email:
          type: string
          nullable: true
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
          nullable: true
    WrappedMemberDetailsExternalInput:
      allOf:
      - "$ref": "#/components/schemas/WrappedMemberDetails"
      - type: object
        additionalProperties: false
        properties:
          member:
            nullable: true
            "$ref": "#/components/schemas/BasicMemberDetailsExternalInput"
    BasicMemberDetailsExternalInput:
      allOf:
      - "$ref": "#/components/schemas/BasicMemberDetails"
      - type: object
        additionalProperties: false
        properties:
          nationality_country_code:
            type: string
            nullable: true
          gender:
            nullable: true
            "$ref": "#/components/schemas/ExternalGender2"
          email:
            type: string
            nullable: true
          mobile_phone_number:
            type: string
            nullable: true
          phone_number:
            type: string
            nullable: true
          plan_code:
            type: string
            nullable: true
          member_since:
            type: string
            format: date-time
            nullable: true
          member_till:
            type: string
            format: date-time
            nullable: true
          notes:
            type: string
            nullable: true
          address:
            nullable: true
            "$ref": "#/components/schemas/Address3"
    ExternalMembershipCancellationDto:
      type: object
      additionalProperties: false
      properties:
        cancellation_reason_code:
          type: string
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
    WrappedBasicMemberDetailsExternalInput:
      type: object
      additionalProperties: false
      properties:
        member:
          nullable: true
          "$ref": "#/components/schemas/BasicMemberDetailsExternalDto"
    BasicMemberDetailsExternalDto:
      allOf:
      - "$ref": "#/components/schemas/BasicMemberDetails"
      - type: object
        additionalProperties: false
        properties:
          nationality_country_code:
            type: string
            nullable: true
          gender:
            nullable: true
            "$ref": "#/components/schemas/ExternalGender2"
          email:
            type: string
            nullable: true
          mobile_phone_number:
            type: string
            nullable: true
          phone_number:
            type: string
            nullable: true
          notes:
            type: string
            nullable: true
          address:
            nullable: true
            "$ref": "#/components/schemas/Address3"
    ExternalPlayerLicenseDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        playerLicenseTypeCode:
          type: string
          nullable: true
        playerLicenseTypeName:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        status:
          "$ref": "#/components/schemas/PlayerLicenseStatus"
    ExternalCreatePlayerLicenseDto:
      type: object
      additionalProperties: false
      properties:
        playerLicenseTypeCode:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        note:
          type: string
          nullable: true
    PagedResultDtoOfPersonExportDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPersonExportDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPersonExportDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PersonExportDto"
    PersonExportDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          id:
            type: string
            format: guid
          firstName:
            type: string
            nullable: true
          lastName:
            type: string
            nullable: true
          nameInfix:
            type: string
            nullable: true
          initials:
            type: string
            nullable: true
          gender:
            nullable: true
            "$ref": "#/components/schemas/ExportGender"
          dateOfBirth:
            type: string
            format: date-time
          federationMembershipIdentifier:
            type: string
            nullable: true
          username:
            type: string
            nullable: true
          email:
            type: string
            nullable: true
          mobilePhoneNumber:
            type: string
            nullable: true
          phoneNumber:
            type: string
            nullable: true
          memberSince:
            type: string
            format: date-time
            nullable: true
          address:
            nullable: true
            "$ref": "#/components/schemas/PersonAddressExportDto"
          customFields:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/CustomFieldResponseExportDto"
    ExportGender:
      type: string
      description: ''
      x-enumNames:
      - M
      - V
      - O
      enum:
      - M
      - V
      - O
    PersonAddressExportDto:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        houseNumber:
          type: string
          nullable: true
        houseNumberExtension:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
    CustomFieldResponseExportDto:
      type: object
      additionalProperties: false
      properties:
        customFieldId:
          type: integer
          format: int32
        customFieldName:
          type: string
          nullable: true
        response:
          type: string
          nullable: true
    PagedResultDtoOfTeamExportDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfTeamExportDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfTeamExportDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TeamExportDto"
    TeamExportDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          code:
            type: string
            nullable: true
          members:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/TeamMemberExportDto"
    TeamMemberExportDto:
      type: object
      additionalProperties: false
      properties:
        federationMembershipIdentifier:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        nameInfix:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        gender:
          "$ref": "#/components/schemas/Gender2"
        birthdate:
          type: string
          format: date-time
        teamRoleName:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
    PagedResultDtoOfTagExportDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfTagExportDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfTagExportDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagExportDto"
    TagExportDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          tagType:
            "$ref": "#/components/schemas/TagType2"
          isHistoric:
            type: boolean
    TagType2:
      type: string
      description: ''
      x-enumNames:
      - Label
      - Qualification
      - Action
      - MarketingInterest
      - Newsletter
      - LicenceTag
      enum:
      - Label
      - Qualification
      - Action
      - MarketingInterest
      - Newsletter
      - LicenceTag
    PagedResultDtoOfPersonTagExportDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPersonTagExportDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPersonTagExportDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PersonTagExportDto"
    PersonTagExportDto:
      type: object
      additionalProperties: false
      properties:
        federationMembershipIdentifier:
          type: string
          nullable: true
        personId:
          type: string
          format: guid
        firstName:
          type: string
          nullable: true
        nameInfix:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        tagId:
          type: integer
          format: int32
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
          nullable: true
    PagedResultDtoOfCalendarEventExportDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfCalendarEventExportDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfCalendarEventExportDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CalendarEventExportDto"
    CalendarEventExportDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        recurrence:
          type: string
          nullable: true
        startDateIcal:
          type: string
          format: date-time
        endDateIcal:
          type: string
          format: date-time
        locationName:
          type: string
          nullable: true
        occurrences:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CalendarEventOccurrenceExportDto"
        filters:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/CalendarEventFilterExportDto"
    CalendarEventOccurrenceExportDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        startDateUtc:
          type: string
          format: date-time
        endDateUtc:
          type: string
          format: date-time
    CalendarEventFilterExportDto:
      type: object
      additionalProperties: false
      properties:
        teamId:
          type: integer
          format: int32
          nullable: true
        tagId:
          type: integer
          format: int32
          nullable: true
    PagedClubsDotcom:
      type: object
      additionalProperties: false
      properties:
        page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo"
        clubs:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedClubDotcom"
    WrappedClubDotcom:
      type: object
      additionalProperties: false
      properties:
        club:
          nullable: true
          "$ref": "#/components/schemas/ClubDotcom"
    ClubDotcom:
      allOf:
      - "$ref": "#/components/schemas/Club"
      - type: object
        additionalProperties: false
        properties:
          federation_club_code:
            type: string
            nullable: true
    PagedClubMembersDotcom:
      type: object
      additionalProperties: false
      properties:
        page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo"
        members:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/MemberDetailsDotcom"
    MemberDetailsDotcom:
      type: object
      additionalProperties: false
      properties:
        federation_membership_identifier:
          type: string
          nullable: true
        club_id:
          type: string
          format: guid
          nullable: true
        club_name:
          type: string
          nullable: true
        gender:
          type: string
          nullable: true
        birthdate:
          type: string
          format: date-time
        firstname:
          type: string
          nullable: true
        infix:
          type: string
          nullable: true
        lastname:
          type: string
          nullable: true
        address1:
          type: string
          nullable: true
        housenumber:
          type: string
          nullable: true
        housenumber_addition:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        country_code:
          type: string
          nullable: true
        nationality_code:
          type: string
          nullable: true
        phone_number:
          type: string
          nullable: true
        mobile_number:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        member_since:
          type: string
          format: date-time
          nullable: true
        parents:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ParentsMemberDotcom"
        teams:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TeamDotcom"
        tags:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TagDotcom"
        avatar_url:
          type: string
          nullable: true
    ParentsMemberDotcom:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone_number:
          type: string
          nullable: true
    TeamDotcom:
      type: object
      additionalProperties: false
      properties:
        team_id:
          type: string
          format: guid
        team_name:
          type: string
          nullable: true
        season_name:
          type: string
          nullable: true
        role_name:
          type: string
          nullable: true
        is_player:
          type: boolean
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
          nullable: true
    TagDotcom:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
          nullable: true
    TeamCategoryDotcomDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        amount_of_players:
          type: integer
          format: int32
        team_class:
          type: string
          nullable: true
        external_id:
          type: string
          nullable: true
    DotcomPagedTeamsDto:
      type: object
      additionalProperties: false
      properties:
        page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo3"
        teams:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/DotcomTeamDto"
    PageInfo3:
      type: object
      additionalProperties: false
      properties:
        total_pages:
          type: integer
          format: int32
        total_entries:
          type: integer
          format: int32
        page_size:
          type: integer
          format: int32
        page_number:
          type: integer
          format: int32
    DotcomTeamDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        club_id:
          type: string
          format: guid
        club_name:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        abbr_name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        external_id:
          type: string
          nullable: true
        season_name:
          type: string
          nullable: true
        team_category:
          nullable: true
          "$ref": "#/components/schemas/TeamCategoryDotcomDto"
    TrainingTypeDotcomDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        external_id:
          type: string
          nullable: true
    TrainingDotcomDto:
      type: object
      additionalProperties: false
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        trainingType:
          nullable: true
          "$ref": "#/components/schemas/TrainingTypeDotcomDto"
    PagedClubsAU:
      type: object
      additionalProperties: false
      properties:
        page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo"
        clubs:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/WrappedClubAU"
    WrappedClubAU:
      type: object
      additionalProperties: false
      properties:
        club:
          nullable: true
          "$ref": "#/components/schemas/ClubAU"
    ClubAU:
      allOf:
      - "$ref": "#/components/schemas/Club"
      - type: object
        additionalProperties: false
        properties:
          club_type:
            type: string
            nullable: true
          club_code:
            type: string
            nullable: true
          address_line1:
            type: string
            nullable: true
          house_number:
            type: string
            nullable: true
          house_number_addition:
            type: string
            nullable: true
          description:
            type: string
            nullable: true
          zip_code:
            type: string
            nullable: true
          country:
            type: string
            nullable: true
          latitude:
            type: number
            format: double
            nullable: true
          longitude:
            type: number
            format: double
            nullable: true
          region_name:
            type: string
            nullable: true
          website_address:
            type: string
            nullable: true
          date_of_creation:
            type: string
            format: date-time
          club_outfit:
            type: string
            nullable: true
          facilities:
            type: array
            nullable: true
            items:
              type: string
    PagedFederationMembersAU:
      type: object
      additionalProperties: false
      properties:
        page:
          nullable: true
          "$ref": "#/components/schemas/PageInfo"
        club_members:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/MemberDetailsAU"
    MemberDetailsAU:
      type: object
      additionalProperties: false
      properties:
        customer_id:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
        prefix:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        gender:
          type: string
          nullable: true
        birth_date:
          type: string
          nullable: true
        nationality_verified:
          type: boolean
        nationality_code:
          type: string
          nullable: true
        member_address:
          nullable: true
          "$ref": "#/components/schemas/AddressDetailsAU"
        e-learning-bronze:
          type: string
          format: date-time
          nullable: true
        e-learning-silver:
          type: string
          format: date-time
          nullable: true
        e-learning-gold:
          type: string
          format: date-time
          nullable: true
        organisation_id:
          type: string
          nullable: true
        organisation_Code:
          type: string
          nullable: true
        organisation_name:
          type: string
          nullable: true
        plan_code:
          type: string
          nullable: true
        plan_name:
          type: string
          nullable: true
    AddressDetailsAU:
      type: object
      additionalProperties: false
      properties:
        streetName:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        housenumber:
          type: string
          nullable: true
        housenumberAddition:
          type: string
          nullable: true
        postalcode:
          type: string
          nullable: true
    CheckForMembership:
      type: object
      additionalProperties: false
      properties:
        is_member:
          type: boolean
        has_licence:
          type: boolean
        error_text:
          type: string
          nullable: true
    PagedResultDtoOfAuPersonDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfAuPersonDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfAuPersonDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/AuPersonDto"
    AuPersonDto:
      type: object
      additionalProperties: false
      properties:
        federation_membership_identifier:
          type: string
          nullable: true
        name_infix:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
        last_name:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        birthdate:
          type: string
          format: date-time
        gender:
          type: string
          nullable: true
        address:
          nullable: true
          "$ref": "#/components/schemas/AuAddressDto"
        plan_assignments:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/AuPlanAssignmentDto"
        updated_at:
          type: string
          format: date-time
        nationality_code:
          type: string
          nullable: true
        nationality_verified:
          type: boolean
        e-learning-bronze:
          type: string
          format: date-time
          nullable: true
        e-learning-silver:
          type: string
          format: date-time
          nullable: true
        e-learning-gold:
          type: string
          format: date-time
          nullable: true
    AuAddressDto:
      type: object
      additionalProperties: false
      properties:
        street:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        house_number:
          type: string
          nullable: true
        house_number_addition:
          type: string
          nullable: true
        postal_code:
          type: string
          nullable: true
    AuPlanAssignmentDto:
      allOf:
      - "$ref": "#/components/schemas/EntityDto"
      - type: object
        additionalProperties: false
        properties:
          start_date:
            type: string
            format: date-time
          end_date:
            type: string
            format: date-time
            nullable: true
          cancellation_date:
            type: string
            format: date-time
            nullable: true
          organisation_id:
            type: string
            format: guid
          organisation_name:
            type: string
            nullable: true
          plan_name:
            type: string
            nullable: true
          plan_code:
            type: string
            nullable: true
          category_code:
            type: string
            nullable: true
          is_match_license:
            type: boolean
          updated_at:
            type: string
            format: date-time
    ExternalOrganisationAuDto:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          format: guid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        status:
          "$ref": "#/components/schemas/OrganisationStatus"
        organisation_type:
          type: string
          nullable: true
        logo_url:
          type: string
          nullable: true
        address:
          nullable: true
          "$ref": "#/components/schemas/AddressInfoExternalAuDto"
        emails:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/EmailExternalAuDto"
        phones:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PhoneExternalAuDto"
        links:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/LinkExternalAuDto"
        is_deleted:
          type: boolean
        facilities:
          type: array
          nullable: true
          items:
            type: string
    AddressInfoExternalAuDto:
      type: object
      additionalProperties: false
      properties:
        address1:
          type: string
          nullable: true
        address2:
          type: string
          nullable: true
        zipcode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        house_number:
          type: string
          nullable: true
        house_number_extension:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        country_code:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
    EmailExternalAuDto:
      type: object
      additionalProperties: false
      properties:
        address:
          type: string
          nullable: true
    PhoneExternalAuDto:
      type: object
      additionalProperties: false
      properties:
        number:
          type: string
          nullable: true
    LinkExternalAuDto:
      type: object
      additionalProperties: false
      properties:
        address:
          type: string
          nullable: true
        service_type:
          type: string
          nullable: true
    NtbPersonDto:
      type: object
      additionalProperties: false
      properties:
        isValid:
          type: boolean
        isMember:
          type: boolean
        hasLicense:
          type: boolean
        licenseType:
          type: string
          nullable: true
        licenseValidUntil:
          type: string
          format: date-time
          nullable: true
    PagedResultDtoOfClubListDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfClubListDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfClubListDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ClubListDto"
    PagedResultDtoOfContainerListDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfContainerListDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfContainerListDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ContainerListDto"
    ContainerListDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          federations:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/NamedEntityDtoOfGuid"
    ContainerDto:
      allOf:
      - "$ref": "#/components/schemas/ContainerListDto"
      - type: object
        additionalProperties: false
        properties:
          domain:
            type: string
            nullable: true
          defaultEmailAddress:
            type: string
            nullable: true
          defaultEmailName:
            type: string
            nullable: true
          supportEmail:
            type: string
            nullable: true
          resetPasswordUrl:
            type: string
            nullable: true
          notificationFirebaseAppName:
            type: string
            nullable: true
          authenticatorAppName:
            type: string
            nullable: true
          customTheme:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDto"
          defaultLanguage:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDto"
          defaultClubPackage:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDto"
          defaultExternalOrganisationPackage:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDto"
          country:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDto"
          timeZone:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDto"
          modules:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/NamedEntityDto"
          languages:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/NamedEntityDto"
          hasCustomTranslations:
            type: boolean
          customTranslations:
            type: string
            nullable: true
    CreateContainerDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        defaultLanguageId:
          type: integer
          format: int32
        domain:
          type: string
          nullable: true
        countryId:
          type: integer
          format: int32
        timeZoneId:
          type: integer
          format: int32
        moduleIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        federationIds:
          type: array
          nullable: true
          items:
            type: string
            format: guid
        languageIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
        defaultClubPackageId:
          type: integer
          format: int32
          nullable: true
        defaultExternalOrganisationPackageId:
          type: integer
          format: int32
          nullable: true
        customThemeId:
          type: integer
          format: int32
          nullable: true
        hasCustomTranslations:
          type: boolean
        customTranslations:
          type: string
          nullable: true
    UpdateContainerDto:
      allOf:
      - "$ref": "#/components/schemas/CreateContainerDto"
      - type: object
        additionalProperties: false
        properties:
          id:
            type: integer
            format: int32
          defaultEmailAddress:
            type: string
            nullable: true
          defaultEmailName:
            type: string
            nullable: true
          supportEmail:
            type: string
            nullable: true
          resetPasswordUrl:
            type: string
            nullable: true
          notificationFirebaseAppName:
            type: string
            nullable: true
          authenticatorAppName:
            type: string
            nullable: true
    ContainerSystemSettingDto:
      allOf:
      - "$ref": "#/components/schemas/ContainerResourceDto"
      - type: object
        additionalProperties: false
        properties:
          key:
            type: string
            nullable: true
          module:
            type: string
            nullable: true
          type:
            type: string
            nullable: true
          value:
            type: string
            nullable: true
    PagedResultDtoOfDashboardHtmlBlockDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfDashboardHtmlBlockDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfDashboardHtmlBlockDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/DashboardHtmlBlockDto"
    PagedResultDtoOfDisciplineDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfDisciplineDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfDisciplineDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/DisciplineDto"
    ExportDefinitionDto:
      allOf:
      - "$ref": "#/components/schemas/ContainerResourceDto"
      - type: object
        additionalProperties: false
        properties:
          fields:
            type: object
            nullable: true
            additionalProperties:
              "$ref": "#/components/schemas/ExportPersonCsvFieldProperties"
          includeCustomFields:
            type: boolean
    ExportPersonCsvFieldProperties:
      allOf:
      - "$ref": "#/components/schemas/BasePersonCsvFieldProperties"
      - type: object
        additionalProperties: false
    PagedResultDtoOfExportDefinitionDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfExportDefinitionDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfExportDefinitionDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ExportDefinitionDto"
    PagedResultDtoOfFacilityTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfFacilityTypeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfFacilityTypeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FacilityTypeDto"
    PagedResultDtoOfFederationListDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfFederationListDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfFederationListDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FederationListDto"
    FederationListDto:
      allOf:
      - "$ref": "#/components/schemas/ContainerResourceDtoOfGuid"
      - type: object
        additionalProperties: false
        properties:
          guid:
            type: string
            format: guid
          status:
            "$ref": "#/components/schemas/OrganisationStatus"
    CreateFederationDto:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
          nullable: true
        status:
          "$ref": "#/components/schemas/OrganisationStatus"
    UpdateFederationDto:
      allOf:
      - "$ref": "#/components/schemas/CreateFederationDto"
      - type: object
        additionalProperties: false
        properties:
          id:
            type: string
            format: guid
    PagedResultDtoOfFieldMaterialDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfFieldMaterialDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfFieldMaterialDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FieldMaterialDto"
    PagedResultDtoOfFieldTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfFieldTypeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfFieldTypeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/FieldTypeDto"
    PagedResultDtoOfImportDefinitionDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfImportDefinitionDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfImportDefinitionDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ImportDefinitionDto"
    PagedResultDtoOfKnowledgeBaseArticleDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfKnowledgeBaseArticleDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfKnowledgeBaseArticleDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/KnowledgeBaseArticleDto"
    PagedResultDtoOfLocationTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfLocationTypeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfLocationTypeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/LocationTypeDto"
    ExternalApplicationModuleDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          permissions:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/ExternalPermissionDto"
    ExternalPermissionDto:
      type: object
      additionalProperties: false
      properties:
        key:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        groupName:
          type: string
          nullable: true
    SystemSettingLookupDto:
      type: object
      additionalProperties: false
      properties:
        key:
          type: string
          nullable: true
        module:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        possibleValues:
          type: string
          nullable: true
        defaultValue:
          type: string
          nullable: true
    SystemSettingLevel:
      type: integer
      description: ''
      x-enumNames:
      - Container
      - ContainerAndOrganisation
      enum:
      - 0
      - 1
    SystemRoleDto:
      allOf:
      - "$ref": "#/components/schemas/ContainerResourceDto"
      - type: object
        additionalProperties: false
        properties:
          permissions:
            type: array
            nullable: true
            items:
              "$ref": "#/components/schemas/ExternalPermissionDto"
          description:
            type: string
            nullable: true
          isApiRole:
            type: boolean
          isDefaultForImpersonation:
            type: boolean
          aspNetRole:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDtoOfString"
          code:
            type: string
            nullable: true
    PagedResultDtoOfMatchCategoryDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfMatchCategoryDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfMatchCategoryDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/MatchCategoryDto"
    PagedResultDtoOfMetabaseReportDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfMetabaseReportDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfMetabaseReportDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/MetabaseReportDto"
    PagedResultDtoOfOrganisationTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfOrganisationTypeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfOrganisationTypeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/OrganisationTypeDto"
    OrganisationTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ContainerResourceDto"
      - type: object
        additionalProperties: false
        properties:
          isPublic:
            type: boolean
          isSportAccommodation:
            type: boolean
    PagedResultDtoOfPackageDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPackageDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPackageDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PackageDto"
    PackageDto:
      allOf:
      - "$ref": "#/components/schemas/ContainerResourceDto"
      - type: object
        additionalProperties: false
        properties:
          defaultSystemRoleId:
            type: integer
            format: int32
            nullable: true
          isPremium:
            type: boolean
          systemRoleIds:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
    PagedResultDtoOfPersonRelationTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfPersonRelationTypeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfPersonRelationTypeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/PersonRelationTypeDto"
    PagedResultDtoOfRegionDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfRegionDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfRegionDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/RegionDto"
    RegionDto:
      allOf:
      - "$ref": "#/components/schemas/NamedEntityDto"
      - type: object
        additionalProperties: false
        properties:
          containerId:
            type: integer
            format: int32
          regionCode:
            type: string
            nullable: true
          isAbroad:
            type: boolean
    PagedResultDtoOfSystemNotificationDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfSystemNotificationDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfSystemNotificationDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SystemNotificationDto"
    PagedResultDtoOfSystemRoleDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfSystemRoleDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfSystemRoleDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/SystemRoleDto"
    SystemRoleUpdateDto:
      allOf:
      - "$ref": "#/components/schemas/ContainerResourceDto"
      - type: object
        additionalProperties: false
        properties:
          permissions:
            type: array
            nullable: true
            items:
              type: string
          description:
            type: string
            nullable: true
          code:
            type: string
            nullable: true
          isApiRole:
            type: boolean
          isDefaultForImpersonation:
            type: boolean
          aspNetRole:
            nullable: true
            "$ref": "#/components/schemas/NamedEntityDtoOfString"
    ThemeImageDto:
      type: object
      additionalProperties: false
      properties:
        themeId:
          type: integer
          format: int32
        attachmentType:
          "$ref": "#/components/schemas/AttachmentType"
    PagedResultDtoOfThemeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfThemeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfThemeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/ThemeDto"
    PagedResultDtoOfTransponderTypeDto:
      allOf:
      - "$ref": "#/components/schemas/ListResultDtoOfTransponderTypeDto"
      - type: object
        additionalProperties: false
        properties:
          totalCount:
            type: integer
            format: int32
    ListResultDtoOfTransponderTypeDto:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          nullable: true
          items:
            "$ref": "#/components/schemas/TransponderTypeDto"
    ChangePasswordDto:
      type: object
      additionalProperties: false
      required:
      - oldPassword
      - newPassword
      - confirmPassword
      properties:
        oldPassword:
          type: string
          minLength: 1
        newPassword:
          type: string
          minLength: 1
        confirmPassword:
          type: string
          minLength: 1
  securitySchemes:
    JWT:
      type: apiKey
      description: 'Type into the textbox: Bearer {your JWT token}.'
      name: Authorization
      in: header
security:
- JWT: []

